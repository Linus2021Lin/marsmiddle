{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/models/account-management.ts","./src/app/pages/account-management/account-management.component.ts","./src/app/pages/account-management/account-management.component.html","./src/app/pages/account-management/account-management.module.ts","./src/app/pages/account-management/formModal/account-management-modal.component.ts","./src/app/pages/account-management/formModal/account-management-modal.component.html","./src/app/pages/account-management/service/account-management-api-url.service.ts","./src/app/pages/account-management/service/account-management-table-model.service.ts","./src/app/pages/account-management/service/account-management.service.ts","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/dashboard/dashboard.module.ts","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/login/login.module.ts","./src/app/pages/login/service/constant.service.ts","./src/app/pages/login/service/login.service.ts","./src/app/pages/main-frame/component/side-menu/side-menu.component.ts","./src/app/pages/main-frame/component/side-menu/side-menu.component.html","./src/app/pages/main-frame/component/top-nav-bar/top-nav-bar.component.ts","./src/app/pages/main-frame/component/top-nav-bar/top-nav-bar.component.html","./src/app/pages/main-frame/main-frame.component.ts","./src/app/pages/main-frame/main-frame.component.html","./src/app/pages/main-frame/main-frame.module.ts","./src/app/pages/main-frame/service/constant.service.ts","./src/app/pages/main-frame/service/page-handler.service.ts","./src/app/pages/pages.module.ts","./src/app/pages/sites/formModal/controllerFormModal.component.ts","./src/app/pages/sites/formModal/controllerFormModal.component.html","./src/app/pages/sites/formModal/siteFormModal.component.ts","./src/app/pages/sites/formModal/siteFormModal.component.html","./src/app/pages/sites/service/site.service.ts","./src/app/pages/sites/service/siteApiUrl.service.ts","./src/app/pages/sites/service/siteTableModel.service.ts","./src/app/pages/sites/sites.component.ts","./src/app/pages/sites/sites.component.html","./src/app/pages/sites/sites.module.ts","./src/app/public-share/component/component.module.ts","./src/app/public-share/component/data-table/column-width.directive.ts","./src/app/public-share/component/data-table/data-table.component.ts","./src/app/public-share/component/data-table/data-table.component.html","./src/app/public-share/component/data-table/dataSource.ts","./src/app/public-share/component/data-table/table-animations.ts","./src/app/public-share/component/input/input.component.ts","./src/app/public-share/component/input/input.html","./src/app/public-share/component/label-input/label-input.component.ts","./src/app/public-share/component/label-input/label-input.component.html","./src/app/public-share/component/label-input/label-input.module.ts","./src/app/public-share/component/modal/modal.component.ts","./src/app/public-share/component/modal/basic-modal.component.html","./src/app/public-share/component/modal/application-modal.component.html","./src/app/public-share/component/modal/modal.service.ts","./src/app/public-share/component/modal/modal.token.ts","./src/app/public-share/component/modal/overlay-ref.service.ts","./src/app/public-share/ng-material/ng-material.module.ts","./src/app/public-share/service/auth.guard.ts","./src/app/public-share/service/environment.ts","./src/app/public-share/service/httpInterceptor.ts","./src/app/public-share/service/i18n.service.ts","./src/app/public-share/service/main-frame-operator.service.ts","./src/app/public-share/service/mock-data.service.ts","./src/app/public-share/service/regex.service.ts","./src/app/public-share/service/toastr-operator.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\n// import { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { MainFrameComponent } from './pages/main-frame/main-frame.component';\nimport { SitesComponent } from './pages/sites/sites.component';\nimport { AccountManagementComponent } from './pages/account-management/account-management.component';\nimport { AuthGuard } from './public-share/service/auth.guard'\n\n\nconst routes: Routes = [\n\n  {\n    path: '',\n    component: MainFrameComponent,\n    canActivate: [AuthGuard],\n    // canActivateChild: [ChildrenGuard],\n    children: [\n      { path: 'home', redirectTo: 'sites' },\n      // { path: 'dashboard', component: DashboardComponent },\n      { path: 'sites', component: SitesComponent },\n      { path: 'account-management', component: AccountManagementComponent },\n      { path: '', redirectTo: 'sites', pathMatch: 'full' },\n      { path: '**', redirectTo: 'home' }\n    ]\n  },\n  { path: 'login', component: LoginComponent },\n  { path: '**', redirectTo: 'home' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'marsmiddle';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { ToastrModule } from 'ngx-toastr';\nimport { CookieModule } from 'ngx-cookie';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { PagesModule } from './pages/pages.module';\nimport { AppComponent } from './app.component';\nimport { SitesModule } from './pages/sites/sites.module';\nimport { AccountManagementModule } from './pages/account-management/account-management.module';\nimport { TokenAuthHttpInterceptor, ErrorInterceptor } from \"./public-share/service/httpInterceptor\";\n\n// Translate Setting\nexport function i18nJsonLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\nexport function translateInitializerFactory(translate: TranslateService) {\n  return () => {\n    let language = window.localStorage['language'];\n\n    // Default language: chinese\n    if (!language) {\n      language = 'cn';\n    }\n\n    translate.setDefaultLang(language);\n\n    return translate.use(language).toPromise();\n  };\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    CookieModule.forRoot(),\n    ToastrModule.forRoot({\n      toastClass: 'ngx-toastr mars-toast',\n      closeButton: true,\n      easeTime: 500,\n      extendedTimeOut: 1000,\n      timeOut: 2000\n    }),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: i18nJsonLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    BrowserModule,\n    PagesModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SitesModule,\n    AccountManagementModule\n  ],\n  providers: [\n    // Set translate init setting before app init.\n    {\n      provide: APP_INITIALIZER,\n      useFactory: translateInitializerFactory,\n      deps: [TranslateService],\n      // let it can set multi-setting before app init\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenAuthHttpInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export enum UserRoleType {\n  administrator = 'administrator',\n  guest = 'guest'\n}\n\nexport interface AccountMgmtTableData {\n  username: string,\n  role: UserRoleType\n}\n\nexport interface UserRes {\n  username: string,\n  role: UserRoleType\n}\n\nexport interface UserPostSchema {\n  username: string,\n  password: string,\n  role: UserRoleType\n}\n\nexport interface UserPutSchema {\n  password?: string,\n  role?: UserRoleType\n}","import { Component, OnInit, ViewChild, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RegexService } from '../../public-share/service/regex.service';\nimport { LoginService } from '../login/service/login.service';\nimport { ToastrOperatorService } from '../../public-share/service/toastr-operator.service';\nimport { Subject, BehaviorSubject, Observable } from 'rxjs';\nimport { AccountMgmtService } from './service/account-management.service';\nimport { AccountMgmtTableModelService } from './service/account-management-table-model.service';\nimport { DataTableModel } from '../../models/data-table';\n\n@Component({\n  selector: 'app-account-management',\n  templateUrl: './account-management.component.html',\n  styleUrls: ['./account-management.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AccountManagementComponent implements OnInit {\n  @ViewChild(\"accountMgmtMultiActions\", { static: true }) accountMgmtMultiActionsRef: TemplateRef<any>;\n\n  accountMgmtTableModel: DataTableModel;\n  currentUser: string;\n  isGuest: boolean;\n\n  readonly accountMgmtTableData$: Observable<any[]> = this.accountMgmtService.accountMgmtTableData$;\n  readonly loading$: Observable<boolean> = this.accountMgmtService.loading$;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private regexService: RegexService,\n    private toastrOperatorService: ToastrOperatorService,\n    private accountMgmtService: AccountMgmtService,\n    private accountMgmtTableModelService: AccountMgmtTableModelService,\n    private loginService: LoginService\n\n  ) { }\n\n  ngOnInit(): void {\n    this.initialTableModel();\n    this.refreshTableData();\n    this.currentUser = this.loginService.getCurrentUsername();\n    this.isGuest = this.loginService.isGuestUser();\n  }\n\n  refreshTableData(): void {\n    this.accountMgmtService.getAccountMgmtTableData();\n  }\n\n  initialTableModel(): void {\n    this.accountMgmtTableModel = this.accountMgmtTableModelService.getAccountMgmtTableModel();\n    this.updateTableCellTemplate(this.accountMgmtTableModel);\n  }\n\n  updateTableCellTemplate(tableModel: DataTableModel): void {\n    tableModel.columns.forEach((item) => {\n      if (item.id === 'multiActions') {\n          item.customCellTemplate = this.accountMgmtMultiActionsRef;\n      }\n    });\n  }\n\n  addUser(): void {\n    this.accountMgmtService.addUser();\n  }\n\n  delete(rowData, $event): void {\n    this.accountMgmtService.deleteUserAccount(rowData.username);\n  }\n\n  update(rowData, $event): void {\n    this.accountMgmtService.updateUserAccount(rowData.username, rowData);\n  }\n\n}\n","<div class=\"mat-app-background mars-component\">\n  <div class=\"main-header tab-bar\">\n    <div class=\"header-primary\">\n      <div class=\"header-title\">{{'PAGE.MAIN_FRAME.MENU.ACCOUNT_MANAGEMENT'|translate}}</div>\n      <div class=\"flex-spacer\"></div>\n      <div header-action-show >\n          <button mat-stroked-button (click)=\"addUser()\" *ngIf=\"!isGuest\">\n            {{'PAGE.ACCOUNT_MGMT.ACTION.ADD_USER'|translate}}\n          </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"main-content tab-content\">\n\n    <div class=\"mars-middle-account-management\">\n      <app-data-table\n        [model]=\"accountMgmtTableModel\"\n        [loadingStatus]=\"loading$\"\n        [data]=\"accountMgmtTableData$\"\n        (refreshEmmiter)=\"refreshTableData()\">\n      </app-data-table>\n    </div>\n\n  </div>\n</div>\n\n<ng-template #accountMgmtMultiActions let-row=\"row\">\n  <ng-container *ngIf=\"!isGuest\">\n    <button mat-stroked-button\n            class=\"site-action-btn inline danger\"\n            (click)=\"delete(row, $event)\">\n      <span>{{'COMPONENT.DATA_TABLE.ACTION.DELETE'|translate}}</span>\n    </button>\n    <button mat-stroked-button\n            class=\"site-action-btn inline\"\n            (click)=\"update(row, $event)\"\n            style=\"margin-left: 6px;\">\n      <span>{{'COMPONENT.DATA_TABLE.ACTION.UPDATE'|translate}}</span>\n    </button>\n  </ng-container>\n  <ng-container *ngIf=\"row.username==currentUser && isGuest\">\n    <button mat-stroked-button\n            class=\"site-action-btn inline\"\n            (click)=\"update(row, $event)\"\n            style=\"margin-left: 6px;\">\n      <span>{{'PAGE.ACCOUNT_MGMT.ACTION.CHANGE_PWD'|translate}}</span>\n    </button>\n  </ng-container>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgMaterialModule } from '../../public-share/ng-material/ng-material.module';\nimport { ComponentModule } from '../../public-share/component/component.module';\nimport { AccountManagementComponent } from './account-management.component';\nimport { AccountMgmtFormModalComponent } from './formModal/account-management-modal.component';\n\n@NgModule({\n  declarations: [\n    AccountManagementComponent,\n    AccountMgmtFormModalComponent\n  ],\n  imports: [\n    CommonModule,\n    NgMaterialModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ComponentModule\n  ]\n})\nexport class AccountManagementModule { }\n","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from \"rxjs\";\nimport { RegexService } from '../../../public-share/service/regex.service';\nimport { ApplicationModalConfig } from '../../../models/modal';\nimport { MODAL_DATA, PARENT_FORM, CHILD_FORM } from '../../../public-share/component/modal/modal.token';\nimport { BaseModal } from \"../../../public-share/component/modal/modal.base\";\nimport { AccountMgmtApiUrlService } from \"../service/account-management-api-url.service\";\nimport { UserPostSchema, UserPutSchema, UserRoleType } from '../../../models/account-management';\nimport { APP_MARSMIDDLE_USER_ROLE } from '../../login/service/login.service';\n\n@Component({\n  selector: 'app-site-form-modal',\n  templateUrl: './account-management-modal.component.html',\n  styleUrls: ['../account-management.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AccountMgmtFormModalComponent implements OnInit, BaseModal {\n\n  roleOptions: UserRoleType[] = [UserRoleType.administrator, UserRoleType.guest];\n  currentUserRole: string = localStorage.getItem(APP_MARSMIDDLE_USER_ROLE);\n\n  accountMgmtForm = this.formBuilder.group({\n    userName: ['', [Validators.required, Validators.pattern(this.regexService.getRule('username_5_20'))]],\n    password: ['', [Validators.required, Validators.pattern(this.regexService.getRule('password_8'))]],\n    role: [this.roleOptions[1], [Validators.required]]\n  });\n\n  updateFlag: boolean = false;\n  updateInfo: UserPutSchema;\n  updateUserName: string;\n\n  constructor(\n    @Inject(MODAL_DATA) public modalConfig: ApplicationModalConfig,\n    private formBuilder: FormBuilder,\n    private accountMgmtApiUrlService: AccountMgmtApiUrlService,\n    private regexService: RegexService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.modalConfig.data && this.modalConfig.data.updateFlag) {\n      this.updateFlag = true;\n      this.updateInfo = this.modalConfig.data.updateInfo;\n      this.updateUserName = this.modalConfig.data.username;\n      this.accountMgmtForm.get('userName').setValue(this.updateUserName);\n      this.accountMgmtForm.get('userName').disable();\n      this.accountMgmtForm.get('password').setValidators([Validators.pattern(this.regexService.getRule('password_8'))]);\n      this.accountMgmtForm.get('role').setValue(this.updateInfo.role);\n      this.accountMgmtForm.get('role').setValidators([]);\n      if (this.currentUserRole != UserRoleType.administrator) {\n        this.accountMgmtForm.get('role').disable();\n      }\n    }\n    this.modalConfig[PARENT_FORM].addControl(CHILD_FORM, this.accountMgmtForm);\n  }\n\n  submit(): Observable<any> {\n    const data = this.accountMgmtForm.getRawValue();\n\n    return new Observable<any>(subscriber => {\n      if (this.updateFlag == true) {\n        const putUserParams: UserPutSchema = {};\n        if (data.password) { putUserParams.password = data.password; }\n        if (data.role && this.currentUserRole == UserRoleType.administrator) { putUserParams.role = data.role; }\n\n        this.accountMgmtApiUrlService.putUser(this.updateUserName, putUserParams)\n        .subscribe(\n          data =>\n            subscriber.next(true),\n          err =>\n            subscriber.error(err)\n        );\n      } else {\n        const signUpUserParams: UserPostSchema = {\n          username: data.userName,\n          password: data.password,\n          role: data.role\n        };\n        this.accountMgmtApiUrlService.signUpUser(signUpUserParams)\n        .subscribe(\n          data =>\n            subscriber.next(true),\n          err =>\n            subscriber.error(err)\n        );\n      }\n    });\n  }\n\n}\n","<form [formGroup]=\"accountMgmtForm\">\n  <mat-expansion-panel expanded=\"true\" togglePosition=\"before\" class=\"account-management-form-modal\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        {{'CONPONENT.MODAL.GENERAL_SETTINGS'|translate}}\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n\n    <app-label-input [isRequired]=\"true\" label=\"{{'PAGE.ACCOUNT_MGMT.COLUMN.USERNAME'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput formControlName=\"userName\"/>\n        <mat-hint *ngIf=\"!updateFlag\">{{'PAGE.ACCOUNT_MGMT.COLUMN.USERNAME.HINT'|translate}}</mat-hint>\n      </mat-form-field>\n    </app-label-input>\n\n    <app-label-input [isRequired]=\"!updateFlag\" label=\"{{'PAGE.ACCOUNT_MGMT.COLUMN.PASSWORD'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput type=\"password\" formControlName=\"password\"/>\n        <mat-hint>{{'PAGE.ACCOUNT_MGMT.COLUMN.PASSWORD.HINT'|translate}}</mat-hint>\n      </mat-form-field>\n    </app-label-input>\n\n    <app-label-input [isRequired]=\"!updateFlag\" label=\"{{'PAGE.ACCOUNT_MGMT.COLUMN.ROLE'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <mat-select formControlName=\"role\" disableOptionCentering>\n          <mat-option *ngFor=\"let option of roleOptions\" [value]=\"option\">\n            {{option}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </app-label-input>\n\n  </mat-expansion-panel>\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { apiUrl } from '../../../public-share/service/environment';\nimport {\n  UserRes,\n  UserPostSchema,\n  UserPutSchema\n} from '../../../models/account-management';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountMgmtApiUrlService {\n\n  constructor(\n    private http: HttpClient\n  ){ }\n\n  public getUsers(): Observable<UserRes[]> {\n    return this.http.get<UserRes[]>(`${apiUrl}/users`);\n  }\n\n  public signUpUser(userInfo: UserPostSchema) {\n    return this.http.post(`${apiUrl}/users/signup`, userInfo);\n  }\n\n  public putUser(userName: string, userInfo: UserPutSchema) {\n    return this.http.put(`${apiUrl}/users/${userName}`, userInfo);\n  }\n\n  public deleteUser(userName: string) {\n    return this.http.delete(`${apiUrl}/users/${userName}`);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Column, DataTableModel } from '../../../models/data-table';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountMgmtTableModelService {\n  constructor(\n    private translate: TranslateService\n  ) { }\n\n  getAccountMgmtTableModel(): DataTableModel {\n    let columns: Column[] = [\n      {\n        id: 'username',\n        displayName: this.translate.instant('PAGE.ACCOUNT_MGMT.COLUMN.USERNAME'),\n        maxWidth: '360px'\n      },\n      {\n        id: 'role',\n        displayName: this.translate.instant('PAGE.ACCOUNT_MGMT.COLUMN.ROLE')\n      },\n      {\n        id: 'multiActions',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.ACTIONS'),\n        sort: 'disabled',\n        maxWidth: '160px'\n      }\n    ];\n\n    return {\n      columns: columns,\n      hiddenRefresh: true,\n      hiddenCustomize: true\n    };\n  }\n\n}","import { Injectable, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subject, BehaviorSubject, Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport {\n  UserRes,\n  UserPutSchema,\n  AccountMgmtTableData\n} from '../../../models/account-management';\nimport { BasicModal, ApplicationModalConfig } from '../../../models/modal';\nimport { AccountMgmtApiUrlService } from './account-management-api-url.service';\nimport { ToastrOperatorService } from '../../../public-share/service/toastr-operator.service';\nimport { BasicModalService, ApplicationModalService } from '../../../public-share/component/modal/modal.service';\nimport { AccountMgmtFormModalComponent } from '../formModal/account-management-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountMgmtService implements OnInit, OnDestroy {\n\n  constructor(\n    private router: Router,\n    private toastrOperatorService: ToastrOperatorService,\n    private accountMgmtApiUrlService: AccountMgmtApiUrlService,\n    private appModalService: ApplicationModalService,\n    private basicModalService: BasicModalService,\n    private translate: TranslateService\n  ) { }\n\n  private _accountMgmtTableData = new BehaviorSubject<AccountMgmtTableData[]>([]);\n  private _loading = new BehaviorSubject<boolean>(true);\n  // private _message = new Subject<MessageModel>();\n  readonly accountMgmtTableData$: Observable<any> = this._accountMgmtTableData.asObservable();\n  readonly loading$: Observable<boolean> = this._loading.asObservable();\n  // readonly message$: Observable<MessageModel> = this._message.asObservable();\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this._accountMgmtTableData.unsubscribe();\n    this._loading.unsubscribe();\n    // this._message.unsubscribe();\n  }\n\n  getAccountMgmtTableData(): void {\n    this._loading.next(true);\n    this.accountMgmtApiUrlService.getUsers()\n      .pipe(\n        catchError((error) => {\n          const errorMessage = error.error?.error?.message || error.message || error;\n          this.toastrOperatorService.showErrorToastr(errorMessage, this.translate.instant('PAGE.ACCOUNT_MGMT.MESSAGE.TITLE.GET_SITE_TABLE_DATA'));\n          return of([]);\n        })\n      )\n      .subscribe((usersRes: UserRes[]) => {\n        const accountMgmtTableData: AccountMgmtTableData[] = usersRes.sort(\n          (front, behind) => {\n            const frontUserRole = front.role.toUpperCase();\n            const behindUserRole = behind.role.toUpperCase();\n            if (frontUserRole < behindUserRole) { return -1; }\n            return 0;\n          }\n        );\n\n        this._loading.next(false);\n        this._accountMgmtTableData.next(JSON.parse(JSON.stringify(accountMgmtTableData)));\n    });\n  }\n\n  addUser(): void {\n    this.openAccountMgmtFormModal('add');\n  }\n\n  updateUserAccount(username: string, rowData: AccountMgmtTableData): void {\n    this.openAccountMgmtFormModal('update', username, rowData);\n  }\n\n  openAccountMgmtFormModal(action: ('add'|'update'), username?: string, updateInfo?: AccountMgmtTableData): void {\n    let modalConfig: ApplicationModalConfig;\n    let toastrTitle: string = '';\n    let successMessage: string = '';\n    \n    switch(action) {\n      case 'add':\n          modalConfig = {\n                          title: this.translate.instant('PAGE.ACCOUNT_MGMT.ACTION.ADD_USER')\n                        };\n          toastrTitle = this.translate.instant('PAGE.ACCOUNT_MGMT.MESSAGE.TITLE.ADD_USER');\n          successMessage = this.translate.instant('PAGE.ACCOUNT_MGMT.MESSAGE.SUCCESS.ADD_USER');\n          break;\n      case 'update':\n          modalConfig = {\n                          title: this.translate.instant('PAGE.ACCOUNT_MGMT.ACTION.UPDATE_USER'),\n                          data: {\n                                  updateInfo: updateInfo,\n                                  username: username,\n                                  updateFlag: true\n                                }\n                        };\n          toastrTitle = this.translate.instant('PAGE.ACCOUNT_MGMT.MESSAGE.TITLE.UPDATE_USER');\n          successMessage = this.translate.instant('PAGE.ACCOUNT_MGMT.MESSAGE.SUCCESS.UPDATE_USER');\n          break;\n    }\n\n    const modalRef = this.appModalService.open(AccountMgmtFormModalComponent, modalConfig);\n\n    modalRef.afterClose$.subscribe(\n      res => {\n        if (!res.data) return;\n        this.toastrOperatorService.showSuccessToastr(successMessage, toastrTitle);\n        setTimeout( () => { this.getAccountMgmtTableData(); }, 500);\n      },\n      error => {\n        const errorMessage = error.error?.error?.message || error.message || error;\n        this.toastrOperatorService.showErrorToastr(errorMessage, toastrTitle);\n      }\n    )\n  }\n\n  deleteUserAccount(userName: string): void {\n    const model: BasicModal = {\n      title: this.translate.instant('PAGE.ACCOUNT_MGMT.ACTION.DELETE_USER'),\n      content: this.translate.instant('PAGE.ACCOUNT_MGMT.ACTION.DELETE_USER.CONTENT', {'username': userName}),\n      showCancelBtn: true,\n      showConfirmBtn: true\n    }\n    this.basicModalService\n      .openBasicDialog(model)\n      .afterClosed()\n      .subscribe(confirm => {\n        if (confirm) {\n          this.accountMgmtApiUrlService.deleteUser(userName)\n          .pipe(\n            catchError((error) => {\n              const errorMessage = error.error?.error?.message || error.message || error;\n              this.toastrOperatorService.showErrorToastr(errorMessage, this.translate.instant('PAGE.ACCOUNT_MGMT.MESSAGE.TITLE.DELETE_USER'));\n              return of([]);\n            })\n          )\n          .subscribe((noneRes) => {\n            if (!noneRes) {\n              this.getAccountMgmtTableData();\n              this.toastrOperatorService.showSuccessToastr(\n                this.translate.instant('PAGE.ACCOUNT_MGMT.MESSAGE.SUCCESS.DELETE_USER', {'username': userName}),\n                this.translate.instant('PAGE.ACCOUNT_MGMT.MESSAGE.TITLE.DELETE_USER')\n              );\n            }\n          })\n        }\n      });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard.component';\n\n\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule\n  ]\n})\nexport class DashboardModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { I18nService } from '../../public-share/service/i18n.service';\nimport { ConstantService } from './service/constant.service';\nimport { delay, map } from 'rxjs/operators';\nimport { LoginService } from './service/login.service';\nimport { ToastrOperatorService } from '../../public-share/service/toastr-operator.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  siteLanguage: string;\n  loginServerOptions = [];\n  languageOptions = [];\n  isLoginError: boolean = false;\n  isUnknownError: boolean = false;\n  isLoginSuccess: boolean = false;\n  isLogin: boolean = false;\n  returnUrl: string;\n\n  constructor(\n    private translate: TranslateService,\n    private toastrOperatorService: ToastrOperatorService,\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private constantService: ConstantService,\n    private i18nService: I18nService,\n    private loginService: LoginService\n  ) {\n    this.loginServerOptions = this.constantService.getLoginServerOptions();\n    this.languageOptions = this.constantService.getLanguageOptions();\n  }\n\n  ngOnInit(): void {\n    const languageCode = this.i18nService.getLanguage();\n\n    this.returnUrl = this.activatedRoute.snapshot.queryParams['returnUrl'] || '/';\n    this.siteLanguage = this.languageOptions.find(option => option.value === languageCode).label;\n\n    this.loginForm = this.formBuilder.group({\n      userName: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      // loginServer: ['auth01', [Validators.required]]\n    });\n  }\n\n  private loginWithAuth01() {\n    const defaultErrorMsgMultiLang = {\n                                      \"INVALID_USERNAME\": {\n                                        \"zh\": \"不合法的用戶名称\",\n                                        \"en\": \"Invalid Username.\"\n                                      },\n                                      \"INVALID_USERNAME_OR_PASSWORD\": {\n                                        \"zh\": \"不合法的用戶名称或密码\",\n                                        \"en\": \"Invalid Username or Password.\"\n                                      }\n                                    };\n    localStorage['marsMiddleErrorMassageMultiLanguage'] = JSON.stringify(defaultErrorMsgMultiLang);\n\n    const loginData = {\n      username: this.loginForm.get('userName').value,\n      password: this.loginForm.get('password').value\n    };\n\n    this.loginService.loginLocal(loginData).pipe(\n      map(res => {\n        this.isLogin = false;\n        this.isLoginSuccess = true;\n      }),\n      delay(200)\n    ).subscribe((val) => {\n      if (this.returnUrl == '/login') {\n        this.router.navigate(['/home']);\n      } else {\n        this.router.navigate([this.returnUrl]);\n      }\n    }, (error) => {\n      this.isLogin = false;\n      const errorMessage = error.error?.error?.message || error.message || error;\n      this.toastrOperatorService.showErrorToastr(errorMessage, this.translate.instant('PAGE.LOGIN.MESSAGE.TITLE.LOGIN'));\n      if(error.status == 403 || error.status == 401){ // check API error output\n        this.isLoginError = true;\n      } else {\n        this.isUnknownError = true;\n      }\n      console.log(\"login error ...\" + JSON.stringify(error));\n    });\n\n  }\n\n  // private loginWithAuth02() {\n  //   const loginData = {\n  //     userName: this.loginForm.get('userName').value,\n  //     password: this.loginForm.get('password').value\n  //   };\n  //   console.log('login with auth02')\n  //   console.log(loginData)\n  //   console.log('login with auth02')\n  //   // Call ajax that auth with auth02 server\n  //   this.router.navigate([this.returnUrl]);\n  // }\n\n  onClickLanguageOption(option): void {\n    if (this.siteLanguage === option.label) return;\n\n    this.siteLanguage = option.label;\n    this.translate.use(option.value);\n    this.i18nService.setLanguage(option.value);\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      // const loginServer = this.loginForm.get('loginServer').value;\n\n      this.isLogin = true;\n      this.isLoginError = false;\n      this.isUnknownError = false;\n\n      // if (loginServer === 'auth01') {\n        this.loginWithAuth01();\n      // } else if (loginServer === 'auth02') {\n      //   this.loginWithAuth02();\n      // }\n    } else {\n      this.loginForm.markAllAsTouched();\n    }\n  }\n\n}\n","<div class=\"login-content\">\n  <div class=\"logo-div\">\n    <div class=\"logo-img\"></div>\n    <svg class=\"logo-svg\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n      <symbol id=\"svg-text\">\n        <text y=\"80px\" x=\"26px\">MARS Middle</text>\n      </symbol>\n      <g>\n        <use xlink:href=\"#svg-text\" class=\"svg-text\"></use>\n      </g>\n    </svg>\n  </div>\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <mat-card>\n      <mat-card-content>\n        <mat-form-field class=\"full-width-input\">\n          <input matInput placeholder=\"{{'PAGE.LOGIN.COLUMN.USER'|translate}}\" formControlName=\"userName\" required>\n          <mat-error>\n            {{'PAGE.LOGIN.MESSAGE.ERROR.USERNAME_EMPTY'|translate}}\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"full-width-input\">\n          <input matInput type=\"password\" placeholder=\"{{'PAGE.LOGIN.COLUMN.PASSWORD'|translate}}\"\n                  formControlName=\"password\" required>\n          <mat-error>\n            {{'PAGE.LOGIN.MESSAGE.ERROR.PASSWORD_EMPTY'|translate}}\n          </mat-error>\n        </mat-form-field>\n        <!-- <mat-form-field class=\"full-width-input\">\n          <mat-label>{{'PAGE.LOGIN.COLUMN.LOGIN_SERVER'|translate}}</mat-label>\n          <mat-select matNativeControl formControlName=\"loginServer\" disableOptionCentering>\n            <mat-option *ngFor=\"let option of loginServerOptions\" [value]=\"option['value']\">\n              {{option['label']}}\n            </mat-option>\n          </mat-select>\n          <mat-error>{{'REGEX.MESSAGE.ERROR.SELECT_EMPTY'|translate}}</mat-error>\n        </mat-form-field> -->\n\n        <div class=\"spinner-div\">\n          <mat-spinner *ngIf=\"isLogin\" [diameter]=\"20\"></mat-spinner>\n        </div>\n        <mat-error *ngIf=\"isLoginError\">\n          {{'PAGE.LOGIN.MESSAGE.ERROR.ERROR_AUTH'|translate}}\n        </mat-error>\n        <mat-error *ngIf=\"isUnknownError\">\n          {{'PAGE.LOGIN.MESSAGE.ERROR.UNKNOWN_ERROR'|translate}}\n        </mat-error>\n        <div class=\"success-div\" *ngIf=\"isLoginSuccess\">\n          {{'PAGE.LOGIN.MESSAGE.SUCCESS.LOGIN_SUCCESS'| translate}}\n        </div>\n      </mat-card-content>\n\n      <mat-card-footer>\n        <div class=\"footer-div\">\n          <mat-icon class=\"language\">language</mat-icon>\n          <div class=\"i18n-option\" [matMenuTriggerFor]=\"menu\" mat-ripple>\n            {{ siteLanguage }}\n            <mat-icon>arrow_drop_down</mat-icon>\n          </div>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"onClickLanguageOption(option)\" *ngFor=\"let option of languageOptions\">\n              <span> {{ option.label }}</span>\n            </button>\n          </mat-menu>\n        </div>\n      </mat-card-footer>\n    </mat-card>\n    <button class=\"login-btn\" [disabled]=\"isLogin || isLoginSuccess\"\n            translate mat-raised-button color=\"primary\" type=\"submit\">\n      {{'PAGE.LOGIN.LOGIN_TITLE'|translate}}\n    </button>\n  </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgMaterialModule } from '../../public-share/ng-material/ng-material.module';\nimport { LoginComponent } from './login.component';\nimport { ConstantService } from './service/constant.service';\n\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    NgMaterialModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [\n    ConstantService\n  ]\n})\nexport class LoginModule { }\n","import { Injectable } from '@angular/core';\nimport { SimpleOptionObject } from '../../../public-share/interface/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConstantService {\n\n  constructor() { }\n\n  getLoginServerOptions():SimpleOptionObject[] {\n    return [\n      { label: 'Auth Server01', value: 'auth01'}\n      // { label: 'Auth Server02', value: 'auth02'}\n    ];\n  }\n\n  getLanguageOptions():SimpleOptionObject[] {\n    return [\n      { label: '中文', value: 'cn'},\n      { label: 'English', value: 'en'}\n    ];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, Subject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { CookieOptions, CookieService } from \"ngx-cookie\";\n\nimport { apiUrl } from '../../../public-share/service/environment';\nimport { User } from '../../../models/login';\nimport { UserRoleType } from '../../../models/account-management';\nimport { ToastrOperatorService } from '../../../public-share/service/toastr-operator.service';\n\nexport const APP_MARSMIDDLE_LOGIN_USER: string = 'app_login_user';\nexport const APP_MARSMIDDLE_USER_ROLE: string = 'app_user_role';\nexport const APP_MARSMIDDLE_LOGIN_TOKEN: string = 'app_login_token';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  // public routeState = {};\n  // private isFirst = true;\n  public isLoggedIn: boolean = false;\n\n  constructor(private router: Router,\n              // private cookieService: CookieService,\n              private toastrOperatorService: ToastrOperatorService,\n              private http: HttpClient) {\n  }\n\n  public postUserLogin(user: User) {\n    return this.http.post(`${apiUrl}/users/login`, user, {observe: \"response\"});\n  }\n\n  public postUserLogout() {\n    return this.http.post(`${apiUrl}/users/logout`, {}, {observe: \"response\"});\n  }\n\n  loginLocal(user: User) {\n    return this.postUserLogin(user)\n            .pipe(\n              take(1),\n              map((res: HttpResponse<any>) => {\n                const username = res.body.username;\n                const role = res.body.role;\n                const token = res.body.token;\n\n                localStorage.setItem(APP_MARSMIDDLE_LOGIN_USER, username);\n                localStorage.setItem(APP_MARSMIDDLE_USER_ROLE, role);\n                localStorage.setItem(APP_MARSMIDDLE_LOGIN_TOKEN, token);\n                this.isLoggedIn = true;\n                return res;\n              })\n            );\n  }\n\n  logout() {\n    // const loginServer = this.cookieService.get('loginServer');\n    let logoutObservable;\n\n    // if (loginServer === 'local') {\n      logoutObservable = this.postUserLogout();\n    // } else if (loginServer === 'radius') {\n    //   logoutObservable = this.logoutRadius();\n    // }\n\n    logoutObservable.subscribe(res => {\n      this.redirectToLogin();\n    }, (error) => {\n      console.log(\"login error ...\" + JSON.stringify(error));\n      this.toastrOperatorService.showErrorToastr(\"login error ...\" + JSON.stringify(error));\n    });\n  }\n\n  redirectToLogin() {\n    localStorage.removeItem(APP_MARSMIDDLE_LOGIN_USER);\n    localStorage.setItem(APP_MARSMIDDLE_LOGIN_TOKEN, '');\n    this.router.navigate(['/login']);\n  }\n\n  public isGuestUser(): boolean {\n    return localStorage.getItem(APP_MARSMIDDLE_USER_ROLE) == UserRoleType.guest;\n  }\n\n  public getCurrentUsername(): string {\n    return localStorage.getItem(APP_MARSMIDDLE_LOGIN_USER);\n  }\n  \n  // getHeadersWithToken(): HttpHeaders {\n  //   const loginToken: string = localStorage.getItem(APP_MARSMIDDLE_LOGIN_TOKEN) || '';\n  //   return new HttpHeaders({\n  //     'Authorization': 'Bearer '+ loginToken, \n  //     'Content-Type': 'application/x-www-form-urlencoded'\n  //   });\n  // }\n\n  // public pageLoader(): Observable<boolean> {\n  //   if (!this.isFirst) {\n  //     return of(true);\n  //   }\n  //   return this.applicationLoader();\n  // }\n}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n  cloneDeep as _cloneDeep\n} from 'lodash';\nimport { menuItemObject } from '../../../../public-share/interface/common';\nimport { MainFrameOperatorService } from '../../../../public-share/service/main-frame-operator.service';\nimport { ConstantService } from '../../service/constant.service';\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.scss'],\n  animations: [\n    trigger('indicatorRotate', [\n      state('collapsed', style({transform: 'rotate(0deg)'})),\n      state('expanded', style({transform: 'rotate(180deg)'})),\n      transition('expanded <=> collapsed',\n        animate('225ms cubic-bezier(0.4,0.0,0.2,1)')\n      ),\n    ])\n  ]\n})\nexport class SideMenuComponent implements OnInit {\n  @HostBinding('attr.aria-expanded') ariaExpanded;\n  menuItems: menuItemObject[] = [];\n  isExpanded = false;\n  selectedItem;\n\n  constructor(\n    private constantService: ConstantService,\n    private mainFrameOperatorService: MainFrameOperatorService,\n    private router: Router\n  ) {\n    this.ariaExpanded = this.isExpanded;\n    this.menuItems = _cloneDeep(this.constantService.getMenuList());\n  }\n\n  ngOnInit(): void {\n    this.mainFrameOperatorService.currentUrl.subscribe(url => {\n      if (this.selectedItem && this.selectedItem.routingName && url) {\n        const selectedRoute = this.selectedItem.routingName;\n\n        this.isExpanded = url.indexOf(`/${selectedRoute}`) === 0;\n        this.ariaExpanded = this.isExpanded;\n      }\n    });\n  }\n\n  isItemActive(routingName) {\n    return routingName? this.router.isActive(routingName, true): false;\n  }\n\n  onClickMenuItem(menuItem) {\n    this.selectedItem = _cloneDeep(menuItem);\n\n    if (!menuItem.subMenu || !menuItem.subMenu.length) {\n      this.router.navigate([menuItem.routingName]);\n    }else if (menuItem.subMenu && menuItem.subMenu.length) {\n      this.isExpanded = !this.isExpanded;\n    }\n  }\n}\n","<mat-nav-list>\n  <ng-container *ngFor=\"let item of menuItems\">\n    <ng-template [ngTemplateOutlet]=\"menuItemRef\" [ngTemplateOutletContext]=\"{ item: item }\"></ng-template>\n  </ng-container>\n</mat-nav-list>\n\n<ng-template #menuItemRef let-item=\"item\">\n  <a *ngIf=\"item.isShow\" mat-list-item color=\"primary\" (click)=\"onClickMenuItem(item)\"\n      [ngClass]=\"{\n                    'active': isItemActive(item.routingName),\n                    'expanded': isExpanded\n                  }\"\n      class=\"menu-item-a\">\n    <div class=\"menu-item-div\" [ngStyle]=\"{'padding-left': (item.menuLevel * 18) + 'px'}\">\n       <mat-icon *ngIf=\"item.iconName\" class=\"icon\">{{item.iconName}}</mat-icon>\n       <img *ngIf=\"item.iconImagePath\" class=\"image\" [src]=\"item.iconImagePath\"/>\n       <div class=\"name\">{{item.itemName}}</div>\n    </div>\n    <span fxFlex *ngIf=\"item.subMenu && item.subMenu.length\">\n      <span fxFlex></span>\n      <mat-icon class=\"expanded-icon\" [@indicatorRotate]=\"isExpanded ? 'expanded': 'collapsed'\">\n        expand_more\n      </mat-icon>\n    </span>\n  </a>\n  <div class=\"sub-menu-div\" *ngIf=\"item.isShow && isExpanded\">\n    <ng-container *ngFor=\"let subItem of item.subMenu\">\n      <ng-template [ngTemplateOutlet]=\"menuItemRef\" [ngTemplateOutletContext]=\"{ item: subItem }\"></ng-template>\n    </ng-container>\n  </div>\n</ng-template>\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  cloneDeep as _cloneDeep\n} from 'lodash';\nimport { ToastrOperatorService } from '../../../../public-share/service/toastr-operator.service';\nimport { PageHandlerService } from '../../service/page-handler.service';\nimport { LoginService, APP_MARSMIDDLE_LOGIN_USER, APP_MARSMIDDLE_USER_ROLE } from '../../../login/service/login.service';\n\n@Component({\n  selector: 'app-top-nav-bar',\n  templateUrl: './top-nav-bar.component.html',\n  styleUrls: ['./top-nav-bar.component.scss']\n})\nexport class TopNavBarComponent implements OnInit {\n  @ViewChild('loginExpireSettingTemplate', { static: true }) loginExpireSettingTemplateRef: TemplateRef<any>;\n\n  unReadCounter = null;\n  isInit = false;\n  eventItems = [];\n  isEventLoading = false;\n  username: string = 'User'\n\n  constructor(\n    private router: Router,\n    private pageHandlerService: PageHandlerService,\n    private toastrOperatorService: ToastrOperatorService,\n    private loginService: LoginService\n  ) { }\n\n  ngOnInit(): void {\n    if (localStorage.getItem(APP_MARSMIDDLE_LOGIN_USER)) {\n      this.username = localStorage.getItem(APP_MARSMIDDLE_LOGIN_USER);\n    }\n    this.getEventData();\n    this.getErrorMassageMultiLanguage();\n    this.isInit = true;\n  }\n\n  private getEventData() {\n    this.isEventLoading = true;\n\n    this.pageHandlerService.getEventData().subscribe(response => {\n        this.eventItems = _cloneDeep(response['events']);\n        this.unReadCounter = response['unReadCounter'];\n        this.isEventLoading = false;\n      })\n  }\n\n  private getErrorMassageMultiLanguage(): void {\n    this.pageHandlerService.getErrorMassageMultiLanguage();\n  }\n\n  onOpenEventMenu() {\n    this.getEventData();\n  }\n\n  onConfirmEventItem(event, $event) {\n    $event.stopPropagation();\n    $event.preventDefault();\n\n    const confirmEventIndex = this.eventItems.findIndex(data => data.title === event.title);\n\n    if (confirmEventIndex !== -1) {\n      this.eventItems[confirmEventIndex]['confirm'] = true;\n      this.unReadCounter--;\n      this.toastrOperatorService.showSuccessToastr(\n        'Event Confirmed Successfully!',\n        'Event Confirmed'\n      );\n    } else {\n      this.toastrOperatorService.showErrorToastr(\n        'Event Confirmed Fail!',\n        'Event Confirmed'\n      );\n    }\n  }\n\n  onClickLogout() {\n    this.loginService.logout();\n  }\n\n  navigateHome(): void {\n    this.router.navigate(['/home']);\n  }\n\n  navigateAccountMgmt(): void {\n    this.router.navigate(['/account-management']);\n  }\n\n}\n","<mat-toolbar color=\"primary\" class=\"top-nav-bar\" *ngIf=\"isInit\">\n  <div class=\"logo-area\" (click)=\"navigateHome()\">\n      <div class=\"logo\"></div>\n      <span style=\"margin-left: 10px;\">MARS Middle</span>\n  </div>\n\n  <span class=\"horizon-span\"></span>\n\n  <!-- <button #activityMenuButton class=\"event-menu-icon\" mat-button\n          [matMenuTriggerFor]=\"eventMenu\" (menuOpened)=\"onOpenEventMenu()\">\n    <mat-icon matBadge=\"{{ unReadCounter }}\" matBadgeColor=\"warn\">notifications</mat-icon>\n  </button>\n\n  <mat-menu xPosition=\"before\" #eventMenu=\"matMenu\" [class]='\"top-nav-bar-menu\"'>\n    <div class=\"event-menu\" (click)=\"$event.stopPropagation();\">\n      <div class=\"menu-title\">\n        {{'PAGE.MAIN_FRAME.TITLE.LAST_EVENT'|translate}}\n      </div>\n      <mat-spinner *ngIf=\"isEventLoading\"></mat-spinner>\n      <div *ngIf=\"!isEventLoading\" class=\"menu-content\">\n        <div *ngIf=\"eventItems.length == 0\" class=\"event-empty\">\n          <mat-icon>circle_notifications</mat-icon>\n          {{'PAGE.MAIN_FRAME.TITLE.NO_EVENT'| translate}}\n        </div>\n        <div *ngIf=\"eventItems.length > 0\">\n          <div class='event-item-div' *ngFor=\"let item of eventItems; let itemIndex=index\">\n            <ng-container *ngIf=\"itemIndex < 5\">\n              <div class=\"event-item-title\">\n                <div class=\"title-div\">{{ item.title }}</div>\n                <div>\n                  <small>{{\"PAGE.MAIN_FRAME.TITLE.AT\"|translate}} {{ item.timestamp }}</small>\n                </div>\n              </div>\n              <div class=\"confirm-div\">\n                <button class=\"confirm-button\" mat-stroked-button\n                        [disabled]=\"item.confirm\" (click)=\"onConfirmEventItem(item, $event);\">\n                  {{'COMMON.TEXT.CONFIRM' | translate}}\n                </button>\n              </div>\n            </ng-container>\n          </div>\n        </div>\n      </div>\n      <div class=\"more-div\">\n        <a class=\"more-link\" [routerLink]=\"'/more_event'\" (click)=\"activityMenuButton._getHostElement().click()\">\n           {{'PAGE.MAIN_FRAME.ACTIVE.SEE_MORE'| translate}}\n        </a>\n      </div>\n    </div>\n  </mat-menu> -->\n  <div class=\"navi-menu-pages\">\n      <span class=\"navi-menu-page-option\" (click)=\"navigateHome()\">{{'PAGE.MAIN_FRAME.MENU.SITES'|translate}}</span>\n      <span style=\"margin: 0 10px;\">|</span>\n      <span class=\"navi-menu-page-option\" (click)=\"navigateAccountMgmt()\">{{'PAGE.MAIN_FRAME.MENU.ACCOUNT_MANAGEMENT'|translate}}</span>\n  </div>\n\n  <button class=\"user-menu-icon\" mat-button [matMenuTriggerFor]=\"userMenu\">\n    <mat-icon class=\"icon\">account_circle</mat-icon>\n    Hi, {{username}}\n    <mat-icon>arrow_drop_down</mat-icon>\n  </button>\n\n  <mat-menu #userMenu=\"matMenu\" [class]='\"top-nav-bar-menu\"'>\n    <button mat-menu-item (click)=\"onClickLogout()\">\n      <mat-icon>power_settings_new</mat-icon>\n      <span>Logout</span>\n    </button>\n  </mat-menu>\n</mat-toolbar>\n","import { Component, OnInit, AfterViewInit, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MainFrameOperatorService } from '../../public-share/service/main-frame-operator.service';\n\n@Component({\n  selector: 'app-main-frame',\n  templateUrl: './main-frame.component.html',\n  styleUrls: ['./main-frame.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MainFrameComponent implements OnInit, AfterViewInit {\n  @ViewChild('appDrawer') appDrawerRef: ElementRef;\n\n  constructor(\n    private mainFrameOperatorService: MainFrameOperatorService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    this.mainFrameOperatorService.appDrawerRef = this.appDrawerRef;\n  }\n\n}\n","<app-top-nav-bar></app-top-nav-bar>\n\n<mat-drawer-container class=\"drawer-container\">\n  <mat-drawer #appDrawer disableClose=\"false\" mode=\"side\" closed>\n  <!-- <mat-drawer #appDrawer disableClose=\"true\" mode=\"side\" opened> -->\n    <app-side-menu></app-side-menu>\n  </mat-drawer>\n  <mat-drawer-content class=\"drawer-content\">\n    <div class=\"router-outlet-div\">\n      <router-outlet></router-outlet>\n    </div>\n  </mat-drawer-content>\n</mat-drawer-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ComponentModule } from '../../public-share/component/component.module';\nimport { NgMaterialModule } from '../../public-share/ng-material/ng-material.module';\nimport { MainFrameOperatorService } from '../../public-share/service/main-frame-operator.service';\nimport { MainFrameComponent } from './main-frame.component';\nimport { SideMenuComponent } from './component/side-menu/side-menu.component';\nimport { TopNavBarComponent } from './component/top-nav-bar/top-nav-bar.component';\nimport { PageHandlerService } from './service/page-handler.service';\nimport { ConstantService } from './service/constant.service';\n\n\n\n@NgModule({\n  declarations: [\n    MainFrameComponent,\n    SideMenuComponent,\n    TopNavBarComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ComponentModule,\n    NgMaterialModule,\n    TranslateModule\n  ],\n  providers: [\n    MainFrameOperatorService,\n    PageHandlerService,\n    ConstantService\n  ]\n})\nexport class MainFrameModule { }\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { menuItemObject } from '../../../public-share/interface/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConstantService {\n\n  constructor(\n    private translateService: TranslateService\n  ) { }\n\n  getMenuList():menuItemObject[] {\n    return [\n      {\n        itemName: this.translateService.instant('PAGE.MAIN_FRAME.MENU.HOME'),\n        menuLevel: 0,\n        iconName: 'auto_awesome_mosaic',\n        routingName: 'home',\n        isShow: true\n      },\n      {\n        itemName: this.translateService.instant('PAGE.MAIN_FRAME.MENU.SITES'),\n        menuLevel: 0,\n        iconImagePath: '../../../assets/icons/menu_list_icons/functions.svg',\n        routingName: 'sites',\n        isShow: true\n      },\n      {\n        itemName: this.translateService.instant('PAGE.MAIN_FRAME.MENU.ACCOUNT_MANAGEMENT'),\n        menuLevel: 0,\n        iconName: 'person',\n        routingName: 'account-management',\n        isShow: true\n      },\n      {\n        itemName: 'Sub Menu Demo',\n        menuLevel: 0,\n        iconImagePath: '../../../assets/icons/menu_list_icons/functions.svg',\n        isShow: true,\n        subMenu: [\n          {\n            itemName: 'Sub 01',\n            menuLevel: 1,\n            routingName: 'sub_1',\n            isShow: true\n          },\n          {\n            itemName: 'Sub 02',\n            menuLevel: 1,\n            routingName: 'sub_2',\n            isShow: true\n          }\n        ]\n      }\n    ];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { apiUrl } from '../../../public-share/service/environment';\nimport { MockDataService } from '../../../public-share/service/mock-data.service';\nimport { ToastrOperatorService } from '../../../public-share/service/toastr-operator.service';\nimport { catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageHandlerService {\n\n  constructor(\n    private mockDataService: MockDataService,\n    private http: HttpClient,\n    private toastrOperatorService: ToastrOperatorService,\n    private translate: TranslateService\n  ) { }\n\n  getEventData() {\n    return this.mockDataService.getMockEvents();\n  }\n\n  async getErrorMassageMultiLanguage(): Promise<void> {\n    this.http.get(`${apiUrl}/errorMessage`)\n    .pipe(\n      catchError((error) => {\n        const errorMessage = error.error?.error?.message || error.message || error;\n        this.toastrOperatorService.showErrorToastr(errorMessage, this.translate.instant('COMMON.MESSAGE.TITLE.GET_MLTI_LANG'));\n        return of({});\n      })\n    )\n    .subscribe(response => {\n      if (Object.keys(response).length != 0) {\n        localStorage['marsMiddleErrorMassageMultiLanguage'] = JSON.stringify(response);\n      }\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MainFrameModule } from './main-frame/main-frame.module';\nimport { LoginModule } from './login/login.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { SitesModule } from './sites/sites.module';\nimport { AccountManagementModule } from './account-management/account-management.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    MainFrameModule,\n    LoginModule,\n    DashboardModule,\n    SitesModule,\n    AccountManagementModule\n  ]\n})\nexport class PagesModule { }\n","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from \"rxjs\";\nimport { RegexService } from '../../../public-share/service/regex.service';\nimport { ApplicationModalConfig } from '../../../models/modal';\nimport { MODAL_DATA, PARENT_FORM, CHILD_FORM } from '../../../public-share/component/modal/modal.token';\nimport { BaseModal } from \"../../../public-share/component/modal/modal.base\";\nimport { SiteApiUrlService } from \"../service/siteApiUrl.service\";\nimport { ControllerPostSchema, ControllerPutSchema } from '../../../models/site';\n\n@Component({\n  selector: 'app-controller-form-modal',\n  templateUrl: './controllerFormModal.component.html',\n  styleUrls: ['../sites.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ControllerFormModalComponent implements OnInit, BaseModal {\n\n  controllerForm = this.formBuilder.group({\n    siteName: ['', [Validators.required]],\n    controllerName: ['', [Validators.required, Validators.pattern(this.regexService.getRule('name_en_15'))]],\n    ipAddress: ['', [Validators.required, Validators.pattern(this.regexService.getRule('ipv4'))]],\n    loginAccount: ['', [Validators.required]],\n    loginPassword: ['', [Validators.required]],\n    description: ['', []],\n  });\n\n  updateFlag: boolean = false;\n  updateInfo: ControllerPutSchema;\n  updateSiteName: string;\n  updateControllerName: string;\n  originalIpAddress: string;\n  originalCtrlUser: string;\n\n  constructor(\n    @Inject(MODAL_DATA) public modalConfig: ApplicationModalConfig,\n    private formBuilder: FormBuilder,\n    private siteApiUrlService: SiteApiUrlService,\n    private regexService: RegexService\n  ) { }\n\n  ngOnInit(): void {\n    this.updateSiteName = this.modalConfig.data.siteName;\n    this.controllerForm.get('siteName').setValue(this.updateSiteName);\n    this.controllerForm.get('siteName').disable();\n\n    if (this.modalConfig.data && this.modalConfig.data.updateFlag) {\n      this.updateFlag = true;\n      this.updateInfo = this.modalConfig.data.updateInfo;\n      this.updateControllerName = this.updateInfo.controllerName;\n      this.controllerForm.get('controllerName').setValue(this.updateControllerName);\n      this.controllerForm.get('controllerName').setValidators([Validators.pattern(this.regexService.getRule('name_en_15'))]);\n      this.originalIpAddress = this.updateInfo.ipAddress\n      this.controllerForm.get('ipAddress').setValue(this.updateInfo.ipAddress);\n      this.controllerForm.get('ipAddress').setValidators([Validators.pattern(this.regexService.getRule('ipv4'))]);\n      // reset validators of password when account user changed >>\n      this.originalCtrlUser = this.updateInfo.loginAccount;\n      this.controllerForm.get('loginAccount').setValidators([]);\n      this.controllerForm.get('loginAccount').valueChanges.subscribe(value => {\n        if (value == this.originalCtrlUser) {\n          this.controllerForm.get('loginPassword').setValidators([]);\n        } else {\n          this.controllerForm.get('loginPassword').setValidators([Validators.required]);\n        }\n        this.controllerForm.get('loginPassword').setValue('');\n        this.controllerForm.markAllAsTouched();\n        this.controllerForm.updateValueAndValidity();\n      });\n      this.controllerForm.get('loginAccount').setValue(this.updateInfo.loginAccount);\n      // << reset validators of password when account user changed\n      this.controllerForm.get('description').setValue(this.updateInfo.description);\n    }\n    this.modalConfig[PARENT_FORM].addControl(CHILD_FORM, this.controllerForm);\n  }\n\n  submit(): Observable<any> {\n    const data = this.controllerForm.getRawValue();\n\n    return new Observable<any>(subscriber => {\n      if (this.updateFlag == true) {\n        const putControllerParams: ControllerPutSchema = {\n          controllerName: data.controllerName,\n          ipAddress: data.ipAddress,\n          loginAccount: data.loginAccount,\n          description: data.description\n        };\n        if (data.controllerName == '' || data.controllerName == this.updateControllerName) { delete putControllerParams.controllerName; }\n        if (data.ipAddress == '' || data.ipAddress == this.originalIpAddress) { delete putControllerParams.ipAddress; }\n        if (data.loginAccount == '') { delete putControllerParams.loginAccount; }\n        if (data.loginPassword != '') {\n          putControllerParams.loginPassword = data.loginPassword;\n        }\n        this.siteApiUrlService.putController(this.updateSiteName, this.updateControllerName, putControllerParams)\n        .subscribe(\n          data =>\n            subscriber.next(true),\n          err =>\n            subscriber.error(err)\n        );\n      } else {\n        const postControllerParams: ControllerPostSchema = {\n          controllerName: data.controllerName,\n          ipAddress: data.ipAddress,\n          loginAccount: data.loginAccount,\n          loginPassword: data.loginPassword,\n          description: data.description\n        };\n        this.siteApiUrlService.postController(this.updateSiteName, postControllerParams)\n        .subscribe(\n          data =>\n            subscriber.next(true),\n          err =>\n            subscriber.error(err)\n        );\n      }\n    });\n  }\n\n}\n","<form [formGroup]=\"controllerForm\">\n  <mat-expansion-panel expanded=\"true\" togglePosition=\"before\" class=\"controller-form-modal\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        {{'CONPONENT.MODAL.GENERAL_SETTINGS'|translate}}\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n\n    <app-label-input [isRequired]=\"true\" label=\"{{'PAGE.SITE.COLUMN.SITE'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput formControlName=\"siteName\"/>\n      </mat-form-field>\n    </app-label-input>\n\n    <app-label-input [isRequired]=\"true\" label=\"{{'PAGE.SITE.COLUMN.CTRL_NAME'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput formControlName=\"controllerName\"/>\n        <mat-hint *ngIf=\"!updateFlag\">{{'PAGE.SITE.COLUMN.CTRL_NAME.HINT'|translate}}</mat-hint>\n      </mat-form-field>\n    </app-label-input>\n    \n    <app-label-input label=\"{{'PAGE.SITE.COLUMN.CTRL_DESCRIPTION'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput formControlName=\"description\"/>\n      </mat-form-field>\n    </app-label-input>\n    \n    <app-label-input [isRequired]=\"!updateFlag\" label=\"{{'PAGE.SITE.COLUMN.IP_ADDRESS'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput formControlName=\"ipAddress\"/>\n      </mat-form-field>\n    </app-label-input>\n\n    <app-label-input [isRequired]=\"!updateFlag\" label=\"{{'PAGE.SITE.COLUMN.LOGIN_USER'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput formControlName=\"loginAccount\"/>\n      </mat-form-field>\n    </app-label-input>\n\n    <app-label-input [isRequired]=\"controllerForm.get('loginAccount').value!=originalCtrlUser\" label=\"{{'PAGE.SITE.COLUMN.LOGIN_PASSWORD'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput type=\"password\" formControlName=\"loginPassword\"/>\n      </mat-form-field>\n    </app-label-input>\n\n  </mat-expansion-panel>\n</form>\n","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from \"rxjs\";\nimport { RegexService } from '../../../public-share/service/regex.service';\nimport { ApplicationModalConfig } from '../../../models/modal';\nimport { MODAL_DATA, PARENT_FORM, CHILD_FORM } from '../../../public-share/component/modal/modal.token';\nimport { BaseModal } from \"../../../public-share/component/modal/modal.base\";\nimport { SiteApiUrlService } from \"../service/siteApiUrl.service\";\nimport { SitePostSchema, SitePutSchema } from '../../../models/site';\n\n@Component({\n  selector: 'app-site-form-modal',\n  templateUrl: './siteFormModal.component.html',\n  styleUrls: ['../sites.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SiteFormModalComponent implements OnInit, BaseModal {\n\n  siteForm = this.formBuilder.group({\n    siteName: ['', [Validators.required, Validators.pattern(this.regexService.getRule('name_en_15'))]],\n    siteDescription: ['', []]\n  });\n\n  updateFlag: boolean = false;\n  updateInfo: SitePutSchema;\n  updateSiteName: string;\n\n  constructor(\n    @Inject(MODAL_DATA) public modalConfig: ApplicationModalConfig,\n    private formBuilder: FormBuilder,\n    private siteApiUrlService: SiteApiUrlService,\n    private regexService: RegexService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.modalConfig.data && this.modalConfig.data.updateFlag) {\n      this.updateFlag = true;\n      this.updateInfo = this.modalConfig.data.updateInfo;\n      this.updateSiteName = this.updateInfo.siteName;\n      this.siteForm.get('siteName').setValue(this.updateInfo.siteName);\n      this.siteForm.get('siteName').setValidators([Validators.pattern(this.regexService.getRule('name_en_15'))]),\n      this.siteForm.get('siteDescription').setValue(this.updateInfo.siteDescription);\n    }\n    this.modalConfig[PARENT_FORM].addControl(CHILD_FORM, this.siteForm);\n  }\n\n  submit(): Observable<any> {\n    const data = this.siteForm.getRawValue();\n\n    return new Observable<any>(subscriber => {\n      if (this.updateFlag == true) {\n        const putSiteParams: SitePutSchema = {\n          siteName: data.siteName,\n          siteDescription: data.siteDescription\n        };\n        if (data.siteName == '' || data.siteName === this.updateSiteName) {\n          delete putSiteParams.siteName;\n        }\n        this.siteApiUrlService.putSite(this.updateSiteName, putSiteParams)\n        .subscribe(\n          data =>\n            subscriber.next(true),\n          err =>\n            subscriber.error(err)\n        );\n      } else {\n        const postSiteParams: SitePostSchema = {\n          siteName: data.siteName,\n          siteDescription: data.siteDescription\n        };\n        this.siteApiUrlService.postSite(postSiteParams)\n        .subscribe(\n          data =>\n            subscriber.next(true),\n          err =>\n            subscriber.error(err)\n        );\n      }\n    });\n  }\n\n}\n","<form [formGroup]=\"siteForm\">\n  <mat-expansion-panel expanded=\"true\" togglePosition=\"before\" class=\"site-form-modal\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        {{'CONPONENT.MODAL.GENERAL_SETTINGS'|translate}}\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n\n    <app-label-input [isRequired]=\"!updateFlag\" label=\"{{'PAGE.SITE.COLUMN.SITE_NAME'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput formControlName=\"siteName\"/>\n        <mat-hint>{{'PAGE.SITE.COLUMN.SITE_NAME.HINT'|translate}}</mat-hint>\n      </mat-form-field>\n    </app-label-input>\n\n    <app-label-input label=\"{{'PAGE.SITE.COLUMN.SITE_DESCRIPTION'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput formControlName=\"siteDescription\"/>\n      </mat-form-field>\n    </app-label-input>\n\n  </mat-expansion-panel>\n</form>\n","import { Injectable, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subject, BehaviorSubject, Observable, of, forkJoin } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport {\n  SiteTableData,\n  SitePostSchema,\n  SitePutSchema,\n  SiteRes,\n  ControllerTableData,\n  ControllerPostSchema,\n  ControllerPutSchema,\n  SiteErrorLogRes,\n  ControllerErrorLogRes\n} from '../../../models/site';\nimport { BasicModal, ApplicationModalConfig } from '../../../models/modal';\nimport { SiteApiUrlService } from './siteApiUrl.service';\nimport { ToastrOperatorService } from '../../../public-share/service/toastr-operator.service';\nimport { BasicModalService, ApplicationModalService } from '../../../public-share/component/modal/modal.service';\nimport { SiteFormModalComponent } from '../formModal/siteFormModal.component';\nimport { ControllerFormModalComponent } from '../formModal/controllerFormModal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SiteService implements OnInit, OnDestroy {\n\n  constructor(\n    private router: Router,\n    private toastrOperatorService: ToastrOperatorService,\n    private siteApiUrlService: SiteApiUrlService,\n    private appModalService: ApplicationModalService,\n    private basicModalService: BasicModalService,\n    private translate: TranslateService\n  ) { }\n\n  private _siteTableData = new BehaviorSubject<SiteTableData[]>([]);\n  private _loading = new BehaviorSubject<boolean>(true);\n  // private _message = new Subject<MessageModel>();\n  readonly siteTableData$: Observable<any> = this._siteTableData.asObservable();\n  readonly loading$: Observable<boolean> = this._loading.asObservable();\n  // readonly message$: Observable<MessageModel> = this._message.asObservable();\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this._siteTableData.unsubscribe();\n    this._loading.unsubscribe();\n    // this._message.unsubscribe();\n  }\n\n  getSitesTableData(): void {\n    this._loading.next(true);\n    \n    const sitesData = this.siteApiUrlService.getSites()\n      .pipe(\n        catchError((error) => {\n          const errorMessage = error.error?.error?.message || error.message || error;\n          this.toastrOperatorService.showErrorToastr(errorMessage, this.translate.instant('PAGE.SITE.MESSAGE.TITLE.GET_SITE_TABLE_DATA'));\n          return of([]);\n        })\n      )\n\n    const hour: number = 8;\n    const count: number = 100;\n    const sitesErrorLogData = this.siteApiUrlService.getSitesErrorLog(hour, count)\n      .pipe(\n        catchError((error) => {\n          const errorMessage = error.error?.error?.message || error.message || error;\n          this.toastrOperatorService.showErrorToastr(errorMessage, this.translate.instant('PAGE.SITE.MESSAGE.TITLE.GET_SITES_ERROR_LOG'));\n          return of([]);\n        })\n      )\n\n    forkJoin([sitesData, sitesErrorLogData])\n      .subscribe(([sitesRes, sitesErrorLogRes]) => {\n        const siteTableData: SiteTableData[] = [];\n        sitesRes.forEach((site) => {\n          siteTableData.push({\n            siteName: site.siteName,\n            siteDescription: site.siteDescription,\n            controllers: site.controllers,\n            controllerCounts: site.controllers.length\n          });\n        })\n        siteTableData.forEach((site) => {\n          let _controllersErrLog = sitesErrorLogRes.find((_site) => {return _site.siteName === site.siteName})?.controllers || [];\n          site.controllers.forEach( (controller) => {\n            controller.siteName = site.siteName;\n            controller.cpuUsagePercentage = (controller.cpuIdle >= 0)? (100-controller.cpuIdle) : -1;\n            controller.ramUsagePercentage = (controller.ramUsage >= 0)? controller.ramUsage : -1;\n            const availableDeviceCountsString: string = (controller.availableDeviceCounts >= 0)? controller.availableDeviceCounts.toString() : '-';\n            const deviceCountsString: string = (controller.deviceCounts >= 0)? controller.deviceCounts.toString() : '-';\n            controller.availableDevices = availableDeviceCountsString + ' / ' + deviceCountsString;\n\n            let _controllerErrLog = _controllersErrLog.find((_controller) => {return _controller.controllerName === controller.controllerName});\n            controller.errorLog = _controllerErrLog?.errorLog.reverse() || controller.errorLog;\n          })\n        });\n\n        this._loading.next(false);\n        this._siteTableData.next(JSON.parse(JSON.stringify(siteTableData)));\n    });\n\n  }\n\n  addSite(): void {\n    this.openSiteFormModal('add');\n  }\n\n  addController(siteName: string): void {\n    this.openControllerFormModal('add', siteName);\n  }\n\n  updateSite(rowData: SiteTableData): void {\n    const updateInfo: SitePutSchema = {\n      siteName: rowData.siteName,\n      siteDescription: rowData.siteDescription\n    };\n    this.openSiteFormModal('update', updateInfo);\n  }\n\n  updateController(siteName: string, rowData: ControllerTableData): void {\n    const updateInfo: ControllerPutSchema = {\n      controllerName: rowData.controllerName,\n      ipAddress: rowData.ipAddress,\n      loginAccount: rowData.loginAccount,\n      description: rowData.description\n    }\n    this.openControllerFormModal('update', siteName, updateInfo);\n  }\n\n  openSiteFormModal(action: ('add'|'update'), updateInfo?: SitePutSchema): void {\n    let modalConfig: ApplicationModalConfig;\n    let toastrTitle: string = '';\n    let successMessage: string = '';\n    \n    switch(action) {\n      case 'add':\n          modalConfig = {\n                          title: this.translate.instant('PAGE.SITE.ACTION.ADD_SITE')\n                        };\n          toastrTitle = this.translate.instant('PAGE.SITE.MESSAGE.TITLE.ADD_SITE');\n          successMessage = this.translate.instant('PAGE.SITE.MESSAGE.SUCCESS.ADD_SITE');\n          break;\n      case 'update':\n          modalConfig = {\n                          title: this.translate.instant('PAGE.SITE.ACTION.UPDATE_SITE'),\n                          data: {\n                                  updateInfo: updateInfo,\n                                  updateFlag: true\n                                }\n                        };\n          toastrTitle = this.translate.instant('PAGE.SITE.MESSAGE.TITLE.UPDATE_SITE');\n          successMessage = this.translate.instant('PAGE.SITE.MESSAGE.SUCCESS.UPDATE_SITE');\n          break;\n    }\n\n    const modalRef = this.appModalService.open(SiteFormModalComponent, modalConfig);\n\n    modalRef.afterClose$.subscribe(\n      res => {\n        if (!res.data) return;\n        this.toastrOperatorService.showSuccessToastr(successMessage, toastrTitle);\n        this.getSitesTableData();\n      },\n      error => {\n        const errorMessage = error.error?.error?.message || error.message || error;\n        this.toastrOperatorService.showErrorToastr(errorMessage, toastrTitle);\n      }\n    )\n  }\n\n  openControllerFormModal(action: ('add'|'update'), siteName: string, updateInfo?: ControllerPutSchema): void {\n    let modalConfig: ApplicationModalConfig;\n    let toastrTitle: string = '';\n    let successMessage: string ='';\n    \n    switch(action) {\n      case 'add':\n          modalConfig = {\n                          title: this.translate.instant('PAGE.SITE.ACTION.ADD_CTRL'),\n                          data: {\n                                  siteName: siteName\n                                }\n                        };\n          toastrTitle = this.translate.instant('PAGE.SITE.MESSAGE.TITLE.ADD_CTRL');\n          successMessage = this.translate.instant('PAGE.SITE.MESSAGE.SUCCESS.ADD_CTRL');\n          break;\n      case 'update':\n          modalConfig = {\n                          title: this.translate.instant('PAGE.SITE.ACTION.UPDATE_CTRL'),\n                          data: {\n                                  updateInfo: updateInfo,\n                                  updateFlag: true,\n                                  siteName: siteName\n                                }\n                        };\n          toastrTitle = this.translate.instant('PAGE.SITE.MESSAGE.TITLE.UPDATE_CTRL');\n          successMessage = this.translate.instant('PAGE.SITE.MESSAGE.SUCCESS.UPDATE_CTRL');\n          break;\n    }\n\n    const modalRef = this.appModalService.open(ControllerFormModalComponent, modalConfig);\n\n    modalRef.afterClose$.subscribe(\n      res => {\n        if (!res.data) return;\n        this.toastrOperatorService.showSuccessToastr(successMessage, toastrTitle);\n        this.getSitesTableData();\n      },\n      error => {\n        const errorMessage = error.error?.error?.message || error.message || error;\n        this.toastrOperatorService.showErrorToastr(errorMessage, toastrTitle);\n      }\n    )\n  }\n\n  deleteSite(siteName: string): void {\n    const model: BasicModal = {\n      title: this.translate.instant('PAGE.SITE.ACTION.DELETE_SITE'),\n      content: this.translate.instant('PAGE.SITE.ACTION.DELETE_SITE.CONTENT'),\n      showCancelBtn: true,\n      showConfirmBtn: true\n    }\n    this.basicModalService\n      .openBasicDialog(model)\n      .afterClosed()\n      .subscribe(confirm => {\n        if (confirm) {\n          this.siteApiUrlService.deleteSite(siteName)\n          .pipe(\n            catchError((error) => {\n              const errorMessage = error.error?.error?.message || error.message || error;\n              this.toastrOperatorService.showErrorToastr(errorMessage, this.translate.instant('PAGE.SITE.MESSAGE.TITLE.DELETE_SITE'));\n              return of([]);\n            })\n          )\n          .subscribe((noneRes) => {\n            if (!noneRes) {\n              this.getSitesTableData();\n              this.toastrOperatorService.showSuccessToastr(\n                this.translate.instant('PAGE.SITE.MESSAGE.SUCCESS.DELETE_SITE', {'siteName': siteName}),\n                this.translate.instant('PAGE.SITE.MESSAGE.TITLE.DELETE_SITE')\n              );\n            }\n          })\n        }\n      });\n  }\n\n  deleteController(siteName: string, controllerName: string): void {\n    const model: BasicModal = {\n      title: this.translate.instant('PAGE.SITE.ACTION.DELETE_CTRL'),\n      content: this.translate.instant('PAGE.SITE.ACTION.DELETE_CTRL.CONTENT'),\n      showCancelBtn: true,\n      showConfirmBtn: true\n    }\n    this.basicModalService\n      .openBasicDialog(model)\n      .afterClosed()\n      .subscribe(confirm => {\n        if (confirm) {\n          this.siteApiUrlService.deleteController(siteName, controllerName)\n          .pipe(\n            catchError((error) => {\n              const errorMessage = error.error?.error?.message || error.message || error;\n              this.toastrOperatorService.showErrorToastr(errorMessage, this.translate.instant('PAGE.SITE.MESSAGE.TITLE.DELETE_CTRL'));\n              return of([]);\n            })\n          )\n          .subscribe((noneRes) => {\n            if (!noneRes) {\n              this.getSitesTableData();\n              this.toastrOperatorService.showSuccessToastr(\n                this.translate.instant('PAGE.SITE.MESSAGE.SUCCESS.DELETE_CTRL', {'controllerName': controllerName}),\n                this.translate.instant('PAGE.SITE.MESSAGE.TITLE.DELETE_CTRL')\n              );\n            }\n          })\n        }\n      });\n  }\n\n  getControllerErrorLog(siteName: string, controllerName: string, errorLog: string[], controllerErrorLogTemplateRef: TemplateRef<any>): void {\n    this.openControllerErrorLogModal(siteName, controllerName, errorLog, controllerErrorLogTemplateRef);\n  }\n  \n  openControllerErrorLogModal(siteName: string, controllerName: string, errorLog: string[], controllerErrorLogTemplateRef: TemplateRef<any>): void {\n    const model: BasicModal = {\n      title: this.translate.instant('PAGE.SITE.CTRL_ERROR_LOG', {'siteName': siteName, 'controllerName': controllerName}),\n      template: controllerErrorLogTemplateRef,\n      data: errorLog,\n      showConfirmBtn: true,\n      size: 'eighty-percent'\n    }\n    this.basicModalService\n      .openBasicDialog(model)\n      .afterClosed()\n      .subscribe(confirm => { });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { apiUrl } from '../../../public-share/service/environment';\nimport {\n  SitePostSchema,\n  SitePutSchema,\n  SiteRes,\n  ControllerPostSchema,\n  ControllerPutSchema,\n  SiteErrorLogRes,\n  ControllerErrorLogRes\n} from '../../../models/site';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SiteApiUrlService {\n\n  constructor(\n    private http: HttpClient\n  ){ }\n  public postSite(site: SitePostSchema) {\n    return this.http.post(`${apiUrl}/sites`, site);\n  }\n\n  public getSites(): Observable<SiteRes[]> {\n    return this.http.get<SiteRes[]>(`${apiUrl}/sites`);\n  }\n\n  public putSite(siteName: string, site: SitePutSchema) {\n    return this.http.put(`${apiUrl}/sites/${siteName}`, site);\n  }\n\n  public deleteSite(siteName: string) {\n    return this.http.delete(`${apiUrl}/sites/${siteName}`);\n  }\n\n  public postController(siteName: string, controller: ControllerPostSchema) {\n    return this.http.post(`${apiUrl}/sites/${siteName}/controllers`, controller);\n  }\n\n  public putController(siteName: string, controllerName: string, controller: ControllerPutSchema) {\n    return this.http.put(`${apiUrl}/sites/${siteName}/controllers/${controllerName}`, controller);\n  }\n\n  public deleteController(siteName: string, controllerName: string) {\n    return this.http.delete(`${apiUrl}/sites/${siteName}/controllers/${controllerName}`);\n  }\n\n  public getSitesErrorLog(hour: number, count: number): Observable<SiteErrorLogRes[]> {\n    return this.http.get<SiteErrorLogRes[]>(`${apiUrl}/sites/errorLog?hour=${hour}&count=${count}`);\n  }\n\n  public getControllerErrorLog(siteName: string, controllerName: string, controller: ControllerPutSchema, hour: number, count: number) {\n    return this.http.get(`${apiUrl}/sites/${siteName}/controllers/${controllerName}/errorLog?hour=${hour}&count=${count}`);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Column, DataTableModel } from '../../../models/data-table';\nimport { LoginService } from '../../login/service/login.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SiteTableModelService {\n  isGuest: boolean = this.loginService.isGuestUser();\n\n  constructor(\n    private loginService: LoginService,\n    private translate: TranslateService\n  ) { }\n\n  getSiteTableModel(): DataTableModel {\n    let columns: Column[] = [\n      {\n        id: 'siteName',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.SITE_NAME'),\n        maxWidth: '360px'\n      },\n      {\n        id: 'siteDescription',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.SITE_DESCRIPTION')\n      }, {\n        id: 'controllerCounts',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.NUM_OF_CTRL'),\n        maxWidth: '200px'\n      }\n    ];\n    \n    this.isGuest = this.loginService.isGuestUser();\n    if (!this.isGuest) {\n      columns.push(\n        {\n          id: 'multiActions',\n          displayName: this.translate.instant('PAGE.SITE.COLUMN.ACTIONS'),\n          sort: 'disabled',\n          maxWidth: '240px'\n        }\n      );\n    }\n\n    return {\n      columns: columns,\n      expandRowSupport: true,\n      expandRowTemplate: undefined,\n      hiddenRefresh: true,\n      hiddenCustomize: true\n    };\n  }\n\n  getControllerTableModel(): DataTableModel {\n    let columns: Column[] = [\n      {\n        id: 'controllerName',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.CONTROLLER'),\n        minWidth: '140px'\n      },\n      {\n        id: 'errorLog',\n        displayName: this.translate.instant(' '),\n        maxWidth: '40px'\n      },\n      {\n        id:'description',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.CTRL_DESCRIPTION'),\n        minWidth: '100px'\n      },\n      {\n        id:'ipAddress',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.IP_ADDRESS'),\n        minWidth: '120px'\n      },\n      {\n        id: 'loginAccount',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.LOGIN_USER'),\n        minWidth: '110px'\n      },\n      {\n        id: 'loginStatus',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.LOGIN_STATUS'),\n        maxWidth: '100px'\n      },\n      {\n        id: 'availableDevices',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.AVAILABLE_DEVICES'),\n        minWidth: '160px'\n      },\n      {\n        id: 'cpuUsagePercentage',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.CPU_USAGE_PERCENTAGE'),\n        minWidth: '90px'\n      },\n      {\n        id: 'ramUsagePercentage',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.RAM_USAGE_PERCENTAGE'),\n        minWidth: '90px'\n      }\n    ];\n    \n    this.isGuest = this.loginService.isGuestUser();\n    if (!this.isGuest) {\n      columns.push(\n        {\n          id: 'multiActions',\n          sort: 'disabled',\n          maxWidth: '160px',\n          minWidth: '160px',\n          displayName: this.translate.instant('PAGE.SITE.COLUMN.ACTIONS')\n        }\n      );\n    }\n\n    return {\n      columns: columns,\n      hiddenRefresh: true,\n      hiddenCustomize: true\n    };\n  }\n\n}","import { Component, OnInit, ViewChild, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RegexService } from '../../public-share/service/regex.service';\nimport { LoginService } from '../login/service/login.service';\nimport { ToastrOperatorService } from '../../public-share/service/toastr-operator.service';\nimport { Subject, BehaviorSubject, Observable } from 'rxjs';\nimport { SiteService } from './service/site.service';\nimport { SiteTableModelService } from './service/siteTableModel.service';\nimport { DataTableModel } from '../../models/data-table';\n\n@Component({\n  selector: 'app-sites',\n  templateUrl: './sites.component.html',\n  styleUrls: ['./sites.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SitesComponent implements OnInit {\n  @ViewChild('controllers', { static: true }) controllersRef: TemplateRef<any>;\n  @ViewChild(\"siteMultiActions\", { static: true }) siteMultiActionsRef: TemplateRef<any>;\n  @ViewChild(\"controllerMultiActions\", { static: true }) controllerMultiActionsRef: TemplateRef<any>;\n  @ViewChild(\"controllerLink\", { static: true }) controllerLinkRef: TemplateRef<any>;\n  @ViewChild(\"controllerLoginStatus\", { static: true }) controllerLoginStatusRef: TemplateRef<any>;\n  @ViewChild(\"controllerCpuUsagePercentage\", { static: true }) controllerCpuUsagePercentageRef: TemplateRef<any>;\n  @ViewChild(\"controllerRamUsagePercentage\", { static: true }) controllerRamUsagePercentageRef: TemplateRef<any>;\n  @ViewChild(\"controllerAvailableDevices\", { static: true }) controllerAvailableDevicesRef: TemplateRef<any>;\n  @ViewChild(\"controllerErrorLog\", { static: true }) controllerErrorLogRef: TemplateRef<any>;\n  @ViewChild(\"controllerErrorLogTemplate\", { static: true }) controllerErrorLogTemplateRef: TemplateRef<any>;\n\n  siteTableModel: DataTableModel;\n  controllerTableModel: DataTableModel;\n  isGuest: boolean;\n\n  readonly siteTableData$: Observable<any[]> = this.siteService.siteTableData$;\n  readonly loading$: Observable<boolean> = this.siteService.loading$;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private regexService: RegexService,\n    private toastrOperatorService: ToastrOperatorService,\n    private siteService: SiteService,\n    private siteTableModelService: SiteTableModelService,\n    private loginService: LoginService\n  ) {\n    this.isGuest = this.loginService.isGuestUser();\n  }\n\n  ngOnInit(): void {\n    this.initialTableModel();\n    this.refreshTableData();\n  }\n\n  refreshTableData(): void {\n    this.siteService.getSitesTableData();\n  }\n\n  initialTableModel(): void {\n    this.siteTableModel = this.siteTableModelService.getSiteTableModel();\n    this.updateTableCellTemplate(this.siteTableModel, 'site');\n\n    this.controllerTableModel = this.siteTableModelService.getControllerTableModel();\n    this.updateTableCellTemplate(this.controllerTableModel, 'controller');\n\n    this.siteTableModel.expandRowTemplate = this.controllersRef;\n  }\n\n  updateTableCellTemplate(tableModel: DataTableModel, level?: string): void {\n    tableModel.columns.forEach((item) => {\n      if (item.id === 'multiActions') {\n        if (level === 'site') {\n          item.customCellTemplate = this.siteMultiActionsRef;\n        } else if (level === 'controller') {\n          item.customCellTemplate = this.controllerMultiActionsRef;\n        }\n      }  else if (item.id === 'controllerName') {\n        item.customCellTemplate = this.controllerLinkRef;\n      }  else if (item.id === 'loginStatus') {\n        item.customCellTemplate = this.controllerLoginStatusRef;\n      } else if (item.id === 'cpuUsagePercentage') {\n        item.customCellTemplate = this.controllerCpuUsagePercentageRef;\n      } else if (item.id === 'ramUsagePercentage') {\n        item.customCellTemplate = this.controllerRamUsagePercentageRef;\n      } else if (item.id === 'availableDevices') {\n        item.customCellTemplate = this.controllerAvailableDevicesRef;\n      } else if (item.id === 'errorLog') {\n        item.customCellTemplate = this.controllerErrorLogRef;\n      }\n    });\n  }\n\n  addSite(): void {\n    this.siteService.addSite();\n  }\n\n  addController(rowData, $event): void {\n    $event.stopPropagation();\n    this.siteService.addController(rowData.siteName);\n  }\n\n  delete(rowData, $event, level: ('site'|'controller')): void {\n    switch (level) {\n      case 'site':\n          $event.stopPropagation();\n          this.siteService.deleteSite(rowData.siteName);\n          break;\n      case 'controller':\n          this.siteService.deleteController(rowData.siteName, rowData.controllerName);\n          break;\n    }\n  }\n\n  update(rowData, $event, level: ('site'|'controller')): void {\n    switch (level) {\n      case 'site':\n          $event.stopPropagation();\n          this.siteService.updateSite(rowData);\n          break;\n      case 'controller':\n          this.siteService.updateController(rowData.siteName, rowData);\n          break;\n    }\n  }\n\n  getControllerErrorLog(siteName: string, controllerName: string, errorLog: string[], $event): void {\n    $event.stopPropagation();\n    this.siteService.getControllerErrorLog(siteName, controllerName, errorLog, this.controllerErrorLogTemplateRef);\n  }\n\n  navigate2ControllerWeb(rowData): void {\n    const controllerIp: string = rowData.ipAddress;\n    window.open(`https://${controllerIp}`, '_blank');\n  }\n\n  getPercentageProgressStyleParams(percentage: number): string {\n    let color: string;\n    if(percentage>80) {\n      color = '#f1d1c8'; // RED\n    } else {\n      color = '#9ed68a'; // GREEN\n    }\n    return `--progress-color: ${color}; --progress: ${percentage}%;`;\n  }\n\n}\n","<div class=\"mat-app-background mars-component\">\n  <div class=\"main-header tab-bar\">\n    <div class=\"header-primary\">\n      <div class=\"header-title\">{{'PAGE.MAIN_FRAME.MENU.SITES'|translate}}</div>\n      <div class=\"flex-spacer\"></div>\n      <div header-action-show >\n          <button mat-stroked-button (click)=\"addSite()\"  *ngIf=\"!isGuest\">\n            {{'PAGE.SITE.ACTION.ADD_SITE'|translate}}\n          </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"main-content tab-content\">\n\n    <div class=\"mars-middle-sites\">\n      <app-data-table\n        [model]=\"siteTableModel\"\n        [loadingStatus]=\"loading$\"\n        [data]=\"siteTableData$\"\n        (refreshEmmiter)=\"refreshTableData()\">\n      </app-data-table>\n    </div>\n\n  </div>\n</div>\n\n<ng-template #controllers let-row=\"row\">\n  <mat-card class=\"controllers\" style=\"width: 100%; margin: 28px 0;\">\n    <mat-card-header>\n      <mat-card-title>{{row.siteName}} | {{'PAGE.SITE.TITLE.CTRL_LIST'|translate}}</mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content>\n      <div class=\"controllers-container\" style=\"width: 100%;\">\n        <app-data-table [model]=\"controllerTableModel\" [data]=\"row.controllers\">\n        </app-data-table>\n      </div>\n    </mat-card-content>\n  </mat-card>\n</ng-template>\n\n<ng-template #siteMultiActions let-row=\"row\">\n  <button mat-stroked-button\n          class=\"site-action-btn inline danger\"\n          (click)=\"delete(row, $event, 'site')\">\n    <span>{{'COMPONENT.DATA_TABLE.ACTION.DELETE'|translate}}</span>\n  </button>\n  <button mat-stroked-button\n          class=\"site-action-btn inline\"\n          (click)=\"update(row, $event, 'site')\"\n          style=\"margin-left: 6px;\">\n    <span>{{'COMPONENT.DATA_TABLE.ACTION.UPDATE'|translate}}</span>\n  </button>\n  <button mat-stroked-button\n          class=\"site-action-btn inline\"\n          (click)=\"addController(row, $event)\"\n          style=\"margin-left: 6px;\">\n    <span>{{'PAGE.SITE.ACTION.ADD_CTRL'|translate}}</span>\n  </button>\n</ng-template>\n\n<ng-template #controllerMultiActions let-row=\"row\">\n  <button mat-stroked-button\n          class=\"site-action-btn inline danger\"\n          (click)=\"delete(row, $event, 'controller')\">\n    <span>{{'COMPONENT.DATA_TABLE.ACTION.DELETE'|translate}}</span>\n  </button>\n  <button mat-stroked-button\n          class=\"site-action-btn inline\"\n          (click)=\"update(row, $event, 'controller')\"\n          style=\"margin-left: 6px;\">\n    <span>{{'COMPONENT.DATA_TABLE.ACTION.UPDATE'|translate}}</span>\n  </button>\n</ng-template>\n\n<ng-template #controllerLink let-row=\"row\">\n  <a class=\"navi-ctrl-web\" title=\"Go to Controller Web\" (click)=\"navigate2ControllerWeb(row)\">\n    {{row.controllerName}}\n    <mat-icon class=\"navi-ctrl-web-icon\">\n        <span class=\"material-symbols-rounded\">open_in_new</span>\n    </mat-icon>\n  </a>\n</ng-template>\n\n<ng-template #controllerLoginStatus let-row=\"row\">\n  <mat-icon class=\"ctrl-login-status-icon\">\n      <span *ngIf=\"row.loginStatus\"  class=\"material-symbols-rounded\" style=\"color: #9ed68a\">link</span>\n      <span *ngIf=\"!row.loginStatus\" class=\"material-symbols-rounded\" style=\"color: #e57979;\">link_off</span>\n  </mat-icon>\n</ng-template>\n\n<ng-template #controllerCpuUsagePercentage let-row=\"row\">\n  <div *ngIf=\"row.cpuUsagePercentage >= 0\"\n       class=\"g-progress\"\n       style=\"width:80%; text-align:center; vertical-align:middle;\"\n       [style]=\"getPercentageProgressStyleParams(row.cpuUsagePercentage)\">\n      {{row.cpuUsagePercentage.toFixed(2)}}%\n  </div>\n  <div *ngIf=\"!(row.cpuUsagePercentage >= 0)\"\n       style=\"width:80%; text-align:center;\">\n      -\n  </div>\n</ng-template>\n\n<ng-template #controllerRamUsagePercentage let-row=\"row\">\n  <div *ngIf=\"row.ramUsagePercentage >= 0\"\n        class=\"g-progress\"\n        style=\"width:80%; text-align:center; vertical-align:middle;\"\n        [style]=\"getPercentageProgressStyleParams(row.ramUsagePercentage)\">\n      {{row.ramUsagePercentage.toFixed(2)}}%\n  </div>\n  <div *ngIf=\"!(row.ramUsagePercentage >= 0)\"\n       style=\"width:80%; text-align:center;\">\n      -\n  </div>\n</ng-template>\n\n<ng-template #controllerAvailableDevices let-row=\"row\">\n  <div style=\"width: 100px; text-align:center; vertical-align:middle;\">\n      {{row.availableDevices}}\n  </div>\n</ng-template>\n\n<ng-template #controllerErrorLog let-row=\"row\">\n  <mat-icon *ngIf=\"row.errorLog.length>0 && row.loginStatus\"\n            class=\"ctrl-error-log-icon\"\n            (click)=\"getControllerErrorLog(row.siteName, row.controllerName, row.errorLog, $event)\">\n    <span class=\"material-symbols-outlined\">sms_failed</span>\n  </mat-icon>\n</ng-template>\n\n<ng-template #controllerErrorLogTemplate let-errorLogArray>\n  <div *ngFor=\"let errorLog of errorLogArray; let i=index\">\n    <hr *ngIf=\"i!=0\"/>\n    <div style=\"display: flex;\">\n      <div style=\"width: 40px;\">{{i+1}}.</div>\n      <div style=\"width: calc(100% - 40px);\">\n        {{errorLog.split('ERROR')[0]}} <em class=\"history-pre\">ERROR</em> {{errorLog.split('ERROR')[1]}}\n      </div>\n    </div>\n  </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgMaterialModule } from '../../public-share/ng-material/ng-material.module';\nimport { ComponentModule } from '../../public-share/component/component.module';\nimport { SitesComponent } from './sites.component';\nimport { SiteFormModalComponent } from './formModal/siteFormModal.component';\nimport { ControllerFormModalComponent } from './formModal/controllerFormModal.component';\n\n@NgModule({\n  declarations: [\n    SitesComponent,\n    SiteFormModalComponent,\n    ControllerFormModalComponent\n  ],\n  imports: [\n    CommonModule,\n    NgMaterialModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ComponentModule\n  ]\n})\nexport class SitesModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { LabelInputModule } from './label-input/label-input.module';\nimport { NgMaterialModule } from '../../public-share/ng-material/ng-material.module';\nimport { DataTableComponent } from './data-table/data-table.component';\nimport { MaxColumnWidthDirective, MinColumnWidthDirective } from './data-table/column-width.directive';\nimport { InputComponent } from './input/input.component';\nimport { BasicModalComponent, ApplicationModalComponent } from './modal/modal.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LabelInputModule,\n    NgMaterialModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatDialogModule\n  ],\n  exports: [\n    LabelInputModule,\n    DataTableComponent,\n    InputComponent,\n    BasicModalComponent,\n    ApplicationModalComponent\n  ],\n  declarations: [\n    DataTableComponent,\n    MaxColumnWidthDirective,\n    MinColumnWidthDirective,\n    InputComponent,\n    BasicModalComponent,\n    ApplicationModalComponent\n  ],\n  providers: [],\n})\nexport class ComponentModule { }\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n\tselector: '[maxColumnWidth]'\n})\nexport class MaxColumnWidthDirective implements OnInit {\n  @Input('maxColumnWidth') maxWidth: string;\n  private _element: HTMLInputElement;\n\n  constructor(private elementRef: ElementRef) {\n    this._element = this.elementRef.nativeElement;\n  \n  }\n  ngOnInit(): void {\n    if (this.maxWidth) {\n      this._element.style.maxWidth = this.maxWidth;\n    }\n  }\n}\n\n@Directive({\n\tselector: '[minColumnWidth]'\n})\nexport class MinColumnWidthDirective implements OnInit {\n  @Input('minColumnWidth') minWidth: string;\n  private _element: HTMLInputElement;\n\n  constructor(private elementRef: ElementRef) {\n    this._element = this.elementRef.nativeElement;\n  \n  }\n  ngOnInit(): void {\n    if (this.minWidth) {\n      this._element.style.minWidth = this.minWidth;\n    }\n  }\n}","import {\n  Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChange,\n  AfterViewInit, ViewChild, ElementRef, TemplateRef, OnDestroy\n} from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SelfDataSource } from './dataSource';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DataTableModel, Column } from '../../../models/data-table';\nimport { InputModel } from '../../../models/input';\nimport { TableAnimations } from './table-animations';\nimport { Observable } from 'rxjs';\nimport { LoginService } from '../../../pages/login/service/login.service';\n\nconst DISPLAY_COLUMN_EXPAND = 'expand';\nconst DISPLAY_COLUMN_SELECT = 'select';\n\n@Component({\n  selector: 'app-data-table',\n  templateUrl: './data-table.component.html',\n  styleUrls: ['./data-table.component.scss'],\n  animations: [\n    TableAnimations.expendSwitch,\n    // TableAnimations.detailExpand,\n    TableAnimations.detailContent,\n    TableAnimations.actionExpand\n  ],\n})\nexport class DataTableComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n  @ViewChild('matTable', {static: true}) matTable: ElementRef;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @Input() model: DataTableModel;\n  @Input('data') originData$: Observable<any> | any[];\n  @Input('loadingStatus') loadingStatus$: Observable<boolean>;\n  @Input() hidePaginator: boolean;\n  @Input() customPageSize: number;\n  @Output() deleteEmmiter = new EventEmitter<any>();\n  @Output() refreshEmmiter = new EventEmitter<any>();\n  @Output() overRowEmmiter = new EventEmitter<any>();\n  @Output() leaveRowEmmiter = new EventEmitter<any>();\n  @Output() paginationEmmiter = new EventEmitter<any>();\n  tableModel: DataTableModel = {\n    columns: []\n  };\n  columnsToDisplay: string[] = [];\n  dataSource = new SelfDataSource([]);\n\n  toggleFilterFlag: boolean = false;\n  toggleCustomizeFlag: boolean = false;\n  initialSelection = [];\n  allowMultiSelect: boolean = true;\n  selection = new SelectionModel<any>(this.allowMultiSelect, this.initialSelection);\n\n  paginationParams = {\n    filter: '',\n    sort: {},\n    pageIndex: 0,\n    pageSize: 10\n  };\n  filteredDataLength: number = 0;\n\n  search: InputModel = {\n    type: 'search',\n    placeholder: 'COMPONENT.SEARCH_BAR.PALCEHOLDER'\n  };\n  expandedElement = null;\n  loading: boolean = true;\n  isGuest: boolean = false;\n\n  // for column Cell Filter Selector using\n  searchResult: string = '';\n  columnFilterStorage: any = {};\n  columnFilterSelectorOpened: string = 'no-one-opened';\n  columnCellFilterFormCheckBoxAllCompleted = {};\n  originFilterPredicate = this.dataSource.filterPredicate;\n\n  constructor(private translate: TranslateService,\n              private loginService: LoginService,\n              private elementRef: ElementRef) {\n              this.isGuest = this.loginService.isGuestUser();\n  }\n\n  ngOnInit(): void {\n    if (!this.model) return;\n    this.tableModel.sortSupport = this.model.sortSupport === undefined ? true : this.model.sortSupport;\n    this.tableModel.hiddenHeaderActions = this.model.hiddenHeaderActions || false;\n    this.tableModel.hiddenSearch = this.model.hiddenSearch || false;\n    this.tableModel.hiddenRefresh = this.model.hiddenRefresh || false;\n    this.tableModel.hiddenCustomize = this.model.hiddenCustomize || false;\n    this.tableModel.expandRowSupport = this.model.expandRowSupport || false;\n    this.tableModel.hoverRowEmitEvent = this.model.hoverRowEmitEvent || false;\n    this.tableModel.noneStickyHeaderRow = this.model.noneStickyHeaderRow || false;\n    this.tableModel.selectionSupport = this.model.selectionSupport || false;\n    if(this.isGuest) this.tableModel.selectionSupport = false;\n    this.tableModel.backendPagination = this.model.backendPagination || false;\n    this.dataSource.backendPagination = this.tableModel.backendPagination;\n\n    this.initTableColumns(this.model.columns);\n\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    if (this.originData$ instanceof Array) {\n      this.dataSource.data = this.originData$;\n      this.getColumnCellFilterOpionList(this.dataSource.data);\n      this.filteredDataLength = this.dataSource.filteredData.length;\n    } else {\n      this.originData$ && this.originData$.subscribe((data) => {\n        if (this.dataSource.fromBackendData) {\n          this.dataSource.data = data.data;\n          this.filteredDataLength = data.count;\n        } else {\n          this.dataSource.data = data;\n          this.filteredDataLength = this.dataSource.filteredData.length;\n        }\n        this.getColumnCellFilterOpionList(this.dataSource.data);\n      });\n    }\n\n    if (this.loadingStatus$) {\n      this.loadingStatus$.subscribe((value) => {\n        this.loading = value;\n      });\n    } else {\n      this.loading = false;\n    }\n    this.translate.get([\n      'COMPONENT.SEARCH_BAR.PALCEHOLDER',\n      'COMPONENT.DATA_TABLE.PAGINATOR.ITEMS_PER_PAGE_LABEL']).subscribe((res) => {\n        this.search.placeholder = res['COMPONENT.SEARCH_BAR.PALCEHOLDER'];\n        this.paginator._intl.itemsPerPageLabel = res['COMPONENT.DATA_TABLE.PAGINATOR.ITEMS_PER_PAGE_LABEL'];\n      });\n    // this.translate.getTranslation(this.translate.currentLang).subscribe((res) => {\n    //   this.tableModel.columns.forEach((item) => {\n    //     item.displayName = this.translate.instant(item.displayName);\n    //   });\n    // });\n  }\n\n  ngAfterViewInit(): void {\n    // if user clicks out of Column Filter Selector feild, close Column Filter Selector\n    document.addEventListener('click', this.closeColumnFilterSelector.bind(this));\n    // when window is resized, close Column Filter Selector\n    window.addEventListener('resize', () => {this.columnFilterSelectorOpened = 'no-one-opened'});\n    // stop Propagation when filter Icon is clicked\n    this.filterIconEventListener();\n  }\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n    if (changes.originData$ && this.originData$ instanceof Array) {\n      if (this.dataSource.fromBackendData) {\n        this.dataSource.data = changes.originData$.currentValue.data;\n        this.filteredDataLength = changes.originData$.currentValue.count;\n      } else {\n        this.dataSource.data = changes.originData$.currentValue || [];\n        this.filteredDataLength = this.dataSource.data.length;\n      }\n      this.getColumnCellFilterOpionList(this.dataSource.data);\n    }\n    if (changes.model) {\n      this.tableModel.expandRowSupport = changes.model.currentValue && changes.model.currentValue.expandRowSupport || false;\n      this.initTableColumns(changes.model.currentValue && changes.model.currentValue.columns || []);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroyFilterToolSetting();\n  }\n\n  initTableColumns(columns: Column[]): void {\n    this.columnsToDisplay = [];\n    this.tableModel.columns = [];\n    columns.forEach((item) => {\n      item.sort = item.sort || 'asc';\n      item.visible = item.visible === undefined ? true : item.visible;\n      if((item.id.toLowerCase() == 'actions' && !this.isGuest) || item.id.toLowerCase() != 'actions'){\n        this.tableModel.columns.push(item);\n        if (item.visible) this.columnsToDisplay.push(item.id);\n      }\n      // initial for Column Cell Filter Opion List -- start\n      if (item.filterTool == true) {\n        this.columnFilterStorage[item.id] = [];\n        this.columnCellFilterFormCheckBoxAllCompleted[item.id] = false;\n      }\n      // initial for Column Cell Filter Opion List -- end\n    });\n    if (this.tableModel.selectionSupport) this.columnsToDisplay.unshift(DISPLAY_COLUMN_SELECT);\n    if (this.tableModel.expandRowSupport) this.columnsToDisplay.push(DISPLAY_COLUMN_EXPAND);\n  }\n\n  columnVisibleChange(item: Column): void {\n    if (item.visible) {\n      this.columnsToDisplay = this.refreshDisplayColumns();\n    } else {\n      const index = this.columnsToDisplay.indexOf(item.id);\n      if (index > -1) {\n        this.columnsToDisplay.splice(index, 1);\n      }\n    }\n  }\n\n  refreshDisplayColumns() {\n    const temp: string[] = [];\n    this.tableModel.columns.forEach((item) => {\n      if (item.visible) {\n        temp.push(item.id);\n      }\n    })\n    if (this.tableModel.selectionSupport) temp.unshift(DISPLAY_COLUMN_SELECT);\n    if (this.tableModel.expandRowSupport) temp.push(DISPLAY_COLUMN_EXPAND);\n    return temp;\n  }\n\n  toggleFilter(): void {\n    this.toggleFilterFlag = !this.toggleFilterFlag;\n    this.toggleCustomizeFlag = false;\n  }\n\n  toggleCustomize(): void {\n    this.toggleCustomizeFlag = !this.toggleCustomizeFlag;\n    this.toggleFilterFlag = false;\n  }\n\n  getSearchResult(event): void {\n    this.searchResult = event;\n    // If Column-Cell-Filter used, FromBackendData won't sent paginationParamsinfo, and paginationParamsinfo would be wrong //\n    if (Object.keys(this.columnFilterStorage).length !== 0) {\n      if (event == null || event === '') {\n        this.dataSource.filter = '◬'; // Because this.dataSource.filter ='' would not go through Filter Predicate Function\n      } else {\n        this.dataSource.filter = event;\n      }\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n      this.filteredDataLength = this.dataSource.filteredData.length;\n      return;\n    }\n\n    if (this.dataSource.fromBackendData) {\n      if (event == null || event === '') {\n        this.paginationParams['filter'] = '';\n      } else {\n        this.paginationParams['filter'] = event;\n      }\n      this.paginationEmmiter.emit(this.paginationParams);\n    } else {\n      this.dataSource.filter = event;\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n      this.filteredDataLength = this.dataSource.filteredData.length;\n    }\n  }\n\n  getPagination() {\n    return this.paginationParams;\n  }\n\n  updateColumnTemplateRef(id: string, ref: TemplateRef<any>) {\n    this.tableModel.columns.forEach(col => {\n      if(col.id == id){\n        col.customCellTemplate = ref;\n      }\n    })\n  }\n\n  sortData(sort: Sort): void {\n    if (this.dataSource.fromBackendData) {\n      if (sort.active && sort.direction !== '') {\n        this.paginationParams['sort'] = {\n          name: sort.active,\n          direction: sort.direction\n        }\n      } else {\n        this.paginationParams['sort'] = {}\n      }\n      this.paginationEmmiter.emit(this.paginationParams);\n    } else {\n      const col = this.tableModel.columns.find(col => col.id === sort.active);\n      if (col.customSort) {\n        this.dataSource.customSortColumn = true;\n      } else {\n        this.dataSource.customSortColumn = false;\n      }\n    }\n  }\n\n  pagination(event): void {\n    if (this.dataSource.fromBackendData) {\n      this.paginationParams['pageIndex'] = event.pageIndex;\n      this.paginationParams['pageSize'] = event.pageSize;\n      this.paginationEmmiter.emit(this.paginationParams);\n    }\n  }\n\n  // Whether the number of selected elements matches the total number of rows\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.paginator.pageSize;//this.dataSource.data.length;\n    return numSelected == numRows;\n  }\n\n  // Selects all rows if they are not all selected; otherwise clear selection\n  masterToggle() {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    const sliceData = this.dataSource.data.slice(startIndex, startIndex + this.paginator.pageSize);\n    this.isAllSelected() ?\n      this.selection.clear() :\n      sliceData.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n  clickRow($event, rowElement): void {\n    if (!this.tableModel.expandRowSupport) return;\n    this.expandedElement = this.expandedElement === rowElement ? null : rowElement;\n  }\n\n  // pageChange(event): void {\n  //   console.log(event);\n  // }\n\n  // renderRows(): void {\n  //   console.log('table will not automatically check for changes to the data array.when objects are added, removed, or moved on the data array, you can trigger an update to the tables rendered rows')\n  // }\n\n  batchRemove(): void {\n    if (!this.selection.hasValue()) return;\n    this.deleteEmmiter.emit(this.selection.selected);\n    this.selection.clear();\n  }\n\n  refresh(): void {\n    this.selection.clear();\n    if (this.dataSource.fromBackendData) {\n      this.refreshEmmiter.emit(this.paginationParams);\n    } else {\n      this.refreshEmmiter.emit();\n    }\n  }\n\n  // set Column Filter Icon Event Listener\n  filterIconEventListener() {\n    setTimeout( () => {\n      this.tableModel.columns.forEach((item) => {\n        if (item.filterTool && item.filterTool === true) {\n          document.getElementById(item.id).addEventListener('click', (e) => { e.stopPropagation(); }, false); // 阻止冒泡事件傳遞\n        }\n      });\n    }, 0);\n  }\n\n  // open Column Filter Selector\n  openColumnFilterSelector($columnId) {\n    if (this.columnFilterSelectorOpened === $columnId) {\n      this.columnFilterSelectorOpened = 'no-one-opened';\n    } else {\n      // open column Id\n      this.columnFilterSelectorOpened = $columnId;\n      setTimeout( () => {\n      //set filter Option List position\n      let filterOptionListElement = document.getElementById(`${$columnId}FilterList`);\n      const element = document.getElementById($columnId);\n      const elementPosition = this.getElementPosition(element);\n      let tableElement = this.getElementBelongsToClass(element, 'mat-data-table');\n      tableElement.style.position = 'relative';\n      const tableElementPosition = this.getElementPosition(tableElement);\n      // set style to filterOptionListElement\n      // let adjustHeightByHeaderActions = 0;\n      // if (this.tableModel.hiddenHeaderActions == true ) {\n      //   adjustHeightByHeaderActions = 0;\n      // }\n      filterOptionListElement.style.display = 'block';\n      filterOptionListElement.style.top = `${elementPosition.y - tableElementPosition.y + 30}px`;\n      filterOptionListElement.style.left = `${elementPosition.x - tableElementPosition.x - 20}px`;\n      }, 0);\n    }\n  }\n\n  // close Column Filter Selector  *only used by addEventListener\n  closeColumnFilterSelector($eventElement) {\n    if (this.columnFilterSelectorOpened === 'no-one-opened') { return; }\n    // if class of the selected elememt is 'columnCellFilterForm', keep Column Filter Selector open.\n    // otherwise, check if the selected elememt belongs to target elememt(Opened-Filter-List), if false, close Column Filter Selector\n    const classList = Array.from($eventElement.target.classList) || [];\n    if (!classList.includes('columnCellFilterForm')){\n      const filterOptionListElement = document.getElementById(`${this.columnFilterSelectorOpened}FilterList`);\n      let selectedElememt = $eventElement.srcElement ;\n      const isInTarget = this.isInTargetNode(selectedElememt, filterOptionListElement)\n      if (isInTarget === false) {\n        this.columnFilterSelectorOpened = 'no-one-opened';\n      }\n    }\n  }\n\n  // check if the selected elememt belongs to target elememt\n  isInTargetNode(element, targetElement){ //elemet是被點選元素，判斷是否在目標targetElement中\n    if(!element || element === document) { return false; }\n    return element === targetElement ? true : this.isInTargetNode(element.parentNode, targetElement);\n  }\n\n  // get parent element of speciy elememt and that should belong to Specified class\n  getElementBelongsToClass(_element, SpecifiedClass){\n    let element = _element;\n    if(!element || element === document) { return document.getElementsByClassName(SpecifiedClass)[0]; }\n    let classList = Array.from(element.classList) || [];\n    if (classList.includes(SpecifiedClass)){\n      return element;\n    } else {\n      return this.getElementBelongsToClass(element.parentElement, SpecifiedClass);\n    }\n  }\n\n  // generate column Filter List Id\n  getColumnFilterListId($columnId) {\n    return `${$columnId}FilterList`;\n  }\n\n  //display Column Filter Form\n  displayColumnCellFilterForm($columnId) {\n    return this.columnFilterSelectorOpened == $columnId;\n  }\n\n  getElementPosition (element) {\n    var x = 0;\n    var y = 0;\n    while ( element ) {\n      x += element.offsetLeft - element.scrollLeft + element.clientLeft;\n      y += element.offsetTop - element.scrollLeft + element.clientTop;\n      element = element.offsetParent;\n    }\n    return { x: x, y: y };\n  }\n\n  getColumnCellFilterOpionList(data) {\n    if(!data) { return; }\n    if (Object.keys(this.columnFilterStorage).length === 0) { return; }\n    const filterToolColumnList = Object.keys(this.columnFilterStorage);\n    for ( let columnIndex = 0; columnIndex < filterToolColumnList.length; columnIndex++ ) {\n\n      let _opionList = [];\n      for ( let i = 0; i < data.length; i++) {\n        _opionList.push(data[i][filterToolColumnList[columnIndex]]);\n      }\n      const opionList = [...new Set(_opionList)];\n      for ( let i = 0; i < opionList.length; i++) {\n        if(!opionList[i] && opionList[i] != 0) {\n          opionList[i] = {\n            'name': ' ',\n            'completed': true\n          };\n        } else {\n          opionList[i] = {\n            'name': opionList[i].toString(),\n            'completed': true\n          };\n        }\n      }\n      this.columnFilterStorage[filterToolColumnList[columnIndex]] = opionList;\n      this.columnCellFilterFormCheckBoxAllCompleted[filterToolColumnList[columnIndex]] = true;\n    }\n    this.dataSource.filterPredicate = this.updateFilterPredicateFunction().bind(this);\n    this.updateDataWithColumnCellFilter();\n  }\n\n  updateColumnCellFilterFormCheckBoxAllComplete(columnId: string) {\n    this.columnCellFilterFormCheckBoxAllCompleted[columnId] = this.columnFilterStorage[columnId] != null && this.columnFilterStorage[columnId].every(option => option.completed);\n    this.updateDataWithColumnCellFilter();\n  }\n\n  someColumnCellFilterFormCheckBoxComplete(columnId: string): boolean {\n    if (this.columnFilterStorage[columnId] == null) {\n      return false;\n    }\n    return this.columnFilterStorage[columnId].filter(option => option.completed).length > 0 && !this.columnCellFilterFormCheckBoxAllCompleted[columnId];\n  }\n\n  setAllColumnCellFilterFormCheckBoxComplete(isCompleted: boolean, columnId: string) {\n    if (this.columnFilterStorage[columnId] == null) {\n      return;\n    }\n    this.columnFilterStorage[columnId].forEach(option => option.completed = isCompleted);\n    //update data first, then update status and refresh filtered data\n    this.columnCellFilterFormCheckBoxAllCompleted[columnId] = isCompleted;\n    this.updateDataWithColumnCellFilter();\n  }\n\n  updateDataWithColumnCellFilter() {\n    if(this.searchResult === '') {\n      this.getSearchResult('◬'); // angular official used '◬'; Because '' would not go through Filter Predicate Function\n    } else {\n      this.getSearchResult(this.searchResult);\n    }\n  }\n\n  updateFilterPredicateFunction() {\n    const updatedFilterPredicate = function(data, filter: string) :boolean {\n      let isPicked: boolean;\n      // handle filter Tool Column -- start\n      let isPickedBetweenColumn: boolean = true; // if true, this data should be in the INTERSECTION between columns\n      const filterToolColumnList = Object.keys(this.columnFilterStorage) || [];\n      if (filterToolColumnList.length > 0) {\n        for ( let columnIndex = 0; columnIndex < filterToolColumnList.length; columnIndex++ ) {\n          const columnName = filterToolColumnList[columnIndex];\n          let isPickedWithinColumn: boolean = false; // if true, this data should be in the UNION of options selected\n          let dataValue = (!data[columnName] &&  (data[columnName] != 0)) ? ' ' : data[columnName].toString();\n          for ( let optionIndex = 0; optionIndex < this.columnFilterStorage[columnName].length; optionIndex++ ) {\n            if (this.columnFilterStorage[columnName][optionIndex].completed === true && this.columnFilterStorage[columnName][optionIndex].name) {\n              isPickedWithinColumn = isPickedWithinColumn || dataValue.toString().toLowerCase() === this.columnFilterStorage[columnName][optionIndex].name.toString().toLowerCase();\n            }\n          } // now, already gotten updated 'isPickedWithinColumn'\n          isPickedBetweenColumn = isPickedBetweenColumn && isPickedWithinColumn;\n        }\n      }\n      // handle filter Tool Column -- end\n\n      // handle searching Filter -- start\n      let isPickedBySearching: boolean = true;\n      const dataStr = // Transform the data into a lowercase string of all property values\n        Object.keys(data)\n          .reduce(( (currentTerm, key) => {\n              return currentTerm + (data)[key] + '◬'; // angular official used '◬';\n          } ), '').toLowerCase();\n\n      const transformedFilter = filter.trim().toLowerCase();\n      isPickedBySearching = dataStr.indexOf(transformedFilter) != -1;\n      // handle searching Filter -- end\n\n      isPicked = isPickedBetweenColumn && isPickedBySearching;\n      return isPicked;\n    }\n    return updatedFilterPredicate;\n  }\n\n  onDestroyFilterToolSetting() {\n    this.columnFilterStorage = {};\n    this.dataSource.filterPredicate = this.originFilterPredicate;\n  }\n\n  mouseoverEmmiter(event, element) {\n    if (!this.tableModel.hoverRowEmitEvent) {return;}\n    this.overRowEmmiter.emit({\n      rowData: element,\n      mouseX: event.clientX,\n      mouseY: event.clientY\n    });\n  }\n\n  mouseleaveEmmiter(element) {\n    if (!this.tableModel.hoverRowEmitEvent) {return;}\n    this.leaveRowEmmiter.emit(element);\n  }\n\n}\n","<div class=\"mat-data-table\">\n  <ng-container *ngIf=\"!tableModel.hiddenHeaderActions\">\n    <div class=\"mat-data-table-header\">\n      <!-- <div class=\"table-header-title\">列表</div> -->\n      <div class=\"table-header-actions\">\n        <ng-content select=\".table-header-actions\"></ng-content>\n        <button mat-flat-button class=\"margin-right-16 secondary-button\" [ngClass]=\"{'hidden': tableModel.hiddenRefresh}\"\n          (click)=\"refresh()\">\n          <mat-icon>refresh</mat-icon>\n          <span>{{'COMPONENT.DATA_TABLE.ACTION.REFRESH'|translate}}</span>\n        </button>\n        <button mat-flat-button class=\"margin-right-16 secondary-button hidden\" (click)=\"toggleFilter()\">\n          <mat-icon>filter_list</mat-icon>\n          <span>{{'COMPONENT.DATA_TABLE.ACTION.FILTER'|translate}}</span>\n        </button>\n        <button mat-flat-button class=\"margin-right-16 secondary-button\" (click)=\"toggleCustomize()\" [ngClass]=\"{'hidden': tableModel.hiddenCustomize}\">\n          <mat-icon>view_column</mat-icon>\n          <span>{{'COMPONENT.DATA_TABLE.ACTION.CUSTOMIZE'|translate}}</span>\n        </button>\n        <button mat-flat-button class=\"margin-right-16 secondary-button\" [ngClass]=\"{'hidden': selection.isEmpty()}\"\n          (click)=\"batchRemove()\">\n          <mat-icon>delete</mat-icon>\n          <span>{{'COMPONENT.DATA_TABLE.ACTION.DELETE'|translate}}</span>\n        </button>\n        <!-- <button mat-flat-button class=\"margin-right-16 secondary-button\">\n          <mat-icon>cloud_download</mat-icon>\n          <span>{{'COMPONENT.DATA_TABLE.ACTION.EXPORT'|translate}}</span>\n        </button> -->\n        <ng-container *ngTemplateOutlet=\"model.actionsTemplate\">\n        </ng-container>\n      </div>\n      <div class=\"table-header-icon-actions\" *ngIf=\"!model.hiddenSearch\">\n        <app-input [property]=\"search\" (searchEmmiter)=\"getSearchResult($event)\"></app-input>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"mat-data-table-body\">\n    <mat-table #matTable mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows\n      (matSortChange)=\"sortData($event)\">\n      <ng-container matColumnDef=\"filter\">\n        <mat-header-cell *matHeaderCellDef [attr.colspan]=\"columnsToDisplay.length\">\n          <div class=\"filter-container\" [ngClass]=\"{'show-filter': toggleFilterFlag}\">\n            Todo filter function\n          </div>\n        </mat-header-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"customize\">\n        <mat-header-cell *matHeaderCellDef [attr.colspan]=\"columnsToDisplay.length\">\n          <div class=\"customize-container\" [ngClass]=\"{'show-customize': toggleCustomizeFlag}\">\n            <div class=\"customize-wrapper\">\n              <ng-container *ngFor=\"let item of tableModel.columns;let i=index\">\n                <ng-container *ngIf=\"i>0\">\n                  <div class=\"column-item\">\n                    <mat-checkbox class=\"example-margin\" [(ngModel)]=\"item.visible\"\n                      (change)=\"columnVisibleChange(item)\">\n                      {{item.displayName}}\n                    </mat-checkbox>\n                  </div>\n                </ng-container>\n              </ng-container>\n            </div>\n          </div>\n        </mat-header-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"expand\" *ngIf=\"tableModel.expandRowSupport\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          <mat-icon [@expendSwitch]=\"element == expandedElement ? 'expanded': 'collapsed'\">\n            expand_more\n          </mat-icon>\n        </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"select\" *ngIf=\"tableModel.selectionSupport\">\n        <mat-header-cell *matHeaderCellDef>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\"\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel('')\">\n          </mat-checkbox>\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n            [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\n          </mat-checkbox>\n        </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"{{column.id}}\" [sticky]=\"i === 0 && !tableModel.noneStickyHeaderRow\"\n        *ngFor=\"let column of tableModel.columns let i=index\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header [disabled]=\"column.sort === 'disabled'\"\n          [start]=\"column.sort !== 'disabled' && column.sort\" [maxColumnWidth]=\"column.maxWidth\"\n          [minColumnWidth]=\"column.minWidth\">\n          {{column.displayName}}\n          <!-- Filter Tool of Specified Column Anchor point-- Start -->\n          <div [id]=\"column.id\"\n               class=\"columnCellFilterForm\"\n               style=\"padding-top: 8px; margin-left: 5px; cursor: pointer;\"\n               *ngIf=\"column.filterTool===true\"\n               (click)=\"openColumnFilterSelector(column.id)\">\n            <mat-icon class=\"columnCellFilterForm\" style=\"color: #656565; font-size: 18px; width: 18px; height: 18px;\">\n                filter_alt\n            </mat-icon>\n          </div>\n          <!-- Filter Tool of Specified Column Anchor point-- End -->\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" [maxColumnWidth]=\"column.maxWidth\" [minColumnWidth]=\"column.minWidth\">\n          <div *ngIf=\"!column.customCellTemplate; else customCellTemplate\" [ngStyle]=\"column.style\">\n            <div matTooltip=\"{{element[column.id]}}\" [matTooltipShowDelay]=\"500\">\n              {{element[column.id]}}\n            </div>\n          </div>\n          <ng-template #customCellTemplate>\n            <ng-template [ngTemplateOutlet]=\"column.customCellTemplate\" [ngTemplateOutletContext]=\"{ row: element }\">\n            </ng-template>\n          </ng-template>\n        </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"expandedDetail\" *ngIf=\"tableModel.expandRowSupport\">\n        <mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n          <!-- <div class=\"element-detail\" [ngClass]=\"{'expanded': element == expandedElement}\">\n            <ng-container *ngTemplateOutlet=\"model.expandRowTemplate; context:{ row: element }\">\n            </ng-container>\n          </div> -->\n          <div class=\"element-detail\" [@detailContent]=\"expandedElement === element ? 'expanded': 'collapsed'\">\n            <ng-container *ngTemplateOutlet=\"model.expandRowTemplate; context:{ row: element }\">\n            </ng-container>\n          </div>\n        </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"noRecord\">\n        <mat-footer-cell *matFooterCellDef [attr.colspan]=\"columnsToDisplay.length\">\n          <div class=\"message\" [ngClass]=\"{'show-message': filteredDataLength === 0}\">\n            {{'COMPONENT.DATA_TABLE.MESSAGE.NO_DATA'|translate}}\n          </div>\n        </mat-footer-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"loading\">\n        <mat-footer-cell *matFooterCellDef [attr.colspan]=\"columnsToDisplay.length\">\n          <mat-spinner [diameter]=\"32\"></mat-spinner>\n        </mat-footer-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"['filter']\" class=\"filter-table-columns\"\n        [ngClass]=\"{'show-filter': toggleFilterFlag}\">\n      </mat-header-row>\n      <mat-header-row *matHeaderRowDef=\"['customize']\" class=\"customize-table-columns\"\n        [ngClass]=\"{'show-customize': toggleCustomizeFlag}\">\n      </mat-header-row>\n      <!-- checkbox选中页面其他checkbox会闪烁 -->\n      <!-- <mat-header-row *matHeaderRowDef=\"['customize']\" class=\"customize-table-columns\"\n        [@actionExpand]=\"toggleCustomizeFlag ? 'expanded': 'collapsed'\">\n      </mat-header-row> -->\n      <mat-header-row *matHeaderRowDef=\"columnsToDisplay; sticky: !tableModel.noneStickyHeaderRow;\"></mat-header-row>\n      <mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"element-row\"\n        (click)=\"clickRow($event, element)\" [ngClass]=\"{'hiden-element': loading}\"\n        (mouseover) =\"mouseoverEmmiter($event, element)\" (mouseleave) =\"mouseleaveEmmiter(element)\"\n        [class.expanded-row]=\"expandedElement === element\">\n      </mat-row>\n      <ng-container *ngIf=\"tableModel.expandRowSupport\">\n        <mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"\n          [ngClass]=\"{'hiden-element': loading}\"\n          [class.expanded-row]=\"expandedElement === row\"></mat-row>\n        <!-- <mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"></mat-row> -->\n      </ng-container>\n      <mat-footer-row *matFooterRowDef=\"['noRecord']\" class=\"noRecord-footer-row\"\n        [ngClass]=\"{'show-record': !loading && filteredDataLength === 0}\"></mat-footer-row>\n      <mat-footer-row *matFooterRowDef=\"['loading']\" class=\"loading-footer-row\" [ngClass]=\"{'show-loading': loading}\">\n      </mat-footer-row>\n    </mat-table>\n    <mat-paginator [length]=\"filteredDataLength\" [pageSizeOptions]=\"[10, 20, 50]\" [pageSize]=\"customPageSize\" (page)=\"pagination($event)\"\n      showFirstLastButtons [ngClass]=\"{hidePaginator: hidePaginator}\">\n    </mat-paginator>\n    <ng-container *ngFor=\"let column of tableModel.columns\">\n      <ng-container *ngIf=\"column.filterTool===true\">\n        <div [id]=\"getColumnFilterListId(column.id)\" class=\"columnCellFilterOptionList columnCellFilterForm\" *ngIf=\"displayColumnCellFilterForm(column.id)\">\n          <span class=\"list-section columnCellFilterForm\">\n            <mat-checkbox class=\"columnCellFilterForm\"\n                          [checked]=\"columnCellFilterFormCheckBoxAllCompleted[column.id]\"\n                          [indeterminate]=\"someColumnCellFilterFormCheckBoxComplete(column.id)\"\n                          (change)=\"setAllColumnCellFilterFormCheckBoxComplete($event.checked, column.id)\">\n              ALL\n            </mat-checkbox>\n          </span>\n          <span class=\"list-section columnCellFilterForm\">\n            <div *ngFor=\"let option of columnFilterStorage[column.id]\" class=\"columnCellFilterForm\">\n              <mat-checkbox [(ngModel)]=\"option.completed\"\n                            (ngModelChange)=\"updateColumnCellFilterFormCheckBoxAllComplete(column.id)\"\n                            class=\"columnCellFilterForm\">\n                {{option.name}}\n              </mat-checkbox>\n            </div>\n          </span>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n","import { MatTableDataSource } from '@angular/material/table';\n\nexport class SelfDataSource<T> extends MatTableDataSource<T> {\n  private _backendPagination: boolean = false;\n  private _isCustomSortColumn: boolean = false;\n\n  get fromBackendData() {\n    return this._backendPagination;\n  }\n\n  set backendPagination(is: boolean) {\n    this._backendPagination = is;\n  }\n\n  get isCustomSortColumn () {\n    return this._isCustomSortColumn;\n  }\n  set customSortColumn(bool: boolean) {\n    this._isCustomSortColumn = bool;\n  }\n  constructor(initialData: T[] = []) {\n    super(initialData);\n  }\n\n  _filterData(data: T[]) {\n    if (!this._backendPagination) {\n      return super._filterData(data);\n    } else {\n      return this.data;\n    }\n  }\n\n  _orderData(data: T[]): T[] {\n    if (!this._backendPagination) {\n      if (this._isCustomSortColumn) {\n        if (this.sort.direction === '') return data;\n        if (this.sort.active === 'ip') {\n          return this.sortDataByIP(data.slice());\n        } else {\n          return super._orderData(data);  \n        }\n      } else {\n        return super._orderData(data);\n      }\n    } else {\n      return this.data;\n    }\n  }\n\n  _pageData(data: T[]): T[] {\n    if (!this._backendPagination) {\n      return super._pageData(data);\n    } else {\n      return this.data;\n    }\n  }\n\n  _updatePaginator(filteredDataLength: number) {\n    if (!this._backendPagination) {\n      super._updatePaginator(filteredDataLength);\n    }\n  }\n\n  sortDataByIP(data): T[] {\n    const nanArr = data.filter(item => isNaN(parseInt(item['ip'])))\n    const numberArr = data.filter(item => !isNaN(parseInt(item['ip'])))\n    numberArr.sort((a, b) => {\n      let aIP = this.getFirstIP(a['ip']);\n      let bIP = this.getFirstIP(b['ip']);\n      const aIPLen = aIP.split('.').length;\n      const bIPLen = bIP.split('.').length;\n      let comparatorResult = 0;\n      if (aIPLen === 4 && bIPLen === 4) {\n        const arr1 = aIP.split('.');\n        const arr2 = bIP.split('.');\n        for (let i = 0; i < 4; i++) {\n          if (parseInt(arr1[i]) > parseInt(arr2[i])) {\n            comparatorResult = 1;\n            return comparatorResult;\n          } else if (parseInt(arr1[i]) < parseInt(arr2[i])) {\n            comparatorResult = -1;\n            return comparatorResult;\n          }\n        }\n      } else if (aIPLen === 4) {\n        comparatorResult = 1;\n      } else if (bIPLen === 4) {\n        comparatorResult = -1;\n      }\n      return comparatorResult;\n    });\n    const totalArr = nanArr.concat(numberArr)\n    if (this.sort.direction === 'desc') {\n      totalArr.reverse();\n    }\n    return totalArr;\n  }\n\n  getFirstIP(data: T): string {\n    if (typeof data === 'string') {\n      return data.split(',')[0];\n    }\n    if (data instanceof Array) {\n      return data[0];\n    }\n    return data.toString();\n  }\n}","import {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger\n} from '@angular/animations';\n\nexport const EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4, 0.0, 0.2, 1)';\n\nexport const TableAnimations: {\n  readonly expendSwitch: AnimationTriggerMetadata;\n  // readonly detailExpand: AnimationTriggerMetadata;\n  readonly detailContent: AnimationTriggerMetadata;\n  readonly actionExpand: AnimationTriggerMetadata;\n} = {\n  expendSwitch: trigger('expendSwitch', [\n    state('collapsed', style({ transform: 'rotate(0deg)' })),\n    state('expanded', style({ transform: 'rotate(180deg)' })),\n    transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))\n  ]),\n  // detailExpand: trigger('detailExpand', [\n  //   state('collapsed', style({ height: 0, minHeight: 0, 'border-bottom-width': 0 })),\n  //   state('expanded', style({ height: '*', 'border-bottom-width': 0 })),\n  //   transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))\n  // ]),\n  detailContent: trigger('detailContent', [\n    state('collapsed, void', style({ height: 0  })),\n    state('expanded', style({ height: '*' })),\n    transition('expanded <=> collapsed, void => expanded', animate(EXPANSION_PANEL_ANIMATION_TIMING))\n  ]),\n  actionExpand: trigger('actionExpand', [\n    state('collapsed', style({ height: 0  })),\n    state('expanded', style({ height: '136px' })),\n    transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))\n  ])\n};","import {\n  Component, OnInit, ViewEncapsulation, ViewChild, ElementRef,\n  Output, EventEmitter, Input, OnChanges, SimpleChange\n} from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, map, distinctUntilChanged } from \"rxjs/operators\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { InputModel } from '../../../models/input';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.html',\n  styleUrls: ['./input.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class InputComponent implements OnInit, OnChanges {\n  @ViewChild('searchButton') searchButton: MatButton;\n  @ViewChild('inputContent', { static: true }) inputContent: ElementRef;\n  //todo change property disable\n  @Input() property: InputModel;\n  @Output() searchEmmiter = new EventEmitter<string>();\n\n  visiableSwitch: boolean = true;  //密码可见开关\n  isFocus: boolean = false;\n\n  constructor(private translate: TranslateService) { }\n\n  ngOnInit(): void {\n    this.initParams();\n  }\n  ngAfterViewInit(): void {\n    this.initKeyUpAction();\n  }\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }): void {\n    // console.log(changes);\n  }\n\n  initParams(): void {\n    this.property.type = this.property.type || 'text';\n    this.property.labelPosition = this.property.labelPosition || 'horizontal';\n    this.property.disable = this.property.disable || false;\n    this.property.required = this.property.required || false;\n    // this.property.content = this.property.content || '';\n  }\n\n  initKeyUpAction(): void {\n    fromEvent(this.inputContent.nativeElement, 'keyup')\n      .pipe(\n        map((event: any) => {\n          if (this.property.type === 'search') {\n            this.searchButton.disabled = event.target.value.length === 0 ? true : false;\n          }\n          return event.target.value;\n        })\n        , debounceTime(1000)\n        , distinctUntilChanged()\n      ).subscribe((text: string) => {\n        this.searchEmmiter.emit(text);\n      })\n  }\n\n  search(): void {\n    this.searchEmmiter.emit(this.property.content);\n  }\n\n  clear(): void {\n    this.property.content = '';\n    this.searchButton.disabled = true;\n    this.searchEmmiter.emit(this.property.content);\n    this.inputContent.nativeElement.focus();\n  }\n\n  onFocusEvent(): void {\n    this.isFocus = true;\n  }\n\n  onBlurEvent(): void {\n    this.isFocus = false;\n  }\n\n  changePasswordIcon(): void {\n    this.visiableSwitch = !this.visiableSwitch;\n    this.inputContent.nativeElement.type = this.visiableSwitch ? 'password' : 'text';\n  }\n}","<div class=\"input-field\">\n  <div class=\"input-container {{property.labelPosition}}\">\n    <ng-container *ngIf=\"property.labelValue\">\n      <div class=\"{{property.labelPosition}}-label\">\n        <mat-label>{{property.labelValue}}</mat-label>\n      </div>\n    </ng-container>\n    <div class=\"input-wrapper {{property.type}}\" [ngClass]=\"{'on-focus': isFocus}\">\n      <ng-container *ngIf=\"property.type === 'search'\">\n        <button #searchButton mat-icon-button aria-label=\"search\" class=\"search\" (click)=\"search()\" disabled>\n          <mat-icon class=\"md-18\">search</mat-icon>\n        </button>\n      </ng-container>\n      <input #inputContent matInput placeholder=\"{{property.placeholder}}\" type=\"{{property.type}}\"\n        [required]=\"property.required\" [pattern]=\"property.pattern\"\n        [disabled]=\"property.disable\" class=\"content\" [(ngModel)]=\"property.content\" (focus)=\"onFocusEvent()\"\n        (blur)=\"onBlurEvent()\">\n      <ng-container *ngIf=\"property.type === 'search'\">\n        <button mat-icon-button aria-label=\"clear\" class=\"clear\" [ngClass]=\"{visible: property.content}\"\n          (click)=\"clear()\">\n          <mat-icon class=\"md-18\">clear</mat-icon>\n        </button>\n      </ng-container>\n      <ng-container *ngIf=\"property.type === 'password'\">\n        <button #passwordVisibleButton mat-icon-button aria-label=\"clear\" class=\"password\"\n          [ngClass]=\"{visible: property.content}\" (click)=\"changePasswordIcon()\">\n          <mat-icon class=\"md-18\" *ngIf=\"visiableSwitch\">visibility</mat-icon>\n          <mat-icon class=\"md-18\" *ngIf=\"!visiableSwitch\">visibility_off</mat-icon>\n        </button>\n      </ng-container>\n    </div>\n    <div class=\"hint-wrapper\" *ngIf=\"property.hint\">\n      <mat-hint>{{property.hint}}</mat-hint>\n    </div>\n    <div class=\"error-wrapper\" *ngIf=\"property.errorHint\">\n      <mat-error >{{property.errorHint}}</mat-error>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-label-input',\n  templateUrl: './label-input.component.html',\n  styleUrls: ['./label-input.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class LabelInputComponent implements OnInit {\n  @Input() label: string;\n  @Input() labelTooltip?: string;\n  @Input() isNotFormInput: boolean = false;\n  @Input() isRequired: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"component-div\" [ngClass]=\"{'not-form-input': isNotFormInput, 'required': isRequired}\">\n  <div class=\"label\" [matTooltip]=\"labelTooltip || label\">\n    {{ label }}\n    <span>*</span>\n  </div>\n  <div>\n    <ng-content></ng-content>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgMaterialModule } from '../../ng-material/ng-material.module';\nimport { LabelInputComponent } from './label-input.component';\n\n\n\n@NgModule({\n  declarations: [LabelInputComponent],\n  imports: [\n    CommonModule,\n    NgMaterialModule\n  ],\n  exports: [LabelInputComponent]\n})\nexport class LabelInputModule { }\n","import { Component, Inject, ViewEncapsulation, OnInit, AfterViewInit, OnDestroy, ComponentRef } from '@angular/core';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ModalOverlayRef } from './overlay-ref.service';\nimport { MODAL_DATA, CHILD_FORM } from './modal.token';\nimport { FormGroup, FormBuilder, FormArray, FormControl } from '@angular/forms';\nimport { BaseModal } from './modal.base';\nimport { BasicModal } from '../../../models/modal';\n\n@Component({\n  selector: 'app-basic-modal',\n  templateUrl: './basic-modal.component.html',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./modal.component.scss']\n})\nexport class BasicModalComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public model: BasicModal,\n    private dialogRef: MatDialogRef<BasicModalComponent>) {\n  }\n  ngOnInit(): void {\n  }\n}\n\n@Component({\n  selector: 'app-application-modal',\n  templateUrl: './application-modal.component.html',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./modal.component.scss']\n})\nexport class ApplicationModalComponent implements OnDestroy {\n  modalOutlet: ComponentPortal<any>;\n  title: string;\n  parentForm = new FormGroup({});\n  formInvalid: boolean = true;\n  loadingStatus: boolean = false;\n\n  private componentRef: ComponentRef<BaseModal>;\n\n  constructor(\n    @Inject(MODAL_DATA) public data,\n    private modalOverlayRef: ModalOverlayRef) {\n    this.title = data.title;\n  }\n\n  close() {\n    this.modalOverlayRef.close(null);\n  }\n\n  validAllForm(formGroup: FormGroup | FormArray) {\n    for (let i in formGroup.controls) {\n      let absControl = formGroup.controls[i];\n      if (absControl instanceof FormControl) {\n        let control: FormControl = formGroup.controls[i];\n        control.markAsTouched();\n        control.updateValueAndValidity();\n      } else if (absControl instanceof FormGroup) {\n        let group: FormGroup = formGroup.controls[i];\n        this.validAllForm(group);\n      } else if (absControl instanceof FormArray) {\n        let formArray: FormArray = formGroup.controls[i];\n        this.validAllForm(formArray);\n      }\n    }\n  }\n\n  submit(): void {\n    if (this.parentForm.status !== 'VALID') {\n      this.validAllForm(<FormGroup>this.parentForm.get(CHILD_FORM));\n      return;\n    }\n\n    if (this.componentRef && this.componentRef.instance && this.componentRef.instance.submit) {\n      this.loadingStatus = true;\n      this.componentRef.instance.submit().subscribe(\n        (res) => {\n          this.loadingStatus = false;\n          this.modalOverlayRef.close(res);\n        },\n        (err) => {\n          this.loadingStatus = false;\n          this.modalOverlayRef.error(err);\n        }\n      )\n    } else {\n      this.modalOverlayRef.error(\"No submit function.\");\n    }\n\n  }\n\n  receiveReference(ref) {\n    this.componentRef = ref;\n  }\n\n  ngOnDestroy(): void {\n    this.modalOverlayRef.close(null);\n    this.parentForm = null;\n  }\n}\n\n","<div mat-dialog-title>\n  {{model.title}}\n  <mat-icon class=\"close-icon\" mat-dialog-close></mat-icon>\n</div>\n<div mat-dialog-content>\n  <ng-container *ngIf=\"model.content\">\n    {{model.content}}\n  </ng-container>\n  <ng-container *ngIf=\"model.template\">\n    <ng-template [ngTemplateOutlet]=\"model.template\"\n      [ngTemplateOutletContext]=\"{$implicit: model.data}\"></ng-template>\n    </ng-container>\n</div>\n<div mat-dialog-actions *ngIf=\"model.showCancelBtn || model.showSubmitBtn || model.showConfirmBtn\">\n  <ng-container *ngIf=\"model.showConfirmBtn\">\n    <button mat-raised-button [mat-dialog-close]=\"true\" [disabled]=\"model.formGroup?!model.formGroup.valid:false\" type=\"submit\">\n      {{'CONPONENT.MODAL.ACTIONS.BUTTON.CONFIRM'|translate}}\n    </button>\n  </ng-container>\n  <ng-container *ngIf=\"model.showSubmitBtn\">\n    <button mat-raised-button [mat-dialog-close]=\"true\" [disabled]=\"model.formGroup?!model.formGroup.valid:false\"  type=\"submit\">\n      {{'CONPONENT.MODAL.ACTIONS.BUTTON.SUBMIT'|translate}}\n    </button>\n  </ng-container>\n  <ng-container *ngIf=\"model.showCancelBtn\">\n    <button mat-stroked-button mat-dialog-close>\n      {{'CONPONENT.MODAL.ACTIONS.BUTTON.CANCEL'|translate}}\n    </button>\n  </ng-container>\n</div>\n","<div class=\"modal-container\">\n\n  <div class=\"modal-header\">\n    <div class=\"modal-header-inner\">\n      <div class=\"modal-header-text\">{{title}}</div>\n      <div class=\"flex-grow\"></div>\n      <div class=\"modal-header-actions\">\n        <button mat-stroked-button (click)=\"close()\">{{'CONPONENT.MODAL.ACTIONS.BUTTON.CANCEL'|translate}}</button>\n        <button mat-raised-button (click)=\"submit()\" style=\"position: relative;\">\n          {{'CONPONENT.MODAL.ACTIONS.BUTTON.SUBMIT'|translate}}\n          <ng-container *ngIf=\"loadingStatus\">\n            <mat-spinner  color=\"accent\" [diameter]=\"20\" style=\"position: absolute; top: 7px; left: 85px;\"></mat-spinner>\n          </ng-container>\n        </button>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"modal-content\">\n    <ng-template #target (attached)=\"receiveReference($event)\" [cdkPortalOutlet]=\"modalOutlet\">\n    </ng-template>\n  </div>\n\n</div>\n","import { Injectable, TemplateRef, ComponentRef, Injector } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { BasicModalComponent, ApplicationModalComponent } from './modal.component';\nimport { Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport { PortalInjector, ComponentPortal } from '@angular/cdk/portal';\nimport { ModalOverlayRef } from './overlay-ref.service';\nimport { MODAL_DATA, PARENT_FORM } from './modal.token';\nimport { BasicModal } from '../../../models/modal';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasicModalService {\n  private dialogRef: MatDialogRef<BasicModalComponent>;\n  constructor(public dialog: MatDialog) { }\n\n  openBasicDialog(model: BasicModal, additionalDialogConfigData?: any)\n    : MatDialogRef<BasicModalComponent> {\n    if (this.dialogRef) {\n      this.dialogRef.close();\n    }\n    this.dialogRef = this.dialog.open(BasicModalComponent, {\n      panelClass: 'basic-modal',\n      maxWidth: '90%',\n      data: model,\n      ...additionalDialogConfigData\n    });\n    this.dialogRef.addPanelClass(model.size || 'small')\n    return this.dialogRef;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApplicationModalService {\n  dialogComponentRef: ComponentRef<any>;\n\n  constructor(\n    private overlay: Overlay,\n    private injector: Injector,\n  ) {}\n\n  open<R = any, T = any>(\n    content: string | TemplateRef<any> | any,\n    data: T\n  ): ModalOverlayRef<R> {\n    const configs = new OverlayConfig({\n      hasBackdrop: true,\n      backdropClass: 'modal-background',\n      panelClass: 'application-overlay-wrapper'\n    });\n    const overlayRef = this.overlay.create(configs);\n    const modalOverlayRef = new ModalOverlayRef<R, T>(overlayRef);\n    const parentInjector = this.createInjector(modalOverlayRef, data);\n    const parentComponent = new ComponentPortal(ApplicationModalComponent, null, parentInjector);\n    const componentRef = overlayRef.attach(parentComponent);\n    const parentForm = componentRef.instance.parentForm;\n    data[PARENT_FORM] = parentForm;\n    const childInjector = this.createInjector(modalOverlayRef, data);\n    const childComponent = new ComponentPortal(content, null, childInjector);\n    componentRef.instance.modalOutlet = childComponent;\n    return modalOverlayRef;\n  }\n\n  private createInjector(ref: ModalOverlayRef, data: any) {\n    const injectorTokens = new WeakMap();\n    injectorTokens.set(MODAL_DATA, data);\n    injectorTokens.set(ModalOverlayRef, ref);\n    return new PortalInjector(this.injector, injectorTokens);\n  }\n}","import { InjectionToken } from '@angular/core';\nimport { ApplicationModalConfig } from '../../../models/modal';\n\nexport const MODAL_DATA = new InjectionToken<ApplicationModalConfig>('MODAL_DATA');\nexport const PARENT_FORM = 'parentForm'\nexport const CHILD_FORM = 'childForm';","import { Subject, Subscription } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\nimport { OverlayRef } from \"@angular/cdk/overlay\";\n\nexport interface OverlayCloseEvent<R> {\n  type: 'backdropClick' | 'close';\n  data: R;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalOverlayRef<R = any, T = any> {\n  afterClose$ = new Subject<OverlayCloseEvent<R>>();\n\n  constructor(\n    public overlay: OverlayRef\n    ) { }\n\n  public error(err: any) {\n    this.afterClose$.error(err);\n    this.afterClose$.complete();\n    this.overlay.dispose();\n  }\n\n  public close(data?: R) {\n    this._close('close', data);\n  }\n\n  private _close(type: 'backdropClick' | 'close', data: R) {\n    this.afterClose$.next({type: type, data: data});\n    this.afterClose$.complete();\n    this.overlay.dispose();\n  }\n\n  public subscribe(\n    next?: (value: OverlayCloseEvent<R>) => void,\n    error?: (error: any) => void\n  ): Subscription {\n    let subscription = this.afterClose$.subscribe(\n      (res) => next ? next(res) : () => {\n      },\n      err => error ? error(err) : () => {\n      });\n    return subscription;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    PortalModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    ScrollingModule,\n    MatFormFieldModule\n  ]\n})\nexport class NgMaterialModule { }\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {LoginService, APP_MARSMIDDLE_USER_ROLE, APP_MARSMIDDLE_LOGIN_TOKEN} from '../../pages/login/service/login.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private loginService: LoginService,\n    private router: Router\n  ) { }\n\n  canActivate(): boolean {\n    return this.checkLogin();\n  }\n\n  checkLogin(): boolean {\n    const loginToken: string = localStorage.getItem(APP_MARSMIDDLE_LOGIN_TOKEN);\n    // console.log('AuthGuard#canActivate called', loginToken);\n    if (!loginToken) {\n      this.router.navigate(['/login'], {queryParams: {returnUrl: window.location.pathname}});\n      return false;\n    }\n    return true; \n  }\n\n}\n","export const apiUrl = window.location.origin + '/marsmiddle/api/v1';","import { Injectable } from '@angular/core';\nimport { delay, tap } from 'rxjs/operators';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from \"@angular/router\";\nimport { APP_MARSMIDDLE_LOGIN_TOKEN } from '../../pages/login/service/login.service';\n\n// Set Token in Headers into HttpRequest\n@Injectable()\nexport class TokenAuthHttpInterceptor implements HttpInterceptor {\n  constructor() { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token: string = localStorage.getItem(APP_MARSMIDDLE_LOGIN_TOKEN) || '';\n    // console.log('TokenAuth #HttpInterceptor called: ', token);\n    const requestWithToken = req.clone({ setHeaders: {Authorization: `Bearer ${token}`}});\n    return next.handle(requestWithToken);\n  }\n}\n\n//  deal with Unauthorized error 401 & error messages\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(\n    private router: Router,\n  ) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      tap(event => {\n      }, error => {\n        // update error message by the language\n        const errorMassageMultiLanguage = JSON.parse(localStorage['marsMiddleErrorMassageMultiLanguage']) || { };\n        const errorMassageKeys = Object.keys(errorMassageMultiLanguage);\n        const selectLanguage = localStorage['language'] || 'cn';\n        const errorMessage = error.error?.error?.message || '';\n        const errorParams: string[] = error.error?.error?.details || [];\n        if (errorMessage && errorMassageKeys.includes(errorMessage)) {\n          if (selectLanguage === 'cn') {\n            error.error.error.message = this.updateParams(errorMassageMultiLanguage[errorMessage].zh, errorParams);\n          } else {\n            error.error.error.message = this.updateParams(errorMassageMultiLanguage[errorMessage].en, errorParams);\n          }\n        }\n        // navigate to login page when user's authourization is invalid or expired\n        const isRoleError: boolean = error.error?.error?.message?.toUpperCase().includes('ROLE') || false;\n        if (error.status === 401 && !isRoleError) {\n          this.router.navigate(['/login'], {queryParams: {returnUrl: window.location.pathname}});\n          return;\n        }\n        // navigate to login page when server is not turned on\n        if (error.status === 0) {\n          this.router.navigate(['/login'], {queryParams: {returnUrl: window.location.pathname}});\n          return;\n        }\n        \n      }),\n      delay(200)\n    );\n  }\n\n  private updateParams(message: string, params: string[]): string{\n    if (params.length === 0) { return message; }\n    let returnMessage: string = message;\n    for (let i = 0; i < params.length; i++) {\n      const paramSequence: string = `%${i+1}`;\n      returnMessage = returnMessage.replace(paramSequence, params[i]);\n    }\n    return returnMessage;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18nService {\n\n  constructor() { }\n\n\tgetLanguage(): string{\n\t\tif (localStorage){\n\t\t\treturn localStorage['language'] || 'cn';\n\t\t}\n\t\telse{\n\t\t\treturn 'cn';\n\t\t}\n\t}\n\n\tsetLanguage(language: string){\n\t\tif (localStorage){\n\t\t\tlocalStorage['language'] = language;\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainFrameOperatorService {\n  appDrawerRef: any;\n  currentUrl = new BehaviorSubject<string>(undefined);\n\n  constructor(\n    private router: Router\n  ) {\n    this.router.events.subscribe((event: Event) => {\n      if (event instanceof NavigationEnd) {\n        this.currentUrl.next(event.urlAfterRedirects);\n      }\n    });\n  }\n\n  closeDrawer() {\n    this.appDrawerRef.close();\n  }\n\n  openDrawer() {\n    this.appDrawerRef.open();\n  }\n\n  getDrawerWidth() {\n    const drawerDom = this.appDrawerRef._elementRef.nativeElement;\n\n    return drawerDom.offsetWidth;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockDataService {\n\n  constructor() { }\n\n  getMockEvents() {\n    const mockData = {\n      events: [\n        {\n          title: 'Event01',\n          timestamp: 'Tue, 18 Oct 2022 03:07:01 GMT',\n          confirm: true\n        },{\n          title: 'Event02',\n          timestamp: 'Tue, 15 Oct 2022 03:07:01 GMT',\n          confirm: false\n        },{\n          title: 'Event03',\n          timestamp: 'Tue, 18 Oct 2022 13:07:01 GMT',\n          confirm: false\n        },{\n          title: 'Event04',\n          timestamp: 'Tue, 16 Oct 2022 03:17:01 GMT',\n          confirm: true\n        }\n      ],\n      unReadCounter: 2\n    };\n\n    return of(mockData);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegexService {\n\tprivate ruleMap = new Map();\n\n  constructor() {\n    this.ruleMap.set('number', /^[0-9]+$/);\n    this.ruleMap.set('name_en_15', /^[A-Za-z\\d_-]{1,15}$/);\n    this.ruleMap.set('username_5_20', /^[A-Za-z\\d_-]{5,20}$/);\n    this.ruleMap.set('password_8', /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)[\\w\\W]{8,}$/);\n    this.ruleMap.set('ipv4', /^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$/);\n  }\n\n\tgetRule(type: string): RegExp {\n\t\treturn this.ruleMap.get(type);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { IndividualConfig } from 'ngx-toastr/toastr/toastr-config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastrOperatorService {\n\n  constructor(\n    private toastrService: ToastrService\n  ) { }\n\n  showSuccessToastr(message?: string, title?: string, toastrConfig?: Partial<IndividualConfig>) {\n    if (toastrConfig === undefined) {\n      toastrConfig = {\n        closeButton: true,\n        easeTime: 500,\n        extendedTimeOut: 500,\n        timeOut: 1500,\n        tapToDismiss: true\n      };\n    }\n\n    return this.toastrService.success(message, title, toastrConfig);\n  }\n\n  showWarningToastr(message?: string, title?: string, toastrConfig?: Partial<IndividualConfig>): any {\n    if (toastrConfig === undefined) {\n      toastrConfig = {\n        closeButton: true,\n        easeTime: 500,\n        extendedTimeOut: 500,\n        timeOut: 4000,\n        tapToDismiss: true\n      };\n    }\n\n    return this.toastrService.warning(message, title, toastrConfig);\n  }\n\n  showErrorToastr(message?: string, title?: string, toastrConfig?: Partial<IndividualConfig>): any {\n    if (toastrConfig === undefined) {\n      toastrConfig = {\n        closeButton: true,\n        easeTime: 500,\n        extendedTimeOut: 500,\n        timeOut: 4000,\n        tapToDismiss: true\n      };\n    }\n\n    return this.toastrService.error(message, title, toastrConfig);\n  }\n\n  clearToastr(){\n    this.toastrService.clear();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}