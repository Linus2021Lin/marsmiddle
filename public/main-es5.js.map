{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/account-management.ts","webpack:///src/app/pages/account-management/account-management.component.ts","webpack:///src/app/pages/account-management/account-management.component.html","webpack:///src/app/pages/account-management/account-management.module.ts","webpack:///src/app/pages/account-management/formModal/account-management-modal.component.ts","webpack:///src/app/pages/account-management/formModal/account-management-modal.component.html","webpack:///src/app/pages/account-management/service/account-management-api-url.service.ts","webpack:///src/app/pages/account-management/service/account-management-table-model.service.ts","webpack:///src/app/pages/account-management/service/account-management.service.ts","webpack:///src/app/pages/dashboard/dashboard.component.ts","webpack:///src/app/pages/dashboard/dashboard.component.html","webpack:///src/app/pages/dashboard/dashboard.module.ts","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/service/constant.service.ts","webpack:///src/app/pages/login/service/login.service.ts","webpack:///src/app/pages/main-frame/component/side-menu/side-menu.component.ts","webpack:///src/app/pages/main-frame/component/side-menu/side-menu.component.html","webpack:///src/app/pages/main-frame/component/top-nav-bar/top-nav-bar.component.ts","webpack:///src/app/pages/main-frame/component/top-nav-bar/top-nav-bar.component.html","webpack:///src/app/pages/main-frame/main-frame.component.ts","webpack:///src/app/pages/main-frame/main-frame.component.html","webpack:///src/app/pages/main-frame/main-frame.module.ts","webpack:///src/app/pages/main-frame/service/constant.service.ts","webpack:///src/app/pages/main-frame/service/page-handler.service.ts","webpack:///src/app/pages/pages.module.ts","webpack:///src/app/pages/sites/formModal/controllerFormModal.component.ts","webpack:///src/app/pages/sites/formModal/controllerFormModal.component.html","webpack:///src/app/pages/sites/formModal/siteFormModal.component.ts","webpack:///src/app/pages/sites/formModal/siteFormModal.component.html","webpack:///src/app/pages/sites/service/site.service.ts","webpack:///src/app/pages/sites/service/siteApiUrl.service.ts","webpack:///src/app/pages/sites/service/siteTableModel.service.ts","webpack:///src/app/pages/sites/sites.component.ts","webpack:///src/app/pages/sites/sites.component.html","webpack:///src/app/pages/sites/sites.module.ts","webpack:///src/app/public-share/component/component.module.ts","webpack:///src/app/public-share/component/data-table/column-width.directive.ts","webpack:///src/app/public-share/component/data-table/data-table.component.ts","webpack:///src/app/public-share/component/data-table/data-table.component.html","webpack:///src/app/public-share/component/data-table/dataSource.ts","webpack:///src/app/public-share/component/data-table/table-animations.ts","webpack:///src/app/public-share/component/input/input.component.ts","webpack:///src/app/public-share/component/input/input.html","webpack:///src/app/public-share/component/label-input/label-input.component.ts","webpack:///src/app/public-share/component/label-input/label-input.component.html","webpack:///src/app/public-share/component/label-input/label-input.module.ts","webpack:///src/app/public-share/component/modal/modal.component.ts","webpack:///src/app/public-share/component/modal/basic-modal.component.html","webpack:///src/app/public-share/component/modal/application-modal.component.html","webpack:///src/app/public-share/component/modal/modal.service.ts","webpack:///src/app/public-share/component/modal/modal.token.ts","webpack:///src/app/public-share/component/modal/overlay-ref.service.ts","webpack:///src/app/public-share/ng-material/ng-material.module.ts","webpack:///src/app/public-share/service/auth.guard.ts","webpack:///src/app/public-share/service/environment.ts","webpack:///src/app/public-share/service/httpInterceptor.ts","webpack:///src/app/public-share/service/i18n.service.ts","webpack:///src/app/public-share/service/main-frame-operator.service.ts","webpack:///src/app/public-share/service/mock-data.service.ts","webpack:///src/app/public-share/service/regex.service.ts","webpack:///src/app/public-share/service/toastr-operator.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","children","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","i18nJsonLoaderFactory","http","translateInitializerFactory","translate","language","window","localStorage","setDefaultLang","use","toPromise","AppModule","provide","useFactory","deps","multi","useClass","toastClass","closeButton","easeTime","extendedTimeOut","timeOut","loader","declarations","providers","bootstrap","UserRoleType","AccountManagementComponent","formBuilder","regexService","toastrOperatorService","accountMgmtService","accountMgmtTableModelService","loginService","accountMgmtTableData$","loading$","initialTableModel","refreshTableData","currentUser","getCurrentUsername","isGuest","isGuestUser","getAccountMgmtTableData","accountMgmtTableModel","getAccountMgmtTableModel","updateTableCellTemplate","tableModel","columns","forEach","item","customCellTemplate","accountMgmtMultiActionsRef","addUser","rowData","$event","deleteUserAccount","username","updateUserAccount","encapsulation","None","AccountManagementModule","AccountMgmtFormModalComponent","modalConfig","accountMgmtApiUrlService","roleOptions","administrator","guest","currentUserRole","getItem","accountMgmtForm","group","userName","required","pattern","getRule","password","role","updateFlag","data","updateInfo","updateUserName","get","setValue","disable","setValidators","addControl","getRawValue","subscriber","putUserParams","putUser","subscribe","next","err","error","signUpUserParams","signUpUser","AccountMgmtApiUrlService","userInfo","post","put","providedIn","AccountMgmtTableModelService","displayName","instant","maxWidth","sort","hiddenRefresh","hiddenCustomize","AccountMgmtService","router","appModalService","basicModalService","_accountMgmtTableData","_loading","asObservable","unsubscribe","getUsers","pipe","errorMessage","message","showErrorToastr","usersRes","accountMgmtTableData","front","behind","frontUserRole","toUpperCase","behindUserRole","JSON","parse","stringify","openAccountMgmtFormModal","action","toastrTitle","successMessage","modalRef","open","afterClose$","res","showSuccessToastr","setTimeout","model","content","showCancelBtn","showConfirmBtn","openBasicDialog","afterClosed","confirm","deleteUser","noneRes","DashboardComponent","DashboardModule","LoginComponent","activatedRoute","constantService","i18nService","loginServerOptions","languageOptions","isLoginError","isUnknownError","isLoginSuccess","isLogin","getLoginServerOptions","getLanguageOptions","languageCode","getLanguage","returnUrl","snapshot","queryParams","siteLanguage","find","option","value","label","loginForm","defaultErrorMsgMultiLang","loginData","loginLocal","val","navigate","status","console","log","setLanguage","valid","loginWithAuth01","markAllAsTouched","onSubmit","LoginModule","ConstantService","APP_MARSMIDDLE_LOGIN_USER","APP_MARSMIDDLE_USER_ROLE","APP_MARSMIDDLE_LOGIN_TOKEN","LoginService","isLoggedIn","user","observe","postUserLogin","body","token","setItem","logoutObservable","postUserLogout","redirectToLogin","removeItem","SideMenuComponent","mainFrameOperatorService","menuItems","isExpanded","ariaExpanded","getMenuList","currentUrl","url","selectedItem","routingName","selectedRoute","indexOf","isActive","menuItem","subMenu","length","transform","animations","TopNavBarComponent","pageHandlerService","unReadCounter","isInit","eventItems","isEventLoading","getEventData","getErrorMassageMultiLanguage","response","event","stopPropagation","preventDefault","confirmEventIndex","findIndex","logout","MainFrameComponent","appDrawerRef","MainFrameModule","translateService","itemName","menuLevel","iconName","isShow","iconImagePath","PageHandlerService","mockDataService","getMockEvents","Object","PagesModule","ControllerFormModalComponent","siteApiUrlService","controllerForm","siteName","controllerName","ipAddress","loginAccount","loginPassword","description","updateSiteName","updateControllerName","originalIpAddress","originalCtrlUser","valueChanges","updateValueAndValidity","putControllerParams","putController","postControllerParams","postController","SiteFormModalComponent","siteForm","siteDescription","putSiteParams","putSite","postSiteParams","postSite","SiteService","_siteTableData","siteTableData$","sitesData","getSites","hour","count","sitesErrorLogData","getSitesErrorLog","sitesRes","sitesErrorLogRes","siteTableData","site","push","controllers","controllerCounts","_controllersErrLog","_site","controller","cpuUsagePercentage","cpuIdle","ramUsagePercentage","ramUsage","availableDeviceCountsString","availableDeviceCounts","toString","deviceCountsString","deviceCounts","availableDevices","_controllerErrLog","_controller","errorLog","reverse","openSiteFormModal","openControllerFormModal","getSitesTableData","deleteSite","deleteController","controllerErrorLogTemplateRef","openControllerErrorLogModal","template","size","SiteApiUrlService","SiteTableModelService","expandRowSupport","expandRowTemplate","undefined","minWidth","SitesComponent","siteService","siteTableModelService","siteTableModel","getSiteTableModel","controllerTableModel","getControllerTableModel","controllersRef","level","siteMultiActionsRef","controllerMultiActionsRef","controllerLinkRef","controllerLoginStatusRef","controllerCpuUsagePercentageRef","controllerRamUsagePercentageRef","controllerAvailableDevicesRef","controllerErrorLogRef","addSite","addController","updateSite","updateController","getControllerErrorLog","controllerIp","percentage","color","SitesModule","ComponentModule","MaxColumnWidthDirective","elementRef","_element","nativeElement","style","MinColumnWidthDirective","selection","DISPLAY_COLUMN_EXPAND","DISPLAY_COLUMN_SELECT","DataTableComponent","deleteEmmiter","refreshEmmiter","overRowEmmiter","leaveRowEmmiter","paginationEmmiter","columnsToDisplay","dataSource","toggleFilterFlag","toggleCustomizeFlag","initialSelection","allowMultiSelect","paginationParams","filter","pageIndex","pageSize","filteredDataLength","search","type","placeholder","expandedElement","loading","searchResult","columnFilterStorage","columnFilterSelectorOpened","columnCellFilterFormCheckBoxAllCompleted","originFilterPredicate","filterPredicate","sortSupport","hiddenHeaderActions","hiddenSearch","hoverRowEmitEvent","noneStickyHeaderRow","selectionSupport","backendPagination","initTableColumns","paginator","originData$","Array","getColumnCellFilterOpionList","filteredData","fromBackendData","loadingStatus$","_intl","itemsPerPageLabel","document","addEventListener","closeColumnFilterSelector","bind","filterIconEventListener","changes","currentValue","onDestroyFilterToolSetting","visible","toLowerCase","filterTool","unshift","refreshDisplayColumns","index","splice","temp","firstPage","emit","ref","col","active","direction","name","customSort","customSortColumn","numSelected","selected","numRows","startIndex","sliceData","slice","isAllSelected","clear","row","select","isSelected","position","rowElement","hasValue","getElementById","$columnId","filterOptionListElement","element","elementPosition","getElementPosition","tableElement","getElementBelongsToClass","tableElementPosition","display","top","y","left","x","$eventElement","classList","from","target","includes","selectedElememt","srcElement","isInTarget","isInTargetNode","targetElement","parentNode","SpecifiedClass","getElementsByClassName","parentElement","offsetLeft","scrollLeft","clientLeft","offsetTop","clientTop","offsetParent","filterToolColumnList","columnIndex","_opionList","i","opionList","Set","updateFilterPredicateFunction","updateDataWithColumnCellFilter","columnId","every","completed","isCompleted","getSearchResult","updatedFilterPredicate","isPicked","isPickedBetweenColumn","columnName","isPickedWithinColumn","dataValue","optionIndex","isPickedBySearching","dataStr","reduce","currentTerm","key","transformedFilter","trim","mouseX","clientX","mouseY","clientY","sortData","pagination","expendSwitch","detailContent","actionExpand","SelfDataSource","initialData","_backendPagination","_isCustomSortColumn","is","bool","sortDataByIP","nanArr","isNaN","parseInt","numberArr","a","b","aIP","getFirstIP","bIP","aIPLen","split","bIPLen","comparatorResult","arr1","arr2","totalArr","concat","EXPANSION_PANEL_ANIMATION_TIMING","TableAnimations","height","InputComponent","searchEmmiter","visiableSwitch","isFocus","initParams","initKeyUpAction","property","labelPosition","inputContent","searchButton","disabled","text","focus","onFocusEvent","onBlurEvent","LabelInputComponent","isNotFormInput","isRequired","LabelInputModule","BasicModalComponent","dialogRef","ApplicationModalComponent","modalOverlayRef","parentForm","formInvalid","loadingStatus","close","formGroup","controls","absControl","control","markAsTouched","validAllForm","formArray","componentRef","instance","submit","receiveReference","BasicModalService","dialog","additionalDialogConfigData","panelClass","addPanelClass","ApplicationModalService","overlay","injector","configs","hasBackdrop","backdropClass","overlayRef","create","parentInjector","createInjector","parentComponent","attach","childInjector","childComponent","modalOutlet","injectorTokens","WeakMap","set","MODAL_DATA","PARENT_FORM","CHILD_FORM","ModalOverlayRef","complete","dispose","_close","subscription","NgMaterialModule","AuthGuard","checkLogin","loginToken","location","pathname","apiUrl","origin","TokenAuthHttpInterceptor","requestWithToken","clone","setHeaders","Authorization","handle","ErrorInterceptor","errorMassageMultiLanguage","errorMassageKeys","selectLanguage","errorParams","details","updateParams","zh","en","isRoleError","params","returnMessage","paramSequence","replace","I18nService","MainFrameOperatorService","events","urlAfterRedirects","drawerDom","_elementRef","offsetWidth","MockDataService","mockData","timestamp","RegexService","ruleMap","Map","ToastrOperatorService","toastrService","toastrConfig","tapToDismiss","success","warning","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\n// import { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { MainFrameComponent } from './pages/main-frame/main-frame.component';\nimport { SitesComponent } from './pages/sites/sites.component';\nimport { AccountManagementComponent } from './pages/account-management/account-management.component';\nimport { AuthGuard } from './public-share/service/auth.guard'\n\n\nconst routes: Routes = [\n\n  {\n    path: '',\n    component: MainFrameComponent,\n    canActivate: [AuthGuard],\n    // canActivateChild: [ChildrenGuard],\n    children: [\n      { path: 'home', redirectTo: 'sites' },\n      // { path: 'dashboard', component: DashboardComponent },\n      { path: 'sites', component: SitesComponent },\n      { path: 'account-management', component: AccountManagementComponent },\n      { path: '', redirectTo: 'sites', pathMatch: 'full' },\n      { path: '**', redirectTo: 'home' }\n    ]\n  },\n  { path: 'login', component: LoginComponent },\n  { path: '**', redirectTo: 'home' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'marsmiddle';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { ToastrModule } from 'ngx-toastr';\nimport { CookieModule } from 'ngx-cookie';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { PagesModule } from './pages/pages.module';\nimport { AppComponent } from './app.component';\nimport { SitesModule } from './pages/sites/sites.module';\nimport { AccountManagementModule } from './pages/account-management/account-management.module';\nimport { TokenAuthHttpInterceptor, ErrorInterceptor } from \"./public-share/service/httpInterceptor\";\n\n// Translate Setting\nexport function i18nJsonLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\nexport function translateInitializerFactory(translate: TranslateService) {\n  return () => {\n    let language = window.localStorage['language'];\n\n    // Default language: chinese\n    if (!language) {\n      language = 'cn';\n    }\n\n    translate.setDefaultLang(language);\n\n    return translate.use(language).toPromise();\n  };\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    CookieModule.forRoot(),\n    ToastrModule.forRoot({\n      toastClass: 'ngx-toastr mars-toast',\n      closeButton: true,\n      easeTime: 500,\n      extendedTimeOut: 1000,\n      timeOut: 2000\n    }),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: i18nJsonLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    BrowserModule,\n    PagesModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SitesModule,\n    AccountManagementModule\n  ],\n  providers: [\n    // Set translate init setting before app init.\n    {\n      provide: APP_INITIALIZER,\n      useFactory: translateInitializerFactory,\n      deps: [TranslateService],\n      // let it can set multi-setting before app init\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenAuthHttpInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export enum UserRoleType {\n  administrator = 'administrator',\n  guest = 'guest'\n}\n\nexport interface AccountMgmtTableData {\n  username: string,\n  role: UserRoleType\n}\n\nexport interface UserRes {\n  username: string,\n  role: UserRoleType\n}\n\nexport interface UserPostSchema {\n  username: string,\n  password: string,\n  role: UserRoleType\n}\n\nexport interface UserPutSchema {\n  password?: string,\n  role?: UserRoleType\n}","import { Component, OnInit, ViewChild, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RegexService } from '../../public-share/service/regex.service';\nimport { LoginService } from '../login/service/login.service';\nimport { ToastrOperatorService } from '../../public-share/service/toastr-operator.service';\nimport { Subject, BehaviorSubject, Observable } from 'rxjs';\nimport { AccountMgmtService } from './service/account-management.service';\nimport { AccountMgmtTableModelService } from './service/account-management-table-model.service';\nimport { DataTableModel } from '../../models/data-table';\n\n@Component({\n  selector: 'app-account-management',\n  templateUrl: './account-management.component.html',\n  styleUrls: ['./account-management.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AccountManagementComponent implements OnInit {\n  @ViewChild(\"accountMgmtMultiActions\", { static: true }) accountMgmtMultiActionsRef: TemplateRef<any>;\n\n  accountMgmtTableModel: DataTableModel;\n  currentUser: string;\n  isGuest: boolean;\n\n  readonly accountMgmtTableData$: Observable<any[]> = this.accountMgmtService.accountMgmtTableData$;\n  readonly loading$: Observable<boolean> = this.accountMgmtService.loading$;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private regexService: RegexService,\n    private toastrOperatorService: ToastrOperatorService,\n    private accountMgmtService: AccountMgmtService,\n    private accountMgmtTableModelService: AccountMgmtTableModelService,\n    private loginService: LoginService\n\n  ) { }\n\n  ngOnInit(): void {\n    this.initialTableModel();\n    this.refreshTableData();\n    this.currentUser = this.loginService.getCurrentUsername();\n    this.isGuest = this.loginService.isGuestUser();\n  }\n\n  refreshTableData(): void {\n    this.accountMgmtService.getAccountMgmtTableData();\n  }\n\n  initialTableModel(): void {\n    this.accountMgmtTableModel = this.accountMgmtTableModelService.getAccountMgmtTableModel();\n    this.updateTableCellTemplate(this.accountMgmtTableModel);\n  }\n\n  updateTableCellTemplate(tableModel: DataTableModel): void {\n    tableModel.columns.forEach((item) => {\n      if (item.id === 'multiActions') {\n          item.customCellTemplate = this.accountMgmtMultiActionsRef;\n      }\n    });\n  }\n\n  addUser(): void {\n    this.accountMgmtService.addUser();\n  }\n\n  delete(rowData, $event): void {\n    this.accountMgmtService.deleteUserAccount(rowData.username);\n  }\n\n  update(rowData, $event): void {\n    this.accountMgmtService.updateUserAccount(rowData.username, rowData);\n  }\n\n}\n","<div class=\"mat-app-background mars-component\">\n  <div class=\"main-header tab-bar\">\n    <div class=\"header-primary\">\n      <div class=\"header-title\">{{'PAGE.MAIN_FRAME.MENU.ACCOUNT_MANAGEMENT'|translate}}</div>\n      <div class=\"flex-spacer\"></div>\n      <div header-action-show >\n          <button mat-stroked-button (click)=\"addUser()\" *ngIf=\"!isGuest\">\n            {{'PAGE.ACCOUNT_MGMT.ACTION.ADD_USER'|translate}}\n          </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"main-content tab-content\">\n\n    <div class=\"mars-middle-account-management\">\n      <app-data-table\n        [model]=\"accountMgmtTableModel\"\n        [loadingStatus]=\"loading$\"\n        [data]=\"accountMgmtTableData$\"\n        (refreshEmmiter)=\"refreshTableData()\">\n      </app-data-table>\n    </div>\n\n  </div>\n</div>\n\n<ng-template #accountMgmtMultiActions let-row=\"row\">\n  <ng-container *ngIf=\"!isGuest\">\n    <button mat-stroked-button\n            class=\"site-action-btn inline danger\"\n            (click)=\"delete(row, $event)\">\n      <span>{{'COMPONENT.DATA_TABLE.ACTION.DELETE'|translate}}</span>\n    </button>\n    <button mat-stroked-button\n            class=\"site-action-btn inline\"\n            (click)=\"update(row, $event)\"\n            style=\"margin-left: 6px;\">\n      <span>{{'COMPONENT.DATA_TABLE.ACTION.UPDATE'|translate}}</span>\n    </button>\n  </ng-container>\n  <ng-container *ngIf=\"row.username==currentUser && isGuest\">\n    <button mat-stroked-button\n            class=\"site-action-btn inline\"\n            (click)=\"update(row, $event)\"\n            style=\"margin-left: 6px;\">\n      <span>{{'PAGE.ACCOUNT_MGMT.ACTION.CHANGE_PWD'|translate}}</span>\n    </button>\n  </ng-container>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgMaterialModule } from '../../public-share/ng-material/ng-material.module';\nimport { ComponentModule } from '../../public-share/component/component.module';\nimport { AccountManagementComponent } from './account-management.component';\nimport { AccountMgmtFormModalComponent } from './formModal/account-management-modal.component';\n\n@NgModule({\n  declarations: [\n    AccountManagementComponent,\n    AccountMgmtFormModalComponent\n  ],\n  imports: [\n    CommonModule,\n    NgMaterialModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ComponentModule\n  ]\n})\nexport class AccountManagementModule { }\n","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from \"rxjs\";\nimport { RegexService } from '../../../public-share/service/regex.service';\nimport { ApplicationModalConfig } from '../../../models/modal';\nimport { MODAL_DATA, PARENT_FORM, CHILD_FORM } from '../../../public-share/component/modal/modal.token';\nimport { BaseModal } from \"../../../public-share/component/modal/modal.base\";\nimport { AccountMgmtApiUrlService } from \"../service/account-management-api-url.service\";\nimport { UserPostSchema, UserPutSchema, UserRoleType } from '../../../models/account-management';\nimport { APP_MARSMIDDLE_USER_ROLE } from '../../login/service/login.service';\n\n@Component({\n  selector: 'app-site-form-modal',\n  templateUrl: './account-management-modal.component.html',\n  styleUrls: ['../account-management.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AccountMgmtFormModalComponent implements OnInit, BaseModal {\n\n  roleOptions: UserRoleType[] = [UserRoleType.administrator, UserRoleType.guest];\n  currentUserRole: string = localStorage.getItem(APP_MARSMIDDLE_USER_ROLE);\n\n  accountMgmtForm = this.formBuilder.group({\n    userName: ['', [Validators.required, Validators.pattern(this.regexService.getRule('username_5_20'))]],\n    password: ['', [Validators.required, Validators.pattern(this.regexService.getRule('password_8'))]],\n    role: [this.roleOptions[1], [Validators.required]]\n  });\n\n  updateFlag: boolean = false;\n  updateInfo: UserPutSchema;\n  updateUserName: string;\n\n  constructor(\n    @Inject(MODAL_DATA) public modalConfig: ApplicationModalConfig,\n    private formBuilder: FormBuilder,\n    private accountMgmtApiUrlService: AccountMgmtApiUrlService,\n    private regexService: RegexService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.modalConfig.data && this.modalConfig.data.updateFlag) {\n      this.updateFlag = true;\n      this.updateInfo = this.modalConfig.data.updateInfo;\n      this.updateUserName = this.modalConfig.data.username;\n      this.accountMgmtForm.get('userName').setValue(this.updateUserName);\n      this.accountMgmtForm.get('userName').disable();\n      this.accountMgmtForm.get('password').setValidators([Validators.pattern(this.regexService.getRule('password_8'))]);\n      this.accountMgmtForm.get('role').setValue(this.updateInfo.role);\n      this.accountMgmtForm.get('role').setValidators([]);\n      if (this.currentUserRole != UserRoleType.administrator) {\n        this.accountMgmtForm.get('role').disable();\n      }\n    }\n    this.modalConfig[PARENT_FORM].addControl(CHILD_FORM, this.accountMgmtForm);\n  }\n\n  submit(): Observable<any> {\n    const data = this.accountMgmtForm.getRawValue();\n\n    return new Observable<any>(subscriber => {\n      if (this.updateFlag == true) {\n        const putUserParams: UserPutSchema = {};\n        if (data.password) { putUserParams.password = data.password; }\n        if (data.role && this.currentUserRole == UserRoleType.administrator) { putUserParams.role = data.role; }\n\n        this.accountMgmtApiUrlService.putUser(this.updateUserName, putUserParams)\n        .subscribe(\n          data =>\n            subscriber.next(true),\n          err =>\n            subscriber.error(err)\n        );\n      } else {\n        const signUpUserParams: UserPostSchema = {\n          username: data.userName,\n          password: data.password,\n          role: data.role\n        };\n        this.accountMgmtApiUrlService.signUpUser(signUpUserParams)\n        .subscribe(\n          data =>\n            subscriber.next(true),\n          err =>\n            subscriber.error(err)\n        );\n      }\n    });\n  }\n\n}\n","<form [formGroup]=\"accountMgmtForm\">\n  <mat-expansion-panel expanded=\"true\" togglePosition=\"before\" class=\"account-management-form-modal\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        {{'CONPONENT.MODAL.GENERAL_SETTINGS'|translate}}\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n\n    <app-label-input [isRequired]=\"true\" label=\"{{'PAGE.ACCOUNT_MGMT.COLUMN.USERNAME'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput formControlName=\"userName\"/>\n        <mat-hint *ngIf=\"!updateFlag\">{{'PAGE.ACCOUNT_MGMT.COLUMN.USERNAME.HINT'|translate}}</mat-hint>\n      </mat-form-field>\n    </app-label-input>\n\n    <app-label-input [isRequired]=\"!updateFlag\" label=\"{{'PAGE.ACCOUNT_MGMT.COLUMN.PASSWORD'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput type=\"password\" formControlName=\"password\"/>\n        <mat-hint>{{'PAGE.ACCOUNT_MGMT.COLUMN.PASSWORD.HINT'|translate}}</mat-hint>\n      </mat-form-field>\n    </app-label-input>\n\n    <app-label-input [isRequired]=\"!updateFlag\" label=\"{{'PAGE.ACCOUNT_MGMT.COLUMN.ROLE'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <mat-select formControlName=\"role\" disableOptionCentering>\n          <mat-option *ngFor=\"let option of roleOptions\" [value]=\"option\">\n            {{option}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </app-label-input>\n\n  </mat-expansion-panel>\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { apiUrl } from '../../../public-share/service/environment';\nimport {\n  UserRes,\n  UserPostSchema,\n  UserPutSchema\n} from '../../../models/account-management';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountMgmtApiUrlService {\n\n  constructor(\n    private http: HttpClient\n  ){ }\n\n  public getUsers(): Observable<UserRes[]> {\n    return this.http.get<UserRes[]>(`${apiUrl}/users`);\n  }\n\n  public signUpUser(userInfo: UserPostSchema) {\n    return this.http.post(`${apiUrl}/users/signup`, userInfo);\n  }\n\n  public putUser(userName: string, userInfo: UserPutSchema) {\n    return this.http.put(`${apiUrl}/users/${userName}`, userInfo);\n  }\n\n  public deleteUser(userName: string) {\n    return this.http.delete(`${apiUrl}/users/${userName}`);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Column, DataTableModel } from '../../../models/data-table';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountMgmtTableModelService {\n  constructor(\n    private translate: TranslateService\n  ) { }\n\n  getAccountMgmtTableModel(): DataTableModel {\n    let columns: Column[] = [\n      {\n        id: 'username',\n        displayName: this.translate.instant('PAGE.ACCOUNT_MGMT.COLUMN.USERNAME'),\n        maxWidth: '360px'\n      },\n      {\n        id: 'role',\n        displayName: this.translate.instant('PAGE.ACCOUNT_MGMT.COLUMN.ROLE')\n      },\n      {\n        id: 'multiActions',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.ACTIONS'),\n        sort: 'disabled',\n        maxWidth: '160px'\n      }\n    ];\n\n    return {\n      columns: columns,\n      hiddenRefresh: true,\n      hiddenCustomize: true\n    };\n  }\n\n}","import { Injectable, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subject, BehaviorSubject, Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport {\n  UserRes,\n  UserPutSchema,\n  AccountMgmtTableData\n} from '../../../models/account-management';\nimport { BasicModal, ApplicationModalConfig } from '../../../models/modal';\nimport { AccountMgmtApiUrlService } from './account-management-api-url.service';\nimport { ToastrOperatorService } from '../../../public-share/service/toastr-operator.service';\nimport { BasicModalService, ApplicationModalService } from '../../../public-share/component/modal/modal.service';\nimport { AccountMgmtFormModalComponent } from '../formModal/account-management-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountMgmtService implements OnInit, OnDestroy {\n\n  constructor(\n    private router: Router,\n    private toastrOperatorService: ToastrOperatorService,\n    private accountMgmtApiUrlService: AccountMgmtApiUrlService,\n    private appModalService: ApplicationModalService,\n    private basicModalService: BasicModalService,\n    private translate: TranslateService\n  ) { }\n\n  private _accountMgmtTableData = new BehaviorSubject<AccountMgmtTableData[]>([]);\n  private _loading = new BehaviorSubject<boolean>(true);\n  // private _message = new Subject<MessageModel>();\n  readonly accountMgmtTableData$: Observable<any> = this._accountMgmtTableData.asObservable();\n  readonly loading$: Observable<boolean> = this._loading.asObservable();\n  // readonly message$: Observable<MessageModel> = this._message.asObservable();\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this._accountMgmtTableData.unsubscribe();\n    this._loading.unsubscribe();\n    // this._message.unsubscribe();\n  }\n\n  getAccountMgmtTableData(): void {\n    this._loading.next(true);\n    this.accountMgmtApiUrlService.getUsers()\n      .pipe(\n        catchError((error) => {\n          const errorMessage = error.error?.error?.message || error.message || error;\n          this.toastrOperatorService.showErrorToastr(errorMessage, this.translate.instant('PAGE.ACCOUNT_MGMT.MESSAGE.TITLE.GET_SITE_TABLE_DATA'));\n          return of([]);\n        })\n      )\n      .subscribe((usersRes: UserRes[]) => {\n        const accountMgmtTableData: AccountMgmtTableData[] = usersRes.sort(\n          (front, behind) => {\n            const frontUserRole = front.role.toUpperCase();\n            const behindUserRole = behind.role.toUpperCase();\n            if (frontUserRole < behindUserRole) { return -1; }\n            return 0;\n          }\n        );\n\n        this._loading.next(false);\n        this._accountMgmtTableData.next(JSON.parse(JSON.stringify(accountMgmtTableData)));\n    });\n  }\n\n  addUser(): void {\n    this.openAccountMgmtFormModal('add');\n  }\n\n  updateUserAccount(username: string, rowData: AccountMgmtTableData): void {\n    this.openAccountMgmtFormModal('update', username, rowData);\n  }\n\n  openAccountMgmtFormModal(action: ('add'|'update'), username?: string, updateInfo?: AccountMgmtTableData): void {\n    let modalConfig: ApplicationModalConfig;\n    let toastrTitle: string = '';\n    let successMessage: string = '';\n    \n    switch(action) {\n      case 'add':\n          modalConfig = {\n                          title: this.translate.instant('PAGE.ACCOUNT_MGMT.ACTION.ADD_USER')\n                        };\n          toastrTitle = this.translate.instant('PAGE.ACCOUNT_MGMT.MESSAGE.TITLE.ADD_USER');\n          successMessage = this.translate.instant('PAGE.ACCOUNT_MGMT.MESSAGE.SUCCESS.ADD_USER');\n          break;\n      case 'update':\n          modalConfig = {\n                          title: this.translate.instant('PAGE.ACCOUNT_MGMT.ACTION.UPDATE_USER'),\n                          data: {\n                                  updateInfo: updateInfo,\n                                  username: username,\n                                  updateFlag: true\n                                }\n                        };\n          toastrTitle = this.translate.instant('PAGE.ACCOUNT_MGMT.MESSAGE.TITLE.UPDATE_USER');\n          successMessage = this.translate.instant('PAGE.ACCOUNT_MGMT.MESSAGE.SUCCESS.UPDATE_USER');\n          break;\n    }\n\n    const modalRef = this.appModalService.open(AccountMgmtFormModalComponent, modalConfig);\n\n    modalRef.afterClose$.subscribe(\n      res => {\n        if (!res.data) return;\n        this.toastrOperatorService.showSuccessToastr(successMessage, toastrTitle);\n        setTimeout( () => { this.getAccountMgmtTableData(); }, 500);\n      },\n      error => {\n        const errorMessage = error.error?.error?.message || error.message || error;\n        this.toastrOperatorService.showErrorToastr(errorMessage, toastrTitle);\n      }\n    )\n  }\n\n  deleteUserAccount(userName: string): void {\n    const model: BasicModal = {\n      title: this.translate.instant('PAGE.ACCOUNT_MGMT.ACTION.DELETE_USER'),\n      content: this.translate.instant('PAGE.ACCOUNT_MGMT.ACTION.DELETE_USER.CONTENT', {'username': userName}),\n      showCancelBtn: true,\n      showConfirmBtn: true\n    }\n    this.basicModalService\n      .openBasicDialog(model)\n      .afterClosed()\n      .subscribe(confirm => {\n        if (confirm) {\n          this.accountMgmtApiUrlService.deleteUser(userName)\n          .pipe(\n            catchError((error) => {\n              const errorMessage = error.error?.error?.message || error.message || error;\n              this.toastrOperatorService.showErrorToastr(errorMessage, this.translate.instant('PAGE.ACCOUNT_MGMT.MESSAGE.TITLE.DELETE_USER'));\n              return of([]);\n            })\n          )\n          .subscribe((noneRes) => {\n            if (!noneRes) {\n              this.getAccountMgmtTableData();\n              this.toastrOperatorService.showSuccessToastr(\n                this.translate.instant('PAGE.ACCOUNT_MGMT.MESSAGE.SUCCESS.DELETE_USER', {'username': userName}),\n                this.translate.instant('PAGE.ACCOUNT_MGMT.MESSAGE.TITLE.DELETE_USER')\n              );\n            }\n          })\n        }\n      });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard.component';\n\n\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule\n  ]\n})\nexport class DashboardModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { I18nService } from '../../public-share/service/i18n.service';\nimport { ConstantService } from './service/constant.service';\nimport { delay, map } from 'rxjs/operators';\nimport { LoginService } from './service/login.service';\nimport { ToastrOperatorService } from '../../public-share/service/toastr-operator.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  siteLanguage: string;\n  loginServerOptions = [];\n  languageOptions = [];\n  isLoginError: boolean = false;\n  isUnknownError: boolean = false;\n  isLoginSuccess: boolean = false;\n  isLogin: boolean = false;\n  returnUrl: string;\n\n  constructor(\n    private translate: TranslateService,\n    private toastrOperatorService: ToastrOperatorService,\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private constantService: ConstantService,\n    private i18nService: I18nService,\n    private loginService: LoginService\n  ) {\n    this.loginServerOptions = this.constantService.getLoginServerOptions();\n    this.languageOptions = this.constantService.getLanguageOptions();\n  }\n\n  ngOnInit(): void {\n    const languageCode = this.i18nService.getLanguage();\n\n    this.returnUrl = this.activatedRoute.snapshot.queryParams['returnUrl'] || '/';\n    this.siteLanguage = this.languageOptions.find(option => option.value === languageCode).label;\n\n    this.loginForm = this.formBuilder.group({\n      userName: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      // loginServer: ['auth01', [Validators.required]]\n    });\n  }\n\n  private loginWithAuth01() {\n    const defaultErrorMsgMultiLang = {\n                                      \"INVALID_USERNAME\": {\n                                        \"zh\": \"不合法的用戶名称\",\n                                        \"en\": \"Invalid Username.\"\n                                      },\n                                      \"INVALID_USERNAME_OR_PASSWORD\": {\n                                        \"zh\": \"不合法的用戶名称或密码\",\n                                        \"en\": \"Invalid Username or Password.\"\n                                      }\n                                    };\n    localStorage['marsMiddleErrorMassageMultiLanguage'] = JSON.stringify(defaultErrorMsgMultiLang);\n\n    const loginData = {\n      username: this.loginForm.get('userName').value,\n      password: this.loginForm.get('password').value\n    };\n\n    this.loginService.loginLocal(loginData).pipe(\n      map(res => {\n        this.isLogin = false;\n        this.isLoginSuccess = true;\n      }),\n      delay(200)\n    ).subscribe((val) => {\n      if (this.returnUrl == '/login') {\n        this.router.navigate(['/home']);\n      } else {\n        this.router.navigate([this.returnUrl]);\n      }\n    }, (error) => {\n      this.isLogin = false;\n      const errorMessage = error.error?.error?.message || error.message || error;\n      this.toastrOperatorService.showErrorToastr(errorMessage, this.translate.instant('PAGE.LOGIN.MESSAGE.TITLE.LOGIN'));\n      if(error.status == 403 || error.status == 401){ // check API error output\n        this.isLoginError = true;\n      } else {\n        this.isUnknownError = true;\n      }\n      console.log(\"login error ...\" + JSON.stringify(error));\n    });\n\n  }\n\n  // private loginWithAuth02() {\n  //   const loginData = {\n  //     userName: this.loginForm.get('userName').value,\n  //     password: this.loginForm.get('password').value\n  //   };\n  //   console.log('login with auth02')\n  //   console.log(loginData)\n  //   console.log('login with auth02')\n  //   // Call ajax that auth with auth02 server\n  //   this.router.navigate([this.returnUrl]);\n  // }\n\n  onClickLanguageOption(option): void {\n    if (this.siteLanguage === option.label) return;\n\n    this.siteLanguage = option.label;\n    this.translate.use(option.value);\n    this.i18nService.setLanguage(option.value);\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      // const loginServer = this.loginForm.get('loginServer').value;\n\n      this.isLogin = true;\n      this.isLoginError = false;\n      this.isUnknownError = false;\n\n      // if (loginServer === 'auth01') {\n        this.loginWithAuth01();\n      // } else if (loginServer === 'auth02') {\n      //   this.loginWithAuth02();\n      // }\n    } else {\n      this.loginForm.markAllAsTouched();\n    }\n  }\n\n}\n","<div class=\"login-content\">\n  <div class=\"logo-div\">\n    <div class=\"logo-img\"></div>\n    <svg class=\"logo-svg\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n      <symbol id=\"svg-text\">\n        <text y=\"80px\" x=\"26px\">MARS Middle</text>\n      </symbol>\n      <g>\n        <use xlink:href=\"#svg-text\" class=\"svg-text\"></use>\n      </g>\n    </svg>\n  </div>\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <mat-card>\n      <mat-card-content>\n        <mat-form-field class=\"full-width-input\">\n          <input matInput placeholder=\"{{'PAGE.LOGIN.COLUMN.USER'|translate}}\" formControlName=\"userName\" required>\n          <mat-error>\n            {{'PAGE.LOGIN.MESSAGE.ERROR.USERNAME_EMPTY'|translate}}\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"full-width-input\">\n          <input matInput type=\"password\" placeholder=\"{{'PAGE.LOGIN.COLUMN.PASSWORD'|translate}}\"\n                  formControlName=\"password\" required>\n          <mat-error>\n            {{'PAGE.LOGIN.MESSAGE.ERROR.PASSWORD_EMPTY'|translate}}\n          </mat-error>\n        </mat-form-field>\n        <!-- <mat-form-field class=\"full-width-input\">\n          <mat-label>{{'PAGE.LOGIN.COLUMN.LOGIN_SERVER'|translate}}</mat-label>\n          <mat-select matNativeControl formControlName=\"loginServer\" disableOptionCentering>\n            <mat-option *ngFor=\"let option of loginServerOptions\" [value]=\"option['value']\">\n              {{option['label']}}\n            </mat-option>\n          </mat-select>\n          <mat-error>{{'REGEX.MESSAGE.ERROR.SELECT_EMPTY'|translate}}</mat-error>\n        </mat-form-field> -->\n\n        <div class=\"spinner-div\">\n          <mat-spinner *ngIf=\"isLogin\" [diameter]=\"20\"></mat-spinner>\n        </div>\n        <mat-error *ngIf=\"isLoginError\">\n          {{'PAGE.LOGIN.MESSAGE.ERROR.ERROR_AUTH'|translate}}\n        </mat-error>\n        <mat-error *ngIf=\"isUnknownError\">\n          {{'PAGE.LOGIN.MESSAGE.ERROR.UNKNOWN_ERROR'|translate}}\n        </mat-error>\n        <div class=\"success-div\" *ngIf=\"isLoginSuccess\">\n          {{'PAGE.LOGIN.MESSAGE.SUCCESS.LOGIN_SUCCESS'| translate}}\n        </div>\n      </mat-card-content>\n\n      <mat-card-footer>\n        <div class=\"footer-div\">\n          <mat-icon class=\"language\">language</mat-icon>\n          <div class=\"i18n-option\" [matMenuTriggerFor]=\"menu\" mat-ripple>\n            {{ siteLanguage }}\n            <mat-icon>arrow_drop_down</mat-icon>\n          </div>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"onClickLanguageOption(option)\" *ngFor=\"let option of languageOptions\">\n              <span> {{ option.label }}</span>\n            </button>\n          </mat-menu>\n        </div>\n      </mat-card-footer>\n    </mat-card>\n    <button class=\"login-btn\" [disabled]=\"isLogin || isLoginSuccess\"\n            translate mat-raised-button color=\"primary\" type=\"submit\">\n      {{'PAGE.LOGIN.LOGIN_TITLE'|translate}}\n    </button>\n  </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgMaterialModule } from '../../public-share/ng-material/ng-material.module';\nimport { LoginComponent } from './login.component';\nimport { ConstantService } from './service/constant.service';\n\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    NgMaterialModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [\n    ConstantService\n  ]\n})\nexport class LoginModule { }\n","import { Injectable } from '@angular/core';\nimport { SimpleOptionObject } from '../../../public-share/interface/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConstantService {\n\n  constructor() { }\n\n  getLoginServerOptions():SimpleOptionObject[] {\n    return [\n      { label: 'Auth Server01', value: 'auth01'}\n      // { label: 'Auth Server02', value: 'auth02'}\n    ];\n  }\n\n  getLanguageOptions():SimpleOptionObject[] {\n    return [\n      { label: '中文', value: 'cn'},\n      { label: 'English', value: 'en'}\n    ];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, Subject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { CookieOptions, CookieService } from \"ngx-cookie\";\n\nimport { apiUrl } from '../../../public-share/service/environment';\nimport { User } from '../../../models/login';\nimport { UserRoleType } from '../../../models/account-management';\nimport { ToastrOperatorService } from '../../../public-share/service/toastr-operator.service';\n\nexport const APP_MARSMIDDLE_LOGIN_USER: string = 'app_login_user';\nexport const APP_MARSMIDDLE_USER_ROLE: string = 'app_user_role';\nexport const APP_MARSMIDDLE_LOGIN_TOKEN: string = 'app_login_token';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  // public routeState = {};\n  // private isFirst = true;\n  public isLoggedIn: boolean = false;\n\n  constructor(private router: Router,\n              // private cookieService: CookieService,\n              private toastrOperatorService: ToastrOperatorService,\n              private http: HttpClient) {\n  }\n\n  public postUserLogin(user: User) {\n    return this.http.post(`${apiUrl}/users/login`, user, {observe: \"response\"});\n  }\n\n  public postUserLogout() {\n    return this.http.post(`${apiUrl}/users/logout`, {}, {observe: \"response\"});\n  }\n\n  loginLocal(user: User) {\n    return this.postUserLogin(user)\n            .pipe(\n              take(1),\n              map((res: HttpResponse<any>) => {\n                const username = res.body.username;\n                const role = res.body.role;\n                const token = res.body.token;\n\n                localStorage.setItem(APP_MARSMIDDLE_LOGIN_USER, username);\n                localStorage.setItem(APP_MARSMIDDLE_USER_ROLE, role);\n                localStorage.setItem(APP_MARSMIDDLE_LOGIN_TOKEN, token);\n                this.isLoggedIn = true;\n                return res;\n              })\n            );\n  }\n\n  logout() {\n    // const loginServer = this.cookieService.get('loginServer');\n    let logoutObservable;\n\n    // if (loginServer === 'local') {\n      logoutObservable = this.postUserLogout();\n    // } else if (loginServer === 'radius') {\n    //   logoutObservable = this.logoutRadius();\n    // }\n\n    logoutObservable.subscribe(res => {\n      this.redirectToLogin();\n    }, (error) => {\n      console.log(\"login error ...\" + JSON.stringify(error));\n      this.toastrOperatorService.showErrorToastr(\"login error ...\" + JSON.stringify(error));\n    });\n  }\n\n  redirectToLogin() {\n    localStorage.removeItem(APP_MARSMIDDLE_LOGIN_USER);\n    localStorage.setItem(APP_MARSMIDDLE_LOGIN_TOKEN, '');\n    this.router.navigate(['/login']);\n  }\n\n  public isGuestUser(): boolean {\n    return localStorage.getItem(APP_MARSMIDDLE_USER_ROLE) == UserRoleType.guest;\n  }\n\n  public getCurrentUsername(): string {\n    return localStorage.getItem(APP_MARSMIDDLE_LOGIN_USER);\n  }\n  \n  // getHeadersWithToken(): HttpHeaders {\n  //   const loginToken: string = localStorage.getItem(APP_MARSMIDDLE_LOGIN_TOKEN) || '';\n  //   return new HttpHeaders({\n  //     'Authorization': 'Bearer '+ loginToken, \n  //     'Content-Type': 'application/x-www-form-urlencoded'\n  //   });\n  // }\n\n  // public pageLoader(): Observable<boolean> {\n  //   if (!this.isFirst) {\n  //     return of(true);\n  //   }\n  //   return this.applicationLoader();\n  // }\n}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n  cloneDeep as _cloneDeep\n} from 'lodash';\nimport { menuItemObject } from '../../../../public-share/interface/common';\nimport { MainFrameOperatorService } from '../../../../public-share/service/main-frame-operator.service';\nimport { ConstantService } from '../../service/constant.service';\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.scss'],\n  animations: [\n    trigger('indicatorRotate', [\n      state('collapsed', style({transform: 'rotate(0deg)'})),\n      state('expanded', style({transform: 'rotate(180deg)'})),\n      transition('expanded <=> collapsed',\n        animate('225ms cubic-bezier(0.4,0.0,0.2,1)')\n      ),\n    ])\n  ]\n})\nexport class SideMenuComponent implements OnInit {\n  @HostBinding('attr.aria-expanded') ariaExpanded;\n  menuItems: menuItemObject[] = [];\n  isExpanded = false;\n  selectedItem;\n\n  constructor(\n    private constantService: ConstantService,\n    private mainFrameOperatorService: MainFrameOperatorService,\n    private router: Router\n  ) {\n    this.ariaExpanded = this.isExpanded;\n    this.menuItems = _cloneDeep(this.constantService.getMenuList());\n  }\n\n  ngOnInit(): void {\n    this.mainFrameOperatorService.currentUrl.subscribe(url => {\n      if (this.selectedItem && this.selectedItem.routingName && url) {\n        const selectedRoute = this.selectedItem.routingName;\n\n        this.isExpanded = url.indexOf(`/${selectedRoute}`) === 0;\n        this.ariaExpanded = this.isExpanded;\n      }\n    });\n  }\n\n  isItemActive(routingName) {\n    return routingName? this.router.isActive(routingName, true): false;\n  }\n\n  onClickMenuItem(menuItem) {\n    this.selectedItem = _cloneDeep(menuItem);\n\n    if (!menuItem.subMenu || !menuItem.subMenu.length) {\n      this.router.navigate([menuItem.routingName]);\n    }else if (menuItem.subMenu && menuItem.subMenu.length) {\n      this.isExpanded = !this.isExpanded;\n    }\n  }\n}\n","<mat-nav-list>\n  <ng-container *ngFor=\"let item of menuItems\">\n    <ng-template [ngTemplateOutlet]=\"menuItemRef\" [ngTemplateOutletContext]=\"{ item: item }\"></ng-template>\n  </ng-container>\n</mat-nav-list>\n\n<ng-template #menuItemRef let-item=\"item\">\n  <a *ngIf=\"item.isShow\" mat-list-item color=\"primary\" (click)=\"onClickMenuItem(item)\"\n      [ngClass]=\"{\n                    'active': isItemActive(item.routingName),\n                    'expanded': isExpanded\n                  }\"\n      class=\"menu-item-a\">\n    <div class=\"menu-item-div\" [ngStyle]=\"{'padding-left': (item.menuLevel * 18) + 'px'}\">\n       <mat-icon *ngIf=\"item.iconName\" class=\"icon\">{{item.iconName}}</mat-icon>\n       <img *ngIf=\"item.iconImagePath\" class=\"image\" [src]=\"item.iconImagePath\"/>\n       <div class=\"name\">{{item.itemName}}</div>\n    </div>\n    <span fxFlex *ngIf=\"item.subMenu && item.subMenu.length\">\n      <span fxFlex></span>\n      <mat-icon class=\"expanded-icon\" [@indicatorRotate]=\"isExpanded ? 'expanded': 'collapsed'\">\n        expand_more\n      </mat-icon>\n    </span>\n  </a>\n  <div class=\"sub-menu-div\" *ngIf=\"item.isShow && isExpanded\">\n    <ng-container *ngFor=\"let subItem of item.subMenu\">\n      <ng-template [ngTemplateOutlet]=\"menuItemRef\" [ngTemplateOutletContext]=\"{ item: subItem }\"></ng-template>\n    </ng-container>\n  </div>\n</ng-template>\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  cloneDeep as _cloneDeep\n} from 'lodash';\nimport { ToastrOperatorService } from '../../../../public-share/service/toastr-operator.service';\nimport { PageHandlerService } from '../../service/page-handler.service';\nimport { LoginService, APP_MARSMIDDLE_LOGIN_USER, APP_MARSMIDDLE_USER_ROLE } from '../../../login/service/login.service';\n\n@Component({\n  selector: 'app-top-nav-bar',\n  templateUrl: './top-nav-bar.component.html',\n  styleUrls: ['./top-nav-bar.component.scss']\n})\nexport class TopNavBarComponent implements OnInit {\n  @ViewChild('loginExpireSettingTemplate', { static: true }) loginExpireSettingTemplateRef: TemplateRef<any>;\n\n  unReadCounter = null;\n  isInit = false;\n  eventItems = [];\n  isEventLoading = false;\n  username: string = 'User'\n\n  constructor(\n    private router: Router,\n    private pageHandlerService: PageHandlerService,\n    private toastrOperatorService: ToastrOperatorService,\n    private loginService: LoginService\n  ) { }\n\n  ngOnInit(): void {\n    if (localStorage.getItem(APP_MARSMIDDLE_LOGIN_USER)) {\n      this.username = localStorage.getItem(APP_MARSMIDDLE_LOGIN_USER);\n    }\n    this.getEventData();\n    this.getErrorMassageMultiLanguage();\n    this.isInit = true;\n  }\n\n  private getEventData() {\n    this.isEventLoading = true;\n\n    this.pageHandlerService.getEventData().subscribe(response => {\n        this.eventItems = _cloneDeep(response['events']);\n        this.unReadCounter = response['unReadCounter'];\n        this.isEventLoading = false;\n      })\n  }\n\n  private getErrorMassageMultiLanguage(): void {\n    this.pageHandlerService.getErrorMassageMultiLanguage();\n  }\n\n  onOpenEventMenu() {\n    this.getEventData();\n  }\n\n  onConfirmEventItem(event, $event) {\n    $event.stopPropagation();\n    $event.preventDefault();\n\n    const confirmEventIndex = this.eventItems.findIndex(data => data.title === event.title);\n\n    if (confirmEventIndex !== -1) {\n      this.eventItems[confirmEventIndex]['confirm'] = true;\n      this.unReadCounter--;\n      this.toastrOperatorService.showSuccessToastr(\n        'Event Confirmed Successfully!',\n        'Event Confirmed'\n      );\n    } else {\n      this.toastrOperatorService.showErrorToastr(\n        'Event Confirmed Fail!',\n        'Event Confirmed'\n      );\n    }\n  }\n\n  onClickLogout() {\n    this.loginService.logout();\n  }\n\n  navigateHome(): void {\n    this.router.navigate(['/home']);\n  }\n\n  navigateAccountMgmt(): void {\n    this.router.navigate(['/account-management']);\n  }\n\n}\n","<mat-toolbar color=\"primary\" class=\"top-nav-bar\" *ngIf=\"isInit\">\n  <div class=\"logo-area\" (click)=\"navigateHome()\">\n      <div class=\"logo\"></div>\n      <span style=\"margin-left: 10px;\">MARS Middle</span>\n  </div>\n\n  <span class=\"horizon-span\"></span>\n\n  <!-- <button #activityMenuButton class=\"event-menu-icon\" mat-button\n          [matMenuTriggerFor]=\"eventMenu\" (menuOpened)=\"onOpenEventMenu()\">\n    <mat-icon matBadge=\"{{ unReadCounter }}\" matBadgeColor=\"warn\">notifications</mat-icon>\n  </button>\n\n  <mat-menu xPosition=\"before\" #eventMenu=\"matMenu\" [class]='\"top-nav-bar-menu\"'>\n    <div class=\"event-menu\" (click)=\"$event.stopPropagation();\">\n      <div class=\"menu-title\">\n        {{'PAGE.MAIN_FRAME.TITLE.LAST_EVENT'|translate}}\n      </div>\n      <mat-spinner *ngIf=\"isEventLoading\"></mat-spinner>\n      <div *ngIf=\"!isEventLoading\" class=\"menu-content\">\n        <div *ngIf=\"eventItems.length == 0\" class=\"event-empty\">\n          <mat-icon>circle_notifications</mat-icon>\n          {{'PAGE.MAIN_FRAME.TITLE.NO_EVENT'| translate}}\n        </div>\n        <div *ngIf=\"eventItems.length > 0\">\n          <div class='event-item-div' *ngFor=\"let item of eventItems; let itemIndex=index\">\n            <ng-container *ngIf=\"itemIndex < 5\">\n              <div class=\"event-item-title\">\n                <div class=\"title-div\">{{ item.title }}</div>\n                <div>\n                  <small>{{\"PAGE.MAIN_FRAME.TITLE.AT\"|translate}} {{ item.timestamp }}</small>\n                </div>\n              </div>\n              <div class=\"confirm-div\">\n                <button class=\"confirm-button\" mat-stroked-button\n                        [disabled]=\"item.confirm\" (click)=\"onConfirmEventItem(item, $event);\">\n                  {{'COMMON.TEXT.CONFIRM' | translate}}\n                </button>\n              </div>\n            </ng-container>\n          </div>\n        </div>\n      </div>\n      <div class=\"more-div\">\n        <a class=\"more-link\" [routerLink]=\"'/more_event'\" (click)=\"activityMenuButton._getHostElement().click()\">\n           {{'PAGE.MAIN_FRAME.ACTIVE.SEE_MORE'| translate}}\n        </a>\n      </div>\n    </div>\n  </mat-menu> -->\n  <div class=\"navi-menu-pages\">\n      <span class=\"navi-menu-page-option\" (click)=\"navigateHome()\">{{'PAGE.MAIN_FRAME.MENU.SITES'|translate}}</span>\n      <span style=\"margin: 0 10px;\">|</span>\n      <span class=\"navi-menu-page-option\" (click)=\"navigateAccountMgmt()\">{{'PAGE.MAIN_FRAME.MENU.ACCOUNT_MANAGEMENT'|translate}}</span>\n  </div>\n\n  <button class=\"user-menu-icon\" mat-button [matMenuTriggerFor]=\"userMenu\">\n    <mat-icon class=\"icon\">account_circle</mat-icon>\n    Hi, {{username}}\n    <mat-icon>arrow_drop_down</mat-icon>\n  </button>\n\n  <mat-menu #userMenu=\"matMenu\" [class]='\"top-nav-bar-menu\"'>\n    <button mat-menu-item (click)=\"onClickLogout()\">\n      <mat-icon>power_settings_new</mat-icon>\n      <span>Logout</span>\n    </button>\n  </mat-menu>\n</mat-toolbar>\n","import { Component, OnInit, AfterViewInit, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MainFrameOperatorService } from '../../public-share/service/main-frame-operator.service';\n\n@Component({\n  selector: 'app-main-frame',\n  templateUrl: './main-frame.component.html',\n  styleUrls: ['./main-frame.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MainFrameComponent implements OnInit, AfterViewInit {\n  @ViewChild('appDrawer') appDrawerRef: ElementRef;\n\n  constructor(\n    private mainFrameOperatorService: MainFrameOperatorService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    this.mainFrameOperatorService.appDrawerRef = this.appDrawerRef;\n  }\n\n}\n","<app-top-nav-bar></app-top-nav-bar>\n\n<mat-drawer-container class=\"drawer-container\">\n  <mat-drawer #appDrawer disableClose=\"false\" mode=\"side\" closed>\n  <!-- <mat-drawer #appDrawer disableClose=\"true\" mode=\"side\" opened> -->\n    <app-side-menu></app-side-menu>\n  </mat-drawer>\n  <mat-drawer-content class=\"drawer-content\">\n    <div class=\"router-outlet-div\">\n      <router-outlet></router-outlet>\n    </div>\n  </mat-drawer-content>\n</mat-drawer-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ComponentModule } from '../../public-share/component/component.module';\nimport { NgMaterialModule } from '../../public-share/ng-material/ng-material.module';\nimport { MainFrameOperatorService } from '../../public-share/service/main-frame-operator.service';\nimport { MainFrameComponent } from './main-frame.component';\nimport { SideMenuComponent } from './component/side-menu/side-menu.component';\nimport { TopNavBarComponent } from './component/top-nav-bar/top-nav-bar.component';\nimport { PageHandlerService } from './service/page-handler.service';\nimport { ConstantService } from './service/constant.service';\n\n\n\n@NgModule({\n  declarations: [\n    MainFrameComponent,\n    SideMenuComponent,\n    TopNavBarComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ComponentModule,\n    NgMaterialModule,\n    TranslateModule\n  ],\n  providers: [\n    MainFrameOperatorService,\n    PageHandlerService,\n    ConstantService\n  ]\n})\nexport class MainFrameModule { }\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { menuItemObject } from '../../../public-share/interface/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConstantService {\n\n  constructor(\n    private translateService: TranslateService\n  ) { }\n\n  getMenuList():menuItemObject[] {\n    return [\n      {\n        itemName: this.translateService.instant('PAGE.MAIN_FRAME.MENU.HOME'),\n        menuLevel: 0,\n        iconName: 'auto_awesome_mosaic',\n        routingName: 'home',\n        isShow: true\n      },\n      {\n        itemName: this.translateService.instant('PAGE.MAIN_FRAME.MENU.SITES'),\n        menuLevel: 0,\n        iconImagePath: '../../../assets/icons/menu_list_icons/functions.svg',\n        routingName: 'sites',\n        isShow: true\n      },\n      {\n        itemName: this.translateService.instant('PAGE.MAIN_FRAME.MENU.ACCOUNT_MANAGEMENT'),\n        menuLevel: 0,\n        iconName: 'person',\n        routingName: 'account-management',\n        isShow: true\n      },\n      {\n        itemName: 'Sub Menu Demo',\n        menuLevel: 0,\n        iconImagePath: '../../../assets/icons/menu_list_icons/functions.svg',\n        isShow: true,\n        subMenu: [\n          {\n            itemName: 'Sub 01',\n            menuLevel: 1,\n            routingName: 'sub_1',\n            isShow: true\n          },\n          {\n            itemName: 'Sub 02',\n            menuLevel: 1,\n            routingName: 'sub_2',\n            isShow: true\n          }\n        ]\n      }\n    ];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { apiUrl } from '../../../public-share/service/environment';\nimport { MockDataService } from '../../../public-share/service/mock-data.service';\nimport { ToastrOperatorService } from '../../../public-share/service/toastr-operator.service';\nimport { catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageHandlerService {\n\n  constructor(\n    private mockDataService: MockDataService,\n    private http: HttpClient,\n    private toastrOperatorService: ToastrOperatorService,\n    private translate: TranslateService\n  ) { }\n\n  getEventData() {\n    return this.mockDataService.getMockEvents();\n  }\n\n  async getErrorMassageMultiLanguage(): Promise<void> {\n    this.http.get(`${apiUrl}/errorMessage`)\n    .pipe(\n      catchError((error) => {\n        const errorMessage = error.error?.error?.message || error.message || error;\n        this.toastrOperatorService.showErrorToastr(errorMessage, this.translate.instant('COMMON.MESSAGE.TITLE.GET_MLTI_LANG'));\n        return of({});\n      })\n    )\n    .subscribe(response => {\n      if (Object.keys(response).length != 0) {\n        localStorage['marsMiddleErrorMassageMultiLanguage'] = JSON.stringify(response);\n      }\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MainFrameModule } from './main-frame/main-frame.module';\nimport { LoginModule } from './login/login.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { SitesModule } from './sites/sites.module';\nimport { AccountManagementModule } from './account-management/account-management.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    MainFrameModule,\n    LoginModule,\n    DashboardModule,\n    SitesModule,\n    AccountManagementModule\n  ]\n})\nexport class PagesModule { }\n","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from \"rxjs\";\nimport { RegexService } from '../../../public-share/service/regex.service';\nimport { ApplicationModalConfig } from '../../../models/modal';\nimport { MODAL_DATA, PARENT_FORM, CHILD_FORM } from '../../../public-share/component/modal/modal.token';\nimport { BaseModal } from \"../../../public-share/component/modal/modal.base\";\nimport { SiteApiUrlService } from \"../service/siteApiUrl.service\";\nimport { ControllerPostSchema, ControllerPutSchema } from '../../../models/site';\n\n@Component({\n  selector: 'app-controller-form-modal',\n  templateUrl: './controllerFormModal.component.html',\n  styleUrls: ['../sites.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ControllerFormModalComponent implements OnInit, BaseModal {\n\n  controllerForm = this.formBuilder.group({\n    siteName: ['', [Validators.required]],\n    controllerName: ['', [Validators.required, Validators.pattern(this.regexService.getRule('name_en_15'))]],\n    ipAddress: ['', [Validators.required, Validators.pattern(this.regexService.getRule('ipv4'))]],\n    loginAccount: ['', [Validators.required]],\n    loginPassword: ['', [Validators.required]],\n    description: ['', []],\n  });\n\n  updateFlag: boolean = false;\n  updateInfo: ControllerPutSchema;\n  updateSiteName: string;\n  updateControllerName: string;\n  originalIpAddress: string;\n  originalCtrlUser: string;\n\n  constructor(\n    @Inject(MODAL_DATA) public modalConfig: ApplicationModalConfig,\n    private formBuilder: FormBuilder,\n    private siteApiUrlService: SiteApiUrlService,\n    private regexService: RegexService\n  ) { }\n\n  ngOnInit(): void {\n    this.updateSiteName = this.modalConfig.data.siteName;\n    this.controllerForm.get('siteName').setValue(this.updateSiteName);\n    this.controllerForm.get('siteName').disable();\n\n    if (this.modalConfig.data && this.modalConfig.data.updateFlag) {\n      this.updateFlag = true;\n      this.updateInfo = this.modalConfig.data.updateInfo;\n      this.updateControllerName = this.updateInfo.controllerName;\n      this.controllerForm.get('controllerName').setValue(this.updateControllerName);\n      this.controllerForm.get('controllerName').setValidators([Validators.pattern(this.regexService.getRule('name_en_15'))]);\n      this.originalIpAddress = this.updateInfo.ipAddress\n      this.controllerForm.get('ipAddress').setValue(this.updateInfo.ipAddress);\n      this.controllerForm.get('ipAddress').setValidators([Validators.pattern(this.regexService.getRule('ipv4'))]);\n      // reset validators of password when account user changed >>\n      this.originalCtrlUser = this.updateInfo.loginAccount;\n      this.controllerForm.get('loginAccount').setValidators([]);\n      this.controllerForm.get('loginAccount').valueChanges.subscribe(value => {\n        if (value == this.originalCtrlUser) {\n          this.controllerForm.get('loginPassword').setValidators([]);\n        } else {\n          this.controllerForm.get('loginPassword').setValidators([Validators.required]);\n        }\n        this.controllerForm.get('loginPassword').setValue('');\n        this.controllerForm.markAllAsTouched();\n        this.controllerForm.updateValueAndValidity();\n      });\n      this.controllerForm.get('loginAccount').setValue(this.updateInfo.loginAccount);\n      // << reset validators of password when account user changed\n      this.controllerForm.get('description').setValue(this.updateInfo.description);\n    }\n    this.modalConfig[PARENT_FORM].addControl(CHILD_FORM, this.controllerForm);\n  }\n\n  submit(): Observable<any> {\n    const data = this.controllerForm.getRawValue();\n\n    return new Observable<any>(subscriber => {\n      if (this.updateFlag == true) {\n        const putControllerParams: ControllerPutSchema = {\n          controllerName: data.controllerName,\n          ipAddress: data.ipAddress,\n          loginAccount: data.loginAccount,\n          description: data.description\n        };\n        if (data.controllerName == '' || data.controllerName == this.updateControllerName) { delete putControllerParams.controllerName; }\n        if (data.ipAddress == '' || data.ipAddress == this.originalIpAddress) { delete putControllerParams.ipAddress; }\n        if (data.loginAccount == '') { delete putControllerParams.loginAccount; }\n        if (data.loginPassword != '') {\n          putControllerParams.loginPassword = data.loginPassword;\n        }\n        this.siteApiUrlService.putController(this.updateSiteName, this.updateControllerName, putControllerParams)\n        .subscribe(\n          data =>\n            subscriber.next(true),\n          err =>\n            subscriber.error(err)\n        );\n      } else {\n        const postControllerParams: ControllerPostSchema = {\n          controllerName: data.controllerName,\n          ipAddress: data.ipAddress,\n          loginAccount: data.loginAccount,\n          loginPassword: data.loginPassword,\n          description: data.description\n        };\n        this.siteApiUrlService.postController(this.updateSiteName, postControllerParams)\n        .subscribe(\n          data =>\n            subscriber.next(true),\n          err =>\n            subscriber.error(err)\n        );\n      }\n    });\n  }\n\n}\n","<form [formGroup]=\"controllerForm\">\n  <mat-expansion-panel expanded=\"true\" togglePosition=\"before\" class=\"controller-form-modal\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        {{'CONPONENT.MODAL.GENERAL_SETTINGS'|translate}}\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n\n    <app-label-input [isRequired]=\"true\" label=\"{{'PAGE.SITE.COLUMN.SITE'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput formControlName=\"siteName\"/>\n      </mat-form-field>\n    </app-label-input>\n\n    <app-label-input [isRequired]=\"true\" label=\"{{'PAGE.SITE.COLUMN.CTRL_NAME'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput formControlName=\"controllerName\"/>\n        <mat-hint *ngIf=\"!updateFlag\">{{'PAGE.SITE.COLUMN.CTRL_NAME.HINT'|translate}}</mat-hint>\n      </mat-form-field>\n    </app-label-input>\n    \n    <app-label-input label=\"{{'PAGE.SITE.COLUMN.CTRL_DESCRIPTION'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput formControlName=\"description\"/>\n      </mat-form-field>\n    </app-label-input>\n    \n    <app-label-input [isRequired]=\"!updateFlag\" label=\"{{'PAGE.SITE.COLUMN.IP_ADDRESS'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput formControlName=\"ipAddress\"/>\n      </mat-form-field>\n    </app-label-input>\n\n    <app-label-input [isRequired]=\"!updateFlag\" label=\"{{'PAGE.SITE.COLUMN.LOGIN_USER'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput formControlName=\"loginAccount\"/>\n      </mat-form-field>\n    </app-label-input>\n\n    <app-label-input [isRequired]=\"controllerForm.get('loginAccount').value!=originalCtrlUser\" label=\"{{'PAGE.SITE.COLUMN.LOGIN_PASSWORD'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput type=\"password\" formControlName=\"loginPassword\"/>\n      </mat-form-field>\n    </app-label-input>\n\n  </mat-expansion-panel>\n</form>\n","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from \"rxjs\";\nimport { RegexService } from '../../../public-share/service/regex.service';\nimport { ApplicationModalConfig } from '../../../models/modal';\nimport { MODAL_DATA, PARENT_FORM, CHILD_FORM } from '../../../public-share/component/modal/modal.token';\nimport { BaseModal } from \"../../../public-share/component/modal/modal.base\";\nimport { SiteApiUrlService } from \"../service/siteApiUrl.service\";\nimport { SitePostSchema, SitePutSchema } from '../../../models/site';\n\n@Component({\n  selector: 'app-site-form-modal',\n  templateUrl: './siteFormModal.component.html',\n  styleUrls: ['../sites.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SiteFormModalComponent implements OnInit, BaseModal {\n\n  siteForm = this.formBuilder.group({\n    siteName: ['', [Validators.required, Validators.pattern(this.regexService.getRule('name_en_15'))]],\n    siteDescription: ['', []]\n  });\n\n  updateFlag: boolean = false;\n  updateInfo: SitePutSchema;\n  updateSiteName: string;\n\n  constructor(\n    @Inject(MODAL_DATA) public modalConfig: ApplicationModalConfig,\n    private formBuilder: FormBuilder,\n    private siteApiUrlService: SiteApiUrlService,\n    private regexService: RegexService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.modalConfig.data && this.modalConfig.data.updateFlag) {\n      this.updateFlag = true;\n      this.updateInfo = this.modalConfig.data.updateInfo;\n      this.updateSiteName = this.updateInfo.siteName;\n      this.siteForm.get('siteName').setValue(this.updateInfo.siteName);\n      this.siteForm.get('siteName').setValidators([Validators.pattern(this.regexService.getRule('name_en_15'))]),\n      this.siteForm.get('siteDescription').setValue(this.updateInfo.siteDescription);\n    }\n    this.modalConfig[PARENT_FORM].addControl(CHILD_FORM, this.siteForm);\n  }\n\n  submit(): Observable<any> {\n    const data = this.siteForm.getRawValue();\n\n    return new Observable<any>(subscriber => {\n      if (this.updateFlag == true) {\n        const putSiteParams: SitePutSchema = {\n          siteName: data.siteName,\n          siteDescription: data.siteDescription\n        };\n        if (data.siteName == '' || data.siteName === this.updateSiteName) {\n          delete putSiteParams.siteName;\n        }\n        this.siteApiUrlService.putSite(this.updateSiteName, putSiteParams)\n        .subscribe(\n          data =>\n            subscriber.next(true),\n          err =>\n            subscriber.error(err)\n        );\n      } else {\n        const postSiteParams: SitePostSchema = {\n          siteName: data.siteName,\n          siteDescription: data.siteDescription\n        };\n        this.siteApiUrlService.postSite(postSiteParams)\n        .subscribe(\n          data =>\n            subscriber.next(true),\n          err =>\n            subscriber.error(err)\n        );\n      }\n    });\n  }\n\n}\n","<form [formGroup]=\"siteForm\">\n  <mat-expansion-panel expanded=\"true\" togglePosition=\"before\" class=\"site-form-modal\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        {{'CONPONENT.MODAL.GENERAL_SETTINGS'|translate}}\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n\n    <app-label-input [isRequired]=\"!updateFlag\" label=\"{{'PAGE.SITE.COLUMN.SITE_NAME'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput formControlName=\"siteName\"/>\n        <mat-hint>{{'PAGE.SITE.COLUMN.SITE_NAME.HINT'|translate}}</mat-hint>\n      </mat-form-field>\n    </app-label-input>\n\n    <app-label-input label=\"{{'PAGE.SITE.COLUMN.SITE_DESCRIPTION'|translate}}\">\n      <mat-form-field appearance=\"outline\">\n        <input matInput formControlName=\"siteDescription\"/>\n      </mat-form-field>\n    </app-label-input>\n\n  </mat-expansion-panel>\n</form>\n","import { Injectable, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subject, BehaviorSubject, Observable, of, forkJoin } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport {\n  SiteTableData,\n  SitePostSchema,\n  SitePutSchema,\n  SiteRes,\n  ControllerTableData,\n  ControllerPostSchema,\n  ControllerPutSchema,\n  SiteErrorLogRes,\n  ControllerErrorLogRes\n} from '../../../models/site';\nimport { BasicModal, ApplicationModalConfig } from '../../../models/modal';\nimport { SiteApiUrlService } from './siteApiUrl.service';\nimport { ToastrOperatorService } from '../../../public-share/service/toastr-operator.service';\nimport { BasicModalService, ApplicationModalService } from '../../../public-share/component/modal/modal.service';\nimport { SiteFormModalComponent } from '../formModal/siteFormModal.component';\nimport { ControllerFormModalComponent } from '../formModal/controllerFormModal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SiteService implements OnInit, OnDestroy {\n\n  constructor(\n    private router: Router,\n    private toastrOperatorService: ToastrOperatorService,\n    private siteApiUrlService: SiteApiUrlService,\n    private appModalService: ApplicationModalService,\n    private basicModalService: BasicModalService,\n    private translate: TranslateService\n  ) { }\n\n  private _siteTableData = new BehaviorSubject<SiteTableData[]>([]);\n  private _loading = new BehaviorSubject<boolean>(true);\n  // private _message = new Subject<MessageModel>();\n  readonly siteTableData$: Observable<any> = this._siteTableData.asObservable();\n  readonly loading$: Observable<boolean> = this._loading.asObservable();\n  // readonly message$: Observable<MessageModel> = this._message.asObservable();\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this._siteTableData.unsubscribe();\n    this._loading.unsubscribe();\n    // this._message.unsubscribe();\n  }\n\n  getSitesTableData(): void {\n    this._loading.next(true);\n    \n    const sitesData = this.siteApiUrlService.getSites()\n      .pipe(\n        catchError((error) => {\n          const errorMessage = error.error?.error?.message || error.message || error;\n          this.toastrOperatorService.showErrorToastr(errorMessage, this.translate.instant('PAGE.SITE.MESSAGE.TITLE.GET_SITE_TABLE_DATA'));\n          return of([]);\n        })\n      )\n\n    const hour: number = 8;\n    const count: number = 100;\n    const sitesErrorLogData = this.siteApiUrlService.getSitesErrorLog(hour, count)\n      .pipe(\n        catchError((error) => {\n          const errorMessage = error.error?.error?.message || error.message || error;\n          this.toastrOperatorService.showErrorToastr(errorMessage, this.translate.instant('PAGE.SITE.MESSAGE.TITLE.GET_SITES_ERROR_LOG'));\n          return of([]);\n        })\n      )\n\n    forkJoin([sitesData, sitesErrorLogData])\n      .subscribe(([sitesRes, sitesErrorLogRes]) => {\n        const siteTableData: SiteTableData[] = [];\n        sitesRes.forEach((site) => {\n          siteTableData.push({\n            siteName: site.siteName,\n            siteDescription: site.siteDescription,\n            controllers: site.controllers,\n            controllerCounts: site.controllers.length\n          });\n        })\n        siteTableData.forEach((site) => {\n          let _controllersErrLog = sitesErrorLogRes.find((_site) => {return _site.siteName === site.siteName})?.controllers || [];\n          site.controllers.forEach( (controller) => {\n            controller.siteName = site.siteName;\n            controller.cpuUsagePercentage = (controller.cpuIdle >= 0)? (100-controller.cpuIdle) : -1;\n            controller.ramUsagePercentage = (controller.ramUsage >= 0)? controller.ramUsage : -1;\n            const availableDeviceCountsString: string = (controller.availableDeviceCounts >= 0)? controller.availableDeviceCounts.toString() : '-';\n            const deviceCountsString: string = (controller.deviceCounts >= 0)? controller.deviceCounts.toString() : '-';\n            controller.availableDevices = availableDeviceCountsString + ' / ' + deviceCountsString;\n\n            let _controllerErrLog = _controllersErrLog.find((_controller) => {return _controller.controllerName === controller.controllerName});\n            controller.errorLog = _controllerErrLog?.errorLog.reverse() || controller.errorLog;\n          })\n        });\n\n        this._loading.next(false);\n        this._siteTableData.next(JSON.parse(JSON.stringify(siteTableData)));\n    });\n\n  }\n\n  addSite(): void {\n    this.openSiteFormModal('add');\n  }\n\n  addController(siteName: string): void {\n    this.openControllerFormModal('add', siteName);\n  }\n\n  updateSite(rowData: SiteTableData): void {\n    const updateInfo: SitePutSchema = {\n      siteName: rowData.siteName,\n      siteDescription: rowData.siteDescription\n    };\n    this.openSiteFormModal('update', updateInfo);\n  }\n\n  updateController(siteName: string, rowData: ControllerTableData): void {\n    const updateInfo: ControllerPutSchema = {\n      controllerName: rowData.controllerName,\n      ipAddress: rowData.ipAddress,\n      loginAccount: rowData.loginAccount,\n      description: rowData.description\n    }\n    this.openControllerFormModal('update', siteName, updateInfo);\n  }\n\n  openSiteFormModal(action: ('add'|'update'), updateInfo?: SitePutSchema): void {\n    let modalConfig: ApplicationModalConfig;\n    let toastrTitle: string = '';\n    let successMessage: string = '';\n    \n    switch(action) {\n      case 'add':\n          modalConfig = {\n                          title: this.translate.instant('PAGE.SITE.ACTION.ADD_SITE')\n                        };\n          toastrTitle = this.translate.instant('PAGE.SITE.MESSAGE.TITLE.ADD_SITE');\n          successMessage = this.translate.instant('PAGE.SITE.MESSAGE.SUCCESS.ADD_SITE');\n          break;\n      case 'update':\n          modalConfig = {\n                          title: this.translate.instant('PAGE.SITE.ACTION.UPDATE_SITE'),\n                          data: {\n                                  updateInfo: updateInfo,\n                                  updateFlag: true\n                                }\n                        };\n          toastrTitle = this.translate.instant('PAGE.SITE.MESSAGE.TITLE.UPDATE_SITE');\n          successMessage = this.translate.instant('PAGE.SITE.MESSAGE.SUCCESS.UPDATE_SITE');\n          break;\n    }\n\n    const modalRef = this.appModalService.open(SiteFormModalComponent, modalConfig);\n\n    modalRef.afterClose$.subscribe(\n      res => {\n        if (!res.data) return;\n        this.toastrOperatorService.showSuccessToastr(successMessage, toastrTitle);\n        this.getSitesTableData();\n      },\n      error => {\n        const errorMessage = error.error?.error?.message || error.message || error;\n        this.toastrOperatorService.showErrorToastr(errorMessage, toastrTitle);\n      }\n    )\n  }\n\n  openControllerFormModal(action: ('add'|'update'), siteName: string, updateInfo?: ControllerPutSchema): void {\n    let modalConfig: ApplicationModalConfig;\n    let toastrTitle: string = '';\n    let successMessage: string ='';\n    \n    switch(action) {\n      case 'add':\n          modalConfig = {\n                          title: this.translate.instant('PAGE.SITE.ACTION.ADD_CTRL'),\n                          data: {\n                                  siteName: siteName\n                                }\n                        };\n          toastrTitle = this.translate.instant('PAGE.SITE.MESSAGE.TITLE.ADD_CTRL');\n          successMessage = this.translate.instant('PAGE.SITE.MESSAGE.SUCCESS.ADD_CTRL');\n          break;\n      case 'update':\n          modalConfig = {\n                          title: this.translate.instant('PAGE.SITE.ACTION.UPDATE_CTRL'),\n                          data: {\n                                  updateInfo: updateInfo,\n                                  updateFlag: true,\n                                  siteName: siteName\n                                }\n                        };\n          toastrTitle = this.translate.instant('PAGE.SITE.MESSAGE.TITLE.UPDATE_CTRL');\n          successMessage = this.translate.instant('PAGE.SITE.MESSAGE.SUCCESS.UPDATE_CTRL');\n          break;\n    }\n\n    const modalRef = this.appModalService.open(ControllerFormModalComponent, modalConfig);\n\n    modalRef.afterClose$.subscribe(\n      res => {\n        if (!res.data) return;\n        this.toastrOperatorService.showSuccessToastr(successMessage, toastrTitle);\n        this.getSitesTableData();\n      },\n      error => {\n        const errorMessage = error.error?.error?.message || error.message || error;\n        this.toastrOperatorService.showErrorToastr(errorMessage, toastrTitle);\n      }\n    )\n  }\n\n  deleteSite(siteName: string): void {\n    const model: BasicModal = {\n      title: this.translate.instant('PAGE.SITE.ACTION.DELETE_SITE'),\n      content: this.translate.instant('PAGE.SITE.ACTION.DELETE_SITE.CONTENT'),\n      showCancelBtn: true,\n      showConfirmBtn: true\n    }\n    this.basicModalService\n      .openBasicDialog(model)\n      .afterClosed()\n      .subscribe(confirm => {\n        if (confirm) {\n          this.siteApiUrlService.deleteSite(siteName)\n          .pipe(\n            catchError((error) => {\n              const errorMessage = error.error?.error?.message || error.message || error;\n              this.toastrOperatorService.showErrorToastr(errorMessage, this.translate.instant('PAGE.SITE.MESSAGE.TITLE.DELETE_SITE'));\n              return of([]);\n            })\n          )\n          .subscribe((noneRes) => {\n            if (!noneRes) {\n              this.getSitesTableData();\n              this.toastrOperatorService.showSuccessToastr(\n                this.translate.instant('PAGE.SITE.MESSAGE.SUCCESS.DELETE_SITE', {'siteName': siteName}),\n                this.translate.instant('PAGE.SITE.MESSAGE.TITLE.DELETE_SITE')\n              );\n            }\n          })\n        }\n      });\n  }\n\n  deleteController(siteName: string, controllerName: string): void {\n    const model: BasicModal = {\n      title: this.translate.instant('PAGE.SITE.ACTION.DELETE_CTRL'),\n      content: this.translate.instant('PAGE.SITE.ACTION.DELETE_CTRL.CONTENT'),\n      showCancelBtn: true,\n      showConfirmBtn: true\n    }\n    this.basicModalService\n      .openBasicDialog(model)\n      .afterClosed()\n      .subscribe(confirm => {\n        if (confirm) {\n          this.siteApiUrlService.deleteController(siteName, controllerName)\n          .pipe(\n            catchError((error) => {\n              const errorMessage = error.error?.error?.message || error.message || error;\n              this.toastrOperatorService.showErrorToastr(errorMessage, this.translate.instant('PAGE.SITE.MESSAGE.TITLE.DELETE_CTRL'));\n              return of([]);\n            })\n          )\n          .subscribe((noneRes) => {\n            if (!noneRes) {\n              this.getSitesTableData();\n              this.toastrOperatorService.showSuccessToastr(\n                this.translate.instant('PAGE.SITE.MESSAGE.SUCCESS.DELETE_CTRL', {'controllerName': controllerName}),\n                this.translate.instant('PAGE.SITE.MESSAGE.TITLE.DELETE_CTRL')\n              );\n            }\n          })\n        }\n      });\n  }\n\n  getControllerErrorLog(siteName: string, controllerName: string, errorLog: string[], controllerErrorLogTemplateRef: TemplateRef<any>): void {\n    this.openControllerErrorLogModal(siteName, controllerName, errorLog, controllerErrorLogTemplateRef);\n  }\n  \n  openControllerErrorLogModal(siteName: string, controllerName: string, errorLog: string[], controllerErrorLogTemplateRef: TemplateRef<any>): void {\n    const model: BasicModal = {\n      title: this.translate.instant('PAGE.SITE.CTRL_ERROR_LOG', {'siteName': siteName, 'controllerName': controllerName}),\n      template: controllerErrorLogTemplateRef,\n      data: errorLog,\n      showConfirmBtn: true,\n      size: 'eighty-percent'\n    }\n    this.basicModalService\n      .openBasicDialog(model)\n      .afterClosed()\n      .subscribe(confirm => { });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { apiUrl } from '../../../public-share/service/environment';\nimport {\n  SitePostSchema,\n  SitePutSchema,\n  SiteRes,\n  ControllerPostSchema,\n  ControllerPutSchema,\n  SiteErrorLogRes,\n  ControllerErrorLogRes\n} from '../../../models/site';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SiteApiUrlService {\n\n  constructor(\n    private http: HttpClient\n  ){ }\n  public postSite(site: SitePostSchema) {\n    return this.http.post(`${apiUrl}/sites`, site);\n  }\n\n  public getSites(): Observable<SiteRes[]> {\n    return this.http.get<SiteRes[]>(`${apiUrl}/sites`);\n  }\n\n  public putSite(siteName: string, site: SitePutSchema) {\n    return this.http.put(`${apiUrl}/sites/${siteName}`, site);\n  }\n\n  public deleteSite(siteName: string) {\n    return this.http.delete(`${apiUrl}/sites/${siteName}`);\n  }\n\n  public postController(siteName: string, controller: ControllerPostSchema) {\n    return this.http.post(`${apiUrl}/sites/${siteName}/controllers`, controller);\n  }\n\n  public putController(siteName: string, controllerName: string, controller: ControllerPutSchema) {\n    return this.http.put(`${apiUrl}/sites/${siteName}/controllers/${controllerName}`, controller);\n  }\n\n  public deleteController(siteName: string, controllerName: string) {\n    return this.http.delete(`${apiUrl}/sites/${siteName}/controllers/${controllerName}`);\n  }\n\n  public getSitesErrorLog(hour: number, count: number): Observable<SiteErrorLogRes[]> {\n    return this.http.get<SiteErrorLogRes[]>(`${apiUrl}/sites/errorLog?hour=${hour}&count=${count}`);\n  }\n\n  public getControllerErrorLog(siteName: string, controllerName: string, controller: ControllerPutSchema, hour: number, count: number) {\n    return this.http.get(`${apiUrl}/sites/${siteName}/controllers/${controllerName}/errorLog?hour=${hour}&count=${count}`);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Column, DataTableModel } from '../../../models/data-table';\nimport { LoginService } from '../../login/service/login.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SiteTableModelService {\n  isGuest: boolean = this.loginService.isGuestUser();\n\n  constructor(\n    private loginService: LoginService,\n    private translate: TranslateService\n  ) { }\n\n  getSiteTableModel(): DataTableModel {\n    let columns: Column[] = [\n      {\n        id: 'siteName',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.SITE_NAME'),\n        maxWidth: '360px'\n      },\n      {\n        id: 'siteDescription',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.SITE_DESCRIPTION')\n      }, {\n        id: 'controllerCounts',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.NUM_OF_CTRL'),\n        maxWidth: '200px'\n      }\n    ];\n    \n    this.isGuest = this.loginService.isGuestUser();\n    if (!this.isGuest) {\n      columns.push(\n        {\n          id: 'multiActions',\n          displayName: this.translate.instant('PAGE.SITE.COLUMN.ACTIONS'),\n          sort: 'disabled',\n          maxWidth: '240px'\n        }\n      );\n    }\n\n    return {\n      columns: columns,\n      expandRowSupport: true,\n      expandRowTemplate: undefined,\n      hiddenRefresh: true,\n      hiddenCustomize: true\n    };\n  }\n\n  getControllerTableModel(): DataTableModel {\n    let columns: Column[] = [\n      {\n        id: 'controllerName',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.CONTROLLER'),\n        minWidth: '140px'\n      },\n      {\n        id: 'errorLog',\n        displayName: this.translate.instant(' '),\n        maxWidth: '40px'\n      },\n      {\n        id:'description',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.CTRL_DESCRIPTION'),\n        minWidth: '100px'\n      },\n      {\n        id:'ipAddress',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.IP_ADDRESS'),\n        minWidth: '120px'\n      },\n      {\n        id: 'loginAccount',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.LOGIN_USER'),\n        minWidth: '110px'\n      },\n      {\n        id: 'loginStatus',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.LOGIN_STATUS'),\n        maxWidth: '100px'\n      },\n      {\n        id: 'availableDevices',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.AVAILABLE_DEVICES'),\n        minWidth: '160px'\n      },\n      {\n        id: 'cpuUsagePercentage',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.CPU_USAGE_PERCENTAGE'),\n        minWidth: '90px'\n      },\n      {\n        id: 'ramUsagePercentage',\n        displayName: this.translate.instant('PAGE.SITE.COLUMN.RAM_USAGE_PERCENTAGE'),\n        minWidth: '90px'\n      }\n    ];\n    \n    this.isGuest = this.loginService.isGuestUser();\n    if (!this.isGuest) {\n      columns.push(\n        {\n          id: 'multiActions',\n          sort: 'disabled',\n          maxWidth: '160px',\n          minWidth: '160px',\n          displayName: this.translate.instant('PAGE.SITE.COLUMN.ACTIONS')\n        }\n      );\n    }\n\n    return {\n      columns: columns,\n      hiddenRefresh: true,\n      hiddenCustomize: true\n    };\n  }\n\n}","import { Component, OnInit, ViewChild, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RegexService } from '../../public-share/service/regex.service';\nimport { LoginService } from '../login/service/login.service';\nimport { ToastrOperatorService } from '../../public-share/service/toastr-operator.service';\nimport { Subject, BehaviorSubject, Observable } from 'rxjs';\nimport { SiteService } from './service/site.service';\nimport { SiteTableModelService } from './service/siteTableModel.service';\nimport { DataTableModel } from '../../models/data-table';\n\n@Component({\n  selector: 'app-sites',\n  templateUrl: './sites.component.html',\n  styleUrls: ['./sites.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SitesComponent implements OnInit {\n  @ViewChild('controllers', { static: true }) controllersRef: TemplateRef<any>;\n  @ViewChild(\"siteMultiActions\", { static: true }) siteMultiActionsRef: TemplateRef<any>;\n  @ViewChild(\"controllerMultiActions\", { static: true }) controllerMultiActionsRef: TemplateRef<any>;\n  @ViewChild(\"controllerLink\", { static: true }) controllerLinkRef: TemplateRef<any>;\n  @ViewChild(\"controllerLoginStatus\", { static: true }) controllerLoginStatusRef: TemplateRef<any>;\n  @ViewChild(\"controllerCpuUsagePercentage\", { static: true }) controllerCpuUsagePercentageRef: TemplateRef<any>;\n  @ViewChild(\"controllerRamUsagePercentage\", { static: true }) controllerRamUsagePercentageRef: TemplateRef<any>;\n  @ViewChild(\"controllerAvailableDevices\", { static: true }) controllerAvailableDevicesRef: TemplateRef<any>;\n  @ViewChild(\"controllerErrorLog\", { static: true }) controllerErrorLogRef: TemplateRef<any>;\n  @ViewChild(\"controllerErrorLogTemplate\", { static: true }) controllerErrorLogTemplateRef: TemplateRef<any>;\n\n  siteTableModel: DataTableModel;\n  controllerTableModel: DataTableModel;\n  isGuest: boolean;\n\n  readonly siteTableData$: Observable<any[]> = this.siteService.siteTableData$;\n  readonly loading$: Observable<boolean> = this.siteService.loading$;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private regexService: RegexService,\n    private toastrOperatorService: ToastrOperatorService,\n    private siteService: SiteService,\n    private siteTableModelService: SiteTableModelService,\n    private loginService: LoginService\n  ) {\n    this.isGuest = this.loginService.isGuestUser();\n  }\n\n  ngOnInit(): void {\n    this.initialTableModel();\n    this.refreshTableData();\n  }\n\n  refreshTableData(): void {\n    this.siteService.getSitesTableData();\n  }\n\n  initialTableModel(): void {\n    this.siteTableModel = this.siteTableModelService.getSiteTableModel();\n    this.updateTableCellTemplate(this.siteTableModel, 'site');\n\n    this.controllerTableModel = this.siteTableModelService.getControllerTableModel();\n    this.updateTableCellTemplate(this.controllerTableModel, 'controller');\n\n    this.siteTableModel.expandRowTemplate = this.controllersRef;\n  }\n\n  updateTableCellTemplate(tableModel: DataTableModel, level?: string): void {\n    tableModel.columns.forEach((item) => {\n      if (item.id === 'multiActions') {\n        if (level === 'site') {\n          item.customCellTemplate = this.siteMultiActionsRef;\n        } else if (level === 'controller') {\n          item.customCellTemplate = this.controllerMultiActionsRef;\n        }\n      }  else if (item.id === 'controllerName') {\n        item.customCellTemplate = this.controllerLinkRef;\n      }  else if (item.id === 'loginStatus') {\n        item.customCellTemplate = this.controllerLoginStatusRef;\n      } else if (item.id === 'cpuUsagePercentage') {\n        item.customCellTemplate = this.controllerCpuUsagePercentageRef;\n      } else if (item.id === 'ramUsagePercentage') {\n        item.customCellTemplate = this.controllerRamUsagePercentageRef;\n      } else if (item.id === 'availableDevices') {\n        item.customCellTemplate = this.controllerAvailableDevicesRef;\n      } else if (item.id === 'errorLog') {\n        item.customCellTemplate = this.controllerErrorLogRef;\n      }\n    });\n  }\n\n  addSite(): void {\n    this.siteService.addSite();\n  }\n\n  addController(rowData, $event): void {\n    $event.stopPropagation();\n    this.siteService.addController(rowData.siteName);\n  }\n\n  delete(rowData, $event, level: ('site'|'controller')): void {\n    switch (level) {\n      case 'site':\n          $event.stopPropagation();\n          this.siteService.deleteSite(rowData.siteName);\n          break;\n      case 'controller':\n          this.siteService.deleteController(rowData.siteName, rowData.controllerName);\n          break;\n    }\n  }\n\n  update(rowData, $event, level: ('site'|'controller')): void {\n    switch (level) {\n      case 'site':\n          $event.stopPropagation();\n          this.siteService.updateSite(rowData);\n          break;\n      case 'controller':\n          this.siteService.updateController(rowData.siteName, rowData);\n          break;\n    }\n  }\n\n  getControllerErrorLog(siteName: string, controllerName: string, errorLog: string[], $event): void {\n    $event.stopPropagation();\n    this.siteService.getControllerErrorLog(siteName, controllerName, errorLog, this.controllerErrorLogTemplateRef);\n  }\n\n  navigate2ControllerWeb(rowData): void {\n    const controllerIp: string = rowData.ipAddress;\n    window.open(`https://${controllerIp}`, '_blank');\n  }\n\n  getPercentageProgressStyleParams(percentage: number): string {\n    let color: string;\n    if(percentage>80) {\n      color = '#f1d1c8'; // RED\n    } else {\n      color = '#9ed68a'; // GREEN\n    }\n    return `--progress-color: ${color}; --progress: ${percentage}%;`;\n  }\n\n}\n","<div class=\"mat-app-background mars-component\">\n  <div class=\"main-header tab-bar\">\n    <div class=\"header-primary\">\n      <div class=\"header-title\">{{'PAGE.MAIN_FRAME.MENU.SITES'|translate}}</div>\n      <div class=\"flex-spacer\"></div>\n      <div header-action-show >\n          <button mat-stroked-button (click)=\"addSite()\"  *ngIf=\"!isGuest\">\n            {{'PAGE.SITE.ACTION.ADD_SITE'|translate}}\n          </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"main-content tab-content\">\n\n    <div class=\"mars-middle-sites\">\n      <app-data-table\n        [model]=\"siteTableModel\"\n        [loadingStatus]=\"loading$\"\n        [data]=\"siteTableData$\"\n        (refreshEmmiter)=\"refreshTableData()\">\n      </app-data-table>\n    </div>\n\n  </div>\n</div>\n\n<ng-template #controllers let-row=\"row\">\n  <mat-card class=\"controllers\" style=\"width: 100%; margin: 28px 0;\">\n    <mat-card-header>\n      <mat-card-title>{{row.siteName}} | {{'PAGE.SITE.TITLE.CTRL_LIST'|translate}}</mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content>\n      <div class=\"controllers-container\" style=\"width: 100%;\">\n        <app-data-table [model]=\"controllerTableModel\" [data]=\"row.controllers\">\n        </app-data-table>\n      </div>\n    </mat-card-content>\n  </mat-card>\n</ng-template>\n\n<ng-template #siteMultiActions let-row=\"row\">\n  <button mat-stroked-button\n          class=\"site-action-btn inline danger\"\n          (click)=\"delete(row, $event, 'site')\">\n    <span>{{'COMPONENT.DATA_TABLE.ACTION.DELETE'|translate}}</span>\n  </button>\n  <button mat-stroked-button\n          class=\"site-action-btn inline\"\n          (click)=\"update(row, $event, 'site')\"\n          style=\"margin-left: 6px;\">\n    <span>{{'COMPONENT.DATA_TABLE.ACTION.UPDATE'|translate}}</span>\n  </button>\n  <button mat-stroked-button\n          class=\"site-action-btn inline\"\n          (click)=\"addController(row, $event)\"\n          style=\"margin-left: 6px;\">\n    <span>{{'PAGE.SITE.ACTION.ADD_CTRL'|translate}}</span>\n  </button>\n</ng-template>\n\n<ng-template #controllerMultiActions let-row=\"row\">\n  <button mat-stroked-button\n          class=\"site-action-btn inline danger\"\n          (click)=\"delete(row, $event, 'controller')\">\n    <span>{{'COMPONENT.DATA_TABLE.ACTION.DELETE'|translate}}</span>\n  </button>\n  <button mat-stroked-button\n          class=\"site-action-btn inline\"\n          (click)=\"update(row, $event, 'controller')\"\n          style=\"margin-left: 6px;\">\n    <span>{{'COMPONENT.DATA_TABLE.ACTION.UPDATE'|translate}}</span>\n  </button>\n</ng-template>\n\n<ng-template #controllerLink let-row=\"row\">\n  <a class=\"navi-ctrl-web\" title=\"Go to Controller Web\" (click)=\"navigate2ControllerWeb(row)\">\n    {{row.controllerName}}\n    <mat-icon class=\"navi-ctrl-web-icon\">\n        <span class=\"material-symbols-rounded\">open_in_new</span>\n    </mat-icon>\n  </a>\n</ng-template>\n\n<ng-template #controllerLoginStatus let-row=\"row\">\n  <mat-icon class=\"ctrl-login-status-icon\">\n      <span *ngIf=\"row.loginStatus\"  class=\"material-symbols-rounded\" style=\"color: #9ed68a\">link</span>\n      <span *ngIf=\"!row.loginStatus\" class=\"material-symbols-rounded\" style=\"color: #e57979;\">link_off</span>\n  </mat-icon>\n</ng-template>\n\n<ng-template #controllerCpuUsagePercentage let-row=\"row\">\n  <div *ngIf=\"row.cpuUsagePercentage >= 0\"\n       class=\"g-progress\"\n       style=\"width:80%; text-align:center; vertical-align:middle;\"\n       [style]=\"getPercentageProgressStyleParams(row.cpuUsagePercentage)\">\n      {{row.cpuUsagePercentage.toFixed(2)}}%\n  </div>\n  <div *ngIf=\"!(row.cpuUsagePercentage >= 0)\"\n       style=\"width:80%; text-align:center;\">\n      -\n  </div>\n</ng-template>\n\n<ng-template #controllerRamUsagePercentage let-row=\"row\">\n  <div *ngIf=\"row.ramUsagePercentage >= 0\"\n        class=\"g-progress\"\n        style=\"width:80%; text-align:center; vertical-align:middle;\"\n        [style]=\"getPercentageProgressStyleParams(row.ramUsagePercentage)\">\n      {{row.ramUsagePercentage.toFixed(2)}}%\n  </div>\n  <div *ngIf=\"!(row.ramUsagePercentage >= 0)\"\n       style=\"width:80%; text-align:center;\">\n      -\n  </div>\n</ng-template>\n\n<ng-template #controllerAvailableDevices let-row=\"row\">\n  <div style=\"width: 100px; text-align:center; vertical-align:middle;\">\n      {{row.availableDevices}}\n  </div>\n</ng-template>\n\n<ng-template #controllerErrorLog let-row=\"row\">\n  <mat-icon *ngIf=\"row.errorLog.length>0 && row.loginStatus\"\n            class=\"ctrl-error-log-icon\"\n            (click)=\"getControllerErrorLog(row.siteName, row.controllerName, row.errorLog, $event)\">\n    <span class=\"material-symbols-outlined\">sms_failed</span>\n  </mat-icon>\n</ng-template>\n\n<ng-template #controllerErrorLogTemplate let-errorLogArray>\n  <div *ngFor=\"let errorLog of errorLogArray; let i=index\">\n    <hr *ngIf=\"i!=0\"/>\n    <div style=\"display: flex;\">\n      <div style=\"width: 40px;\">{{i+1}}.</div>\n      <div style=\"width: calc(100% - 40px);\">\n        {{errorLog.split('ERROR')[0]}} <em class=\"history-pre\">ERROR</em> {{errorLog.split('ERROR')[1]}}\n      </div>\n    </div>\n  </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgMaterialModule } from '../../public-share/ng-material/ng-material.module';\nimport { ComponentModule } from '../../public-share/component/component.module';\nimport { SitesComponent } from './sites.component';\nimport { SiteFormModalComponent } from './formModal/siteFormModal.component';\nimport { ControllerFormModalComponent } from './formModal/controllerFormModal.component';\n\n@NgModule({\n  declarations: [\n    SitesComponent,\n    SiteFormModalComponent,\n    ControllerFormModalComponent\n  ],\n  imports: [\n    CommonModule,\n    NgMaterialModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ComponentModule\n  ]\n})\nexport class SitesModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { LabelInputModule } from './label-input/label-input.module';\nimport { NgMaterialModule } from '../../public-share/ng-material/ng-material.module';\nimport { DataTableComponent } from './data-table/data-table.component';\nimport { MaxColumnWidthDirective, MinColumnWidthDirective } from './data-table/column-width.directive';\nimport { InputComponent } from './input/input.component';\nimport { BasicModalComponent, ApplicationModalComponent } from './modal/modal.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LabelInputModule,\n    NgMaterialModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatDialogModule\n  ],\n  exports: [\n    LabelInputModule,\n    DataTableComponent,\n    InputComponent,\n    BasicModalComponent,\n    ApplicationModalComponent\n  ],\n  declarations: [\n    DataTableComponent,\n    MaxColumnWidthDirective,\n    MinColumnWidthDirective,\n    InputComponent,\n    BasicModalComponent,\n    ApplicationModalComponent\n  ],\n  providers: [],\n})\nexport class ComponentModule { }\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n\tselector: '[maxColumnWidth]'\n})\nexport class MaxColumnWidthDirective implements OnInit {\n  @Input('maxColumnWidth') maxWidth: string;\n  private _element: HTMLInputElement;\n\n  constructor(private elementRef: ElementRef) {\n    this._element = this.elementRef.nativeElement;\n  \n  }\n  ngOnInit(): void {\n    if (this.maxWidth) {\n      this._element.style.maxWidth = this.maxWidth;\n    }\n  }\n}\n\n@Directive({\n\tselector: '[minColumnWidth]'\n})\nexport class MinColumnWidthDirective implements OnInit {\n  @Input('minColumnWidth') minWidth: string;\n  private _element: HTMLInputElement;\n\n  constructor(private elementRef: ElementRef) {\n    this._element = this.elementRef.nativeElement;\n  \n  }\n  ngOnInit(): void {\n    if (this.minWidth) {\n      this._element.style.minWidth = this.minWidth;\n    }\n  }\n}","import {\n  Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChange,\n  AfterViewInit, ViewChild, ElementRef, TemplateRef, OnDestroy\n} from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SelfDataSource } from './dataSource';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DataTableModel, Column } from '../../../models/data-table';\nimport { InputModel } from '../../../models/input';\nimport { TableAnimations } from './table-animations';\nimport { Observable } from 'rxjs';\nimport { LoginService } from '../../../pages/login/service/login.service';\n\nconst DISPLAY_COLUMN_EXPAND = 'expand';\nconst DISPLAY_COLUMN_SELECT = 'select';\n\n@Component({\n  selector: 'app-data-table',\n  templateUrl: './data-table.component.html',\n  styleUrls: ['./data-table.component.scss'],\n  animations: [\n    TableAnimations.expendSwitch,\n    // TableAnimations.detailExpand,\n    TableAnimations.detailContent,\n    TableAnimations.actionExpand\n  ],\n})\nexport class DataTableComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n  @ViewChild('matTable', {static: true}) matTable: ElementRef;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @Input() model: DataTableModel;\n  @Input('data') originData$: Observable<any> | any[];\n  @Input('loadingStatus') loadingStatus$: Observable<boolean>;\n  @Input() hidePaginator: boolean;\n  @Input() customPageSize: number;\n  @Output() deleteEmmiter = new EventEmitter<any>();\n  @Output() refreshEmmiter = new EventEmitter<any>();\n  @Output() overRowEmmiter = new EventEmitter<any>();\n  @Output() leaveRowEmmiter = new EventEmitter<any>();\n  @Output() paginationEmmiter = new EventEmitter<any>();\n  tableModel: DataTableModel = {\n    columns: []\n  };\n  columnsToDisplay: string[] = [];\n  dataSource = new SelfDataSource([]);\n\n  toggleFilterFlag: boolean = false;\n  toggleCustomizeFlag: boolean = false;\n  initialSelection = [];\n  allowMultiSelect: boolean = true;\n  selection = new SelectionModel<any>(this.allowMultiSelect, this.initialSelection);\n\n  paginationParams = {\n    filter: '',\n    sort: {},\n    pageIndex: 0,\n    pageSize: 10\n  };\n  filteredDataLength: number = 0;\n\n  search: InputModel = {\n    type: 'search',\n    placeholder: 'COMPONENT.SEARCH_BAR.PALCEHOLDER'\n  };\n  expandedElement = null;\n  loading: boolean = true;\n  isGuest: boolean = false;\n\n  // for column Cell Filter Selector using\n  searchResult: string = '';\n  columnFilterStorage: any = {};\n  columnFilterSelectorOpened: string = 'no-one-opened';\n  columnCellFilterFormCheckBoxAllCompleted = {};\n  originFilterPredicate = this.dataSource.filterPredicate;\n\n  constructor(private translate: TranslateService,\n              private loginService: LoginService,\n              private elementRef: ElementRef) {\n              this.isGuest = this.loginService.isGuestUser();\n  }\n\n  ngOnInit(): void {\n    if (!this.model) return;\n    this.tableModel.sortSupport = this.model.sortSupport === undefined ? true : this.model.sortSupport;\n    this.tableModel.hiddenHeaderActions = this.model.hiddenHeaderActions || false;\n    this.tableModel.hiddenSearch = this.model.hiddenSearch || false;\n    this.tableModel.hiddenRefresh = this.model.hiddenRefresh || false;\n    this.tableModel.hiddenCustomize = this.model.hiddenCustomize || false;\n    this.tableModel.expandRowSupport = this.model.expandRowSupport || false;\n    this.tableModel.hoverRowEmitEvent = this.model.hoverRowEmitEvent || false;\n    this.tableModel.noneStickyHeaderRow = this.model.noneStickyHeaderRow || false;\n    this.tableModel.selectionSupport = this.model.selectionSupport || false;\n    if(this.isGuest) this.tableModel.selectionSupport = false;\n    this.tableModel.backendPagination = this.model.backendPagination || false;\n    this.dataSource.backendPagination = this.tableModel.backendPagination;\n\n    this.initTableColumns(this.model.columns);\n\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    if (this.originData$ instanceof Array) {\n      this.dataSource.data = this.originData$;\n      this.getColumnCellFilterOpionList(this.dataSource.data);\n      this.filteredDataLength = this.dataSource.filteredData.length;\n    } else {\n      this.originData$ && this.originData$.subscribe((data) => {\n        if (this.dataSource.fromBackendData) {\n          this.dataSource.data = data.data;\n          this.filteredDataLength = data.count;\n        } else {\n          this.dataSource.data = data;\n          this.filteredDataLength = this.dataSource.filteredData.length;\n        }\n        this.getColumnCellFilterOpionList(this.dataSource.data);\n      });\n    }\n\n    if (this.loadingStatus$) {\n      this.loadingStatus$.subscribe((value) => {\n        this.loading = value;\n      });\n    } else {\n      this.loading = false;\n    }\n    this.translate.get([\n      'COMPONENT.SEARCH_BAR.PALCEHOLDER',\n      'COMPONENT.DATA_TABLE.PAGINATOR.ITEMS_PER_PAGE_LABEL']).subscribe((res) => {\n        this.search.placeholder = res['COMPONENT.SEARCH_BAR.PALCEHOLDER'];\n        this.paginator._intl.itemsPerPageLabel = res['COMPONENT.DATA_TABLE.PAGINATOR.ITEMS_PER_PAGE_LABEL'];\n      });\n    // this.translate.getTranslation(this.translate.currentLang).subscribe((res) => {\n    //   this.tableModel.columns.forEach((item) => {\n    //     item.displayName = this.translate.instant(item.displayName);\n    //   });\n    // });\n  }\n\n  ngAfterViewInit(): void {\n    // if user clicks out of Column Filter Selector feild, close Column Filter Selector\n    document.addEventListener('click', this.closeColumnFilterSelector.bind(this));\n    // when window is resized, close Column Filter Selector\n    window.addEventListener('resize', () => {this.columnFilterSelectorOpened = 'no-one-opened'});\n    // stop Propagation when filter Icon is clicked\n    this.filterIconEventListener();\n  }\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n    if (changes.originData$ && this.originData$ instanceof Array) {\n      if (this.dataSource.fromBackendData) {\n        this.dataSource.data = changes.originData$.currentValue.data;\n        this.filteredDataLength = changes.originData$.currentValue.count;\n      } else {\n        this.dataSource.data = changes.originData$.currentValue || [];\n        this.filteredDataLength = this.dataSource.data.length;\n      }\n      this.getColumnCellFilterOpionList(this.dataSource.data);\n    }\n    if (changes.model) {\n      this.tableModel.expandRowSupport = changes.model.currentValue && changes.model.currentValue.expandRowSupport || false;\n      this.initTableColumns(changes.model.currentValue && changes.model.currentValue.columns || []);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroyFilterToolSetting();\n  }\n\n  initTableColumns(columns: Column[]): void {\n    this.columnsToDisplay = [];\n    this.tableModel.columns = [];\n    columns.forEach((item) => {\n      item.sort = item.sort || 'asc';\n      item.visible = item.visible === undefined ? true : item.visible;\n      if((item.id.toLowerCase() == 'actions' && !this.isGuest) || item.id.toLowerCase() != 'actions'){\n        this.tableModel.columns.push(item);\n        if (item.visible) this.columnsToDisplay.push(item.id);\n      }\n      // initial for Column Cell Filter Opion List -- start\n      if (item.filterTool == true) {\n        this.columnFilterStorage[item.id] = [];\n        this.columnCellFilterFormCheckBoxAllCompleted[item.id] = false;\n      }\n      // initial for Column Cell Filter Opion List -- end\n    });\n    if (this.tableModel.selectionSupport) this.columnsToDisplay.unshift(DISPLAY_COLUMN_SELECT);\n    if (this.tableModel.expandRowSupport) this.columnsToDisplay.push(DISPLAY_COLUMN_EXPAND);\n  }\n\n  columnVisibleChange(item: Column): void {\n    if (item.visible) {\n      this.columnsToDisplay = this.refreshDisplayColumns();\n    } else {\n      const index = this.columnsToDisplay.indexOf(item.id);\n      if (index > -1) {\n        this.columnsToDisplay.splice(index, 1);\n      }\n    }\n  }\n\n  refreshDisplayColumns() {\n    const temp: string[] = [];\n    this.tableModel.columns.forEach((item) => {\n      if (item.visible) {\n        temp.push(item.id);\n      }\n    })\n    if (this.tableModel.selectionSupport) temp.unshift(DISPLAY_COLUMN_SELECT);\n    if (this.tableModel.expandRowSupport) temp.push(DISPLAY_COLUMN_EXPAND);\n    return temp;\n  }\n\n  toggleFilter(): void {\n    this.toggleFilterFlag = !this.toggleFilterFlag;\n    this.toggleCustomizeFlag = false;\n  }\n\n  toggleCustomize(): void {\n    this.toggleCustomizeFlag = !this.toggleCustomizeFlag;\n    this.toggleFilterFlag = false;\n  }\n\n  getSearchResult(event): void {\n    this.searchResult = event;\n    // If Column-Cell-Filter used, FromBackendData won't sent paginationParamsinfo, and paginationParamsinfo would be wrong //\n    if (Object.keys(this.columnFilterStorage).length !== 0) {\n      if (event == null || event === '') {\n        this.dataSource.filter = '◬'; // Because this.dataSource.filter ='' would not go through Filter Predicate Function\n      } else {\n        this.dataSource.filter = event;\n      }\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n      this.filteredDataLength = this.dataSource.filteredData.length;\n      return;\n    }\n\n    if (this.dataSource.fromBackendData) {\n      if (event == null || event === '') {\n        this.paginationParams['filter'] = '';\n      } else {\n        this.paginationParams['filter'] = event;\n      }\n      this.paginationEmmiter.emit(this.paginationParams);\n    } else {\n      this.dataSource.filter = event;\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n      this.filteredDataLength = this.dataSource.filteredData.length;\n    }\n  }\n\n  getPagination() {\n    return this.paginationParams;\n  }\n\n  updateColumnTemplateRef(id: string, ref: TemplateRef<any>) {\n    this.tableModel.columns.forEach(col => {\n      if(col.id == id){\n        col.customCellTemplate = ref;\n      }\n    })\n  }\n\n  sortData(sort: Sort): void {\n    if (this.dataSource.fromBackendData) {\n      if (sort.active && sort.direction !== '') {\n        this.paginationParams['sort'] = {\n          name: sort.active,\n          direction: sort.direction\n        }\n      } else {\n        this.paginationParams['sort'] = {}\n      }\n      this.paginationEmmiter.emit(this.paginationParams);\n    } else {\n      const col = this.tableModel.columns.find(col => col.id === sort.active);\n      if (col.customSort) {\n        this.dataSource.customSortColumn = true;\n      } else {\n        this.dataSource.customSortColumn = false;\n      }\n    }\n  }\n\n  pagination(event): void {\n    if (this.dataSource.fromBackendData) {\n      this.paginationParams['pageIndex'] = event.pageIndex;\n      this.paginationParams['pageSize'] = event.pageSize;\n      this.paginationEmmiter.emit(this.paginationParams);\n    }\n  }\n\n  // Whether the number of selected elements matches the total number of rows\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.paginator.pageSize;//this.dataSource.data.length;\n    return numSelected == numRows;\n  }\n\n  // Selects all rows if they are not all selected; otherwise clear selection\n  masterToggle() {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    const sliceData = this.dataSource.data.slice(startIndex, startIndex + this.paginator.pageSize);\n    this.isAllSelected() ?\n      this.selection.clear() :\n      sliceData.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n  clickRow($event, rowElement): void {\n    if (!this.tableModel.expandRowSupport) return;\n    this.expandedElement = this.expandedElement === rowElement ? null : rowElement;\n  }\n\n  // pageChange(event): void {\n  //   console.log(event);\n  // }\n\n  // renderRows(): void {\n  //   console.log('table will not automatically check for changes to the data array.when objects are added, removed, or moved on the data array, you can trigger an update to the tables rendered rows')\n  // }\n\n  batchRemove(): void {\n    if (!this.selection.hasValue()) return;\n    this.deleteEmmiter.emit(this.selection.selected);\n    this.selection.clear();\n  }\n\n  refresh(): void {\n    this.selection.clear();\n    if (this.dataSource.fromBackendData) {\n      this.refreshEmmiter.emit(this.paginationParams);\n    } else {\n      this.refreshEmmiter.emit();\n    }\n  }\n\n  // set Column Filter Icon Event Listener\n  filterIconEventListener() {\n    setTimeout( () => {\n      this.tableModel.columns.forEach((item) => {\n        if (item.filterTool && item.filterTool === true) {\n          document.getElementById(item.id).addEventListener('click', (e) => { e.stopPropagation(); }, false); // 阻止冒泡事件傳遞\n        }\n      });\n    }, 0);\n  }\n\n  // open Column Filter Selector\n  openColumnFilterSelector($columnId) {\n    if (this.columnFilterSelectorOpened === $columnId) {\n      this.columnFilterSelectorOpened = 'no-one-opened';\n    } else {\n      // open column Id\n      this.columnFilterSelectorOpened = $columnId;\n      setTimeout( () => {\n      //set filter Option List position\n      let filterOptionListElement = document.getElementById(`${$columnId}FilterList`);\n      const element = document.getElementById($columnId);\n      const elementPosition = this.getElementPosition(element);\n      let tableElement = this.getElementBelongsToClass(element, 'mat-data-table');\n      tableElement.style.position = 'relative';\n      const tableElementPosition = this.getElementPosition(tableElement);\n      // set style to filterOptionListElement\n      // let adjustHeightByHeaderActions = 0;\n      // if (this.tableModel.hiddenHeaderActions == true ) {\n      //   adjustHeightByHeaderActions = 0;\n      // }\n      filterOptionListElement.style.display = 'block';\n      filterOptionListElement.style.top = `${elementPosition.y - tableElementPosition.y + 30}px`;\n      filterOptionListElement.style.left = `${elementPosition.x - tableElementPosition.x - 20}px`;\n      }, 0);\n    }\n  }\n\n  // close Column Filter Selector  *only used by addEventListener\n  closeColumnFilterSelector($eventElement) {\n    if (this.columnFilterSelectorOpened === 'no-one-opened') { return; }\n    // if class of the selected elememt is 'columnCellFilterForm', keep Column Filter Selector open.\n    // otherwise, check if the selected elememt belongs to target elememt(Opened-Filter-List), if false, close Column Filter Selector\n    const classList = Array.from($eventElement.target.classList) || [];\n    if (!classList.includes('columnCellFilterForm')){\n      const filterOptionListElement = document.getElementById(`${this.columnFilterSelectorOpened}FilterList`);\n      let selectedElememt = $eventElement.srcElement ;\n      const isInTarget = this.isInTargetNode(selectedElememt, filterOptionListElement)\n      if (isInTarget === false) {\n        this.columnFilterSelectorOpened = 'no-one-opened';\n      }\n    }\n  }\n\n  // check if the selected elememt belongs to target elememt\n  isInTargetNode(element, targetElement){ //elemet是被點選元素，判斷是否在目標targetElement中\n    if(!element || element === document) { return false; }\n    return element === targetElement ? true : this.isInTargetNode(element.parentNode, targetElement);\n  }\n\n  // get parent element of speciy elememt and that should belong to Specified class\n  getElementBelongsToClass(_element, SpecifiedClass){\n    let element = _element;\n    if(!element || element === document) { return document.getElementsByClassName(SpecifiedClass)[0]; }\n    let classList = Array.from(element.classList) || [];\n    if (classList.includes(SpecifiedClass)){\n      return element;\n    } else {\n      return this.getElementBelongsToClass(element.parentElement, SpecifiedClass);\n    }\n  }\n\n  // generate column Filter List Id\n  getColumnFilterListId($columnId) {\n    return `${$columnId}FilterList`;\n  }\n\n  //display Column Filter Form\n  displayColumnCellFilterForm($columnId) {\n    return this.columnFilterSelectorOpened == $columnId;\n  }\n\n  getElementPosition (element) {\n    var x = 0;\n    var y = 0;\n    while ( element ) {\n      x += element.offsetLeft - element.scrollLeft + element.clientLeft;\n      y += element.offsetTop - element.scrollLeft + element.clientTop;\n      element = element.offsetParent;\n    }\n    return { x: x, y: y };\n  }\n\n  getColumnCellFilterOpionList(data) {\n    if(!data) { return; }\n    if (Object.keys(this.columnFilterStorage).length === 0) { return; }\n    const filterToolColumnList = Object.keys(this.columnFilterStorage);\n    for ( let columnIndex = 0; columnIndex < filterToolColumnList.length; columnIndex++ ) {\n\n      let _opionList = [];\n      for ( let i = 0; i < data.length; i++) {\n        _opionList.push(data[i][filterToolColumnList[columnIndex]]);\n      }\n      const opionList = [...new Set(_opionList)];\n      for ( let i = 0; i < opionList.length; i++) {\n        if(!opionList[i] && opionList[i] != 0) {\n          opionList[i] = {\n            'name': ' ',\n            'completed': true\n          };\n        } else {\n          opionList[i] = {\n            'name': opionList[i].toString(),\n            'completed': true\n          };\n        }\n      }\n      this.columnFilterStorage[filterToolColumnList[columnIndex]] = opionList;\n      this.columnCellFilterFormCheckBoxAllCompleted[filterToolColumnList[columnIndex]] = true;\n    }\n    this.dataSource.filterPredicate = this.updateFilterPredicateFunction().bind(this);\n    this.updateDataWithColumnCellFilter();\n  }\n\n  updateColumnCellFilterFormCheckBoxAllComplete(columnId: string) {\n    this.columnCellFilterFormCheckBoxAllCompleted[columnId] = this.columnFilterStorage[columnId] != null && this.columnFilterStorage[columnId].every(option => option.completed);\n    this.updateDataWithColumnCellFilter();\n  }\n\n  someColumnCellFilterFormCheckBoxComplete(columnId: string): boolean {\n    if (this.columnFilterStorage[columnId] == null) {\n      return false;\n    }\n    return this.columnFilterStorage[columnId].filter(option => option.completed).length > 0 && !this.columnCellFilterFormCheckBoxAllCompleted[columnId];\n  }\n\n  setAllColumnCellFilterFormCheckBoxComplete(isCompleted: boolean, columnId: string) {\n    if (this.columnFilterStorage[columnId] == null) {\n      return;\n    }\n    this.columnFilterStorage[columnId].forEach(option => option.completed = isCompleted);\n    //update data first, then update status and refresh filtered data\n    this.columnCellFilterFormCheckBoxAllCompleted[columnId] = isCompleted;\n    this.updateDataWithColumnCellFilter();\n  }\n\n  updateDataWithColumnCellFilter() {\n    if(this.searchResult === '') {\n      this.getSearchResult('◬'); // angular official used '◬'; Because '' would not go through Filter Predicate Function\n    } else {\n      this.getSearchResult(this.searchResult);\n    }\n  }\n\n  updateFilterPredicateFunction() {\n    const updatedFilterPredicate = function(data, filter: string) :boolean {\n      let isPicked: boolean;\n      // handle filter Tool Column -- start\n      let isPickedBetweenColumn: boolean = true; // if true, this data should be in the INTERSECTION between columns\n      const filterToolColumnList = Object.keys(this.columnFilterStorage) || [];\n      if (filterToolColumnList.length > 0) {\n        for ( let columnIndex = 0; columnIndex < filterToolColumnList.length; columnIndex++ ) {\n          const columnName = filterToolColumnList[columnIndex];\n          let isPickedWithinColumn: boolean = false; // if true, this data should be in the UNION of options selected\n          let dataValue = (!data[columnName] &&  (data[columnName] != 0)) ? ' ' : data[columnName].toString();\n          for ( let optionIndex = 0; optionIndex < this.columnFilterStorage[columnName].length; optionIndex++ ) {\n            if (this.columnFilterStorage[columnName][optionIndex].completed === true && this.columnFilterStorage[columnName][optionIndex].name) {\n              isPickedWithinColumn = isPickedWithinColumn || dataValue.toString().toLowerCase() === this.columnFilterStorage[columnName][optionIndex].name.toString().toLowerCase();\n            }\n          } // now, already gotten updated 'isPickedWithinColumn'\n          isPickedBetweenColumn = isPickedBetweenColumn && isPickedWithinColumn;\n        }\n      }\n      // handle filter Tool Column -- end\n\n      // handle searching Filter -- start\n      let isPickedBySearching: boolean = true;\n      const dataStr = // Transform the data into a lowercase string of all property values\n        Object.keys(data)\n          .reduce(( (currentTerm, key) => {\n              return currentTerm + (data)[key] + '◬'; // angular official used '◬';\n          } ), '').toLowerCase();\n\n      const transformedFilter = filter.trim().toLowerCase();\n      isPickedBySearching = dataStr.indexOf(transformedFilter) != -1;\n      // handle searching Filter -- end\n\n      isPicked = isPickedBetweenColumn && isPickedBySearching;\n      return isPicked;\n    }\n    return updatedFilterPredicate;\n  }\n\n  onDestroyFilterToolSetting() {\n    this.columnFilterStorage = {};\n    this.dataSource.filterPredicate = this.originFilterPredicate;\n  }\n\n  mouseoverEmmiter(event, element) {\n    if (!this.tableModel.hoverRowEmitEvent) {return;}\n    this.overRowEmmiter.emit({\n      rowData: element,\n      mouseX: event.clientX,\n      mouseY: event.clientY\n    });\n  }\n\n  mouseleaveEmmiter(element) {\n    if (!this.tableModel.hoverRowEmitEvent) {return;}\n    this.leaveRowEmmiter.emit(element);\n  }\n\n}\n","<div class=\"mat-data-table\">\n  <ng-container *ngIf=\"!tableModel.hiddenHeaderActions\">\n    <div class=\"mat-data-table-header\">\n      <!-- <div class=\"table-header-title\">列表</div> -->\n      <div class=\"table-header-actions\">\n        <ng-content select=\".table-header-actions\"></ng-content>\n        <button mat-flat-button class=\"margin-right-16 secondary-button\" [ngClass]=\"{'hidden': tableModel.hiddenRefresh}\"\n          (click)=\"refresh()\">\n          <mat-icon>refresh</mat-icon>\n          <span>{{'COMPONENT.DATA_TABLE.ACTION.REFRESH'|translate}}</span>\n        </button>\n        <button mat-flat-button class=\"margin-right-16 secondary-button hidden\" (click)=\"toggleFilter()\">\n          <mat-icon>filter_list</mat-icon>\n          <span>{{'COMPONENT.DATA_TABLE.ACTION.FILTER'|translate}}</span>\n        </button>\n        <button mat-flat-button class=\"margin-right-16 secondary-button\" (click)=\"toggleCustomize()\" [ngClass]=\"{'hidden': tableModel.hiddenCustomize}\">\n          <mat-icon>view_column</mat-icon>\n          <span>{{'COMPONENT.DATA_TABLE.ACTION.CUSTOMIZE'|translate}}</span>\n        </button>\n        <button mat-flat-button class=\"margin-right-16 secondary-button\" [ngClass]=\"{'hidden': selection.isEmpty()}\"\n          (click)=\"batchRemove()\">\n          <mat-icon>delete</mat-icon>\n          <span>{{'COMPONENT.DATA_TABLE.ACTION.DELETE'|translate}}</span>\n        </button>\n        <!-- <button mat-flat-button class=\"margin-right-16 secondary-button\">\n          <mat-icon>cloud_download</mat-icon>\n          <span>{{'COMPONENT.DATA_TABLE.ACTION.EXPORT'|translate}}</span>\n        </button> -->\n        <ng-container *ngTemplateOutlet=\"model.actionsTemplate\">\n        </ng-container>\n      </div>\n      <div class=\"table-header-icon-actions\" *ngIf=\"!model.hiddenSearch\">\n        <app-input [property]=\"search\" (searchEmmiter)=\"getSearchResult($event)\"></app-input>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"mat-data-table-body\">\n    <mat-table #matTable mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows\n      (matSortChange)=\"sortData($event)\">\n      <ng-container matColumnDef=\"filter\">\n        <mat-header-cell *matHeaderCellDef [attr.colspan]=\"columnsToDisplay.length\">\n          <div class=\"filter-container\" [ngClass]=\"{'show-filter': toggleFilterFlag}\">\n            Todo filter function\n          </div>\n        </mat-header-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"customize\">\n        <mat-header-cell *matHeaderCellDef [attr.colspan]=\"columnsToDisplay.length\">\n          <div class=\"customize-container\" [ngClass]=\"{'show-customize': toggleCustomizeFlag}\">\n            <div class=\"customize-wrapper\">\n              <ng-container *ngFor=\"let item of tableModel.columns;let i=index\">\n                <ng-container *ngIf=\"i>0\">\n                  <div class=\"column-item\">\n                    <mat-checkbox class=\"example-margin\" [(ngModel)]=\"item.visible\"\n                      (change)=\"columnVisibleChange(item)\">\n                      {{item.displayName}}\n                    </mat-checkbox>\n                  </div>\n                </ng-container>\n              </ng-container>\n            </div>\n          </div>\n        </mat-header-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"expand\" *ngIf=\"tableModel.expandRowSupport\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          <mat-icon [@expendSwitch]=\"element == expandedElement ? 'expanded': 'collapsed'\">\n            expand_more\n          </mat-icon>\n        </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"select\" *ngIf=\"tableModel.selectionSupport\">\n        <mat-header-cell *matHeaderCellDef>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\"\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel('')\">\n          </mat-checkbox>\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n            [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\n          </mat-checkbox>\n        </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"{{column.id}}\" [sticky]=\"i === 0 && !tableModel.noneStickyHeaderRow\"\n        *ngFor=\"let column of tableModel.columns let i=index\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header [disabled]=\"column.sort === 'disabled'\"\n          [start]=\"column.sort !== 'disabled' && column.sort\" [maxColumnWidth]=\"column.maxWidth\"\n          [minColumnWidth]=\"column.minWidth\">\n          {{column.displayName}}\n          <!-- Filter Tool of Specified Column Anchor point-- Start -->\n          <div [id]=\"column.id\"\n               class=\"columnCellFilterForm\"\n               style=\"padding-top: 8px; margin-left: 5px; cursor: pointer;\"\n               *ngIf=\"column.filterTool===true\"\n               (click)=\"openColumnFilterSelector(column.id)\">\n            <mat-icon class=\"columnCellFilterForm\" style=\"color: #656565; font-size: 18px; width: 18px; height: 18px;\">\n                filter_alt\n            </mat-icon>\n          </div>\n          <!-- Filter Tool of Specified Column Anchor point-- End -->\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" [maxColumnWidth]=\"column.maxWidth\" [minColumnWidth]=\"column.minWidth\">\n          <div *ngIf=\"!column.customCellTemplate; else customCellTemplate\" [ngStyle]=\"column.style\">\n            <div matTooltip=\"{{element[column.id]}}\" [matTooltipShowDelay]=\"500\">\n              {{element[column.id]}}\n            </div>\n          </div>\n          <ng-template #customCellTemplate>\n            <ng-template [ngTemplateOutlet]=\"column.customCellTemplate\" [ngTemplateOutletContext]=\"{ row: element }\">\n            </ng-template>\n          </ng-template>\n        </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"expandedDetail\" *ngIf=\"tableModel.expandRowSupport\">\n        <mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n          <!-- <div class=\"element-detail\" [ngClass]=\"{'expanded': element == expandedElement}\">\n            <ng-container *ngTemplateOutlet=\"model.expandRowTemplate; context:{ row: element }\">\n            </ng-container>\n          </div> -->\n          <div class=\"element-detail\" [@detailContent]=\"expandedElement === element ? 'expanded': 'collapsed'\">\n            <ng-container *ngTemplateOutlet=\"model.expandRowTemplate; context:{ row: element }\">\n            </ng-container>\n          </div>\n        </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"noRecord\">\n        <mat-footer-cell *matFooterCellDef [attr.colspan]=\"columnsToDisplay.length\">\n          <div class=\"message\" [ngClass]=\"{'show-message': filteredDataLength === 0}\">\n            {{'COMPONENT.DATA_TABLE.MESSAGE.NO_DATA'|translate}}\n          </div>\n        </mat-footer-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"loading\">\n        <mat-footer-cell *matFooterCellDef [attr.colspan]=\"columnsToDisplay.length\">\n          <mat-spinner [diameter]=\"32\"></mat-spinner>\n        </mat-footer-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"['filter']\" class=\"filter-table-columns\"\n        [ngClass]=\"{'show-filter': toggleFilterFlag}\">\n      </mat-header-row>\n      <mat-header-row *matHeaderRowDef=\"['customize']\" class=\"customize-table-columns\"\n        [ngClass]=\"{'show-customize': toggleCustomizeFlag}\">\n      </mat-header-row>\n      <!-- checkbox选中页面其他checkbox会闪烁 -->\n      <!-- <mat-header-row *matHeaderRowDef=\"['customize']\" class=\"customize-table-columns\"\n        [@actionExpand]=\"toggleCustomizeFlag ? 'expanded': 'collapsed'\">\n      </mat-header-row> -->\n      <mat-header-row *matHeaderRowDef=\"columnsToDisplay; sticky: !tableModel.noneStickyHeaderRow;\"></mat-header-row>\n      <mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"element-row\"\n        (click)=\"clickRow($event, element)\" [ngClass]=\"{'hiden-element': loading}\"\n        (mouseover) =\"mouseoverEmmiter($event, element)\" (mouseleave) =\"mouseleaveEmmiter(element)\"\n        [class.expanded-row]=\"expandedElement === element\">\n      </mat-row>\n      <ng-container *ngIf=\"tableModel.expandRowSupport\">\n        <mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"\n          [ngClass]=\"{'hiden-element': loading}\"\n          [class.expanded-row]=\"expandedElement === row\"></mat-row>\n        <!-- <mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"></mat-row> -->\n      </ng-container>\n      <mat-footer-row *matFooterRowDef=\"['noRecord']\" class=\"noRecord-footer-row\"\n        [ngClass]=\"{'show-record': !loading && filteredDataLength === 0}\"></mat-footer-row>\n      <mat-footer-row *matFooterRowDef=\"['loading']\" class=\"loading-footer-row\" [ngClass]=\"{'show-loading': loading}\">\n      </mat-footer-row>\n    </mat-table>\n    <mat-paginator [length]=\"filteredDataLength\" [pageSizeOptions]=\"[10, 20, 50]\" [pageSize]=\"customPageSize\" (page)=\"pagination($event)\"\n      showFirstLastButtons [ngClass]=\"{hidePaginator: hidePaginator}\">\n    </mat-paginator>\n    <ng-container *ngFor=\"let column of tableModel.columns\">\n      <ng-container *ngIf=\"column.filterTool===true\">\n        <div [id]=\"getColumnFilterListId(column.id)\" class=\"columnCellFilterOptionList columnCellFilterForm\" *ngIf=\"displayColumnCellFilterForm(column.id)\">\n          <span class=\"list-section columnCellFilterForm\">\n            <mat-checkbox class=\"columnCellFilterForm\"\n                          [checked]=\"columnCellFilterFormCheckBoxAllCompleted[column.id]\"\n                          [indeterminate]=\"someColumnCellFilterFormCheckBoxComplete(column.id)\"\n                          (change)=\"setAllColumnCellFilterFormCheckBoxComplete($event.checked, column.id)\">\n              ALL\n            </mat-checkbox>\n          </span>\n          <span class=\"list-section columnCellFilterForm\">\n            <div *ngFor=\"let option of columnFilterStorage[column.id]\" class=\"columnCellFilterForm\">\n              <mat-checkbox [(ngModel)]=\"option.completed\"\n                            (ngModelChange)=\"updateColumnCellFilterFormCheckBoxAllComplete(column.id)\"\n                            class=\"columnCellFilterForm\">\n                {{option.name}}\n              </mat-checkbox>\n            </div>\n          </span>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n","import { MatTableDataSource } from '@angular/material/table';\n\nexport class SelfDataSource<T> extends MatTableDataSource<T> {\n  private _backendPagination: boolean = false;\n  private _isCustomSortColumn: boolean = false;\n\n  get fromBackendData() {\n    return this._backendPagination;\n  }\n\n  set backendPagination(is: boolean) {\n    this._backendPagination = is;\n  }\n\n  get isCustomSortColumn () {\n    return this._isCustomSortColumn;\n  }\n  set customSortColumn(bool: boolean) {\n    this._isCustomSortColumn = bool;\n  }\n  constructor(initialData: T[] = []) {\n    super(initialData);\n  }\n\n  _filterData(data: T[]) {\n    if (!this._backendPagination) {\n      return super._filterData(data);\n    } else {\n      return this.data;\n    }\n  }\n\n  _orderData(data: T[]): T[] {\n    if (!this._backendPagination) {\n      if (this._isCustomSortColumn) {\n        if (this.sort.direction === '') return data;\n        if (this.sort.active === 'ip') {\n          return this.sortDataByIP(data.slice());\n        } else {\n          return super._orderData(data);  \n        }\n      } else {\n        return super._orderData(data);\n      }\n    } else {\n      return this.data;\n    }\n  }\n\n  _pageData(data: T[]): T[] {\n    if (!this._backendPagination) {\n      return super._pageData(data);\n    } else {\n      return this.data;\n    }\n  }\n\n  _updatePaginator(filteredDataLength: number) {\n    if (!this._backendPagination) {\n      super._updatePaginator(filteredDataLength);\n    }\n  }\n\n  sortDataByIP(data): T[] {\n    const nanArr = data.filter(item => isNaN(parseInt(item['ip'])))\n    const numberArr = data.filter(item => !isNaN(parseInt(item['ip'])))\n    numberArr.sort((a, b) => {\n      let aIP = this.getFirstIP(a['ip']);\n      let bIP = this.getFirstIP(b['ip']);\n      const aIPLen = aIP.split('.').length;\n      const bIPLen = bIP.split('.').length;\n      let comparatorResult = 0;\n      if (aIPLen === 4 && bIPLen === 4) {\n        const arr1 = aIP.split('.');\n        const arr2 = bIP.split('.');\n        for (let i = 0; i < 4; i++) {\n          if (parseInt(arr1[i]) > parseInt(arr2[i])) {\n            comparatorResult = 1;\n            return comparatorResult;\n          } else if (parseInt(arr1[i]) < parseInt(arr2[i])) {\n            comparatorResult = -1;\n            return comparatorResult;\n          }\n        }\n      } else if (aIPLen === 4) {\n        comparatorResult = 1;\n      } else if (bIPLen === 4) {\n        comparatorResult = -1;\n      }\n      return comparatorResult;\n    });\n    const totalArr = nanArr.concat(numberArr)\n    if (this.sort.direction === 'desc') {\n      totalArr.reverse();\n    }\n    return totalArr;\n  }\n\n  getFirstIP(data: T): string {\n    if (typeof data === 'string') {\n      return data.split(',')[0];\n    }\n    if (data instanceof Array) {\n      return data[0];\n    }\n    return data.toString();\n  }\n}","import {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger\n} from '@angular/animations';\n\nexport const EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4, 0.0, 0.2, 1)';\n\nexport const TableAnimations: {\n  readonly expendSwitch: AnimationTriggerMetadata;\n  // readonly detailExpand: AnimationTriggerMetadata;\n  readonly detailContent: AnimationTriggerMetadata;\n  readonly actionExpand: AnimationTriggerMetadata;\n} = {\n  expendSwitch: trigger('expendSwitch', [\n    state('collapsed', style({ transform: 'rotate(0deg)' })),\n    state('expanded', style({ transform: 'rotate(180deg)' })),\n    transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))\n  ]),\n  // detailExpand: trigger('detailExpand', [\n  //   state('collapsed', style({ height: 0, minHeight: 0, 'border-bottom-width': 0 })),\n  //   state('expanded', style({ height: '*', 'border-bottom-width': 0 })),\n  //   transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))\n  // ]),\n  detailContent: trigger('detailContent', [\n    state('collapsed, void', style({ height: 0  })),\n    state('expanded', style({ height: '*' })),\n    transition('expanded <=> collapsed, void => expanded', animate(EXPANSION_PANEL_ANIMATION_TIMING))\n  ]),\n  actionExpand: trigger('actionExpand', [\n    state('collapsed', style({ height: 0  })),\n    state('expanded', style({ height: '136px' })),\n    transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))\n  ])\n};","import {\n  Component, OnInit, ViewEncapsulation, ViewChild, ElementRef,\n  Output, EventEmitter, Input, OnChanges, SimpleChange\n} from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, map, distinctUntilChanged } from \"rxjs/operators\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { InputModel } from '../../../models/input';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.html',\n  styleUrls: ['./input.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class InputComponent implements OnInit, OnChanges {\n  @ViewChild('searchButton') searchButton: MatButton;\n  @ViewChild('inputContent', { static: true }) inputContent: ElementRef;\n  //todo change property disable\n  @Input() property: InputModel;\n  @Output() searchEmmiter = new EventEmitter<string>();\n\n  visiableSwitch: boolean = true;  //密码可见开关\n  isFocus: boolean = false;\n\n  constructor(private translate: TranslateService) { }\n\n  ngOnInit(): void {\n    this.initParams();\n  }\n  ngAfterViewInit(): void {\n    this.initKeyUpAction();\n  }\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }): void {\n    // console.log(changes);\n  }\n\n  initParams(): void {\n    this.property.type = this.property.type || 'text';\n    this.property.labelPosition = this.property.labelPosition || 'horizontal';\n    this.property.disable = this.property.disable || false;\n    this.property.required = this.property.required || false;\n    // this.property.content = this.property.content || '';\n  }\n\n  initKeyUpAction(): void {\n    fromEvent(this.inputContent.nativeElement, 'keyup')\n      .pipe(\n        map((event: any) => {\n          if (this.property.type === 'search') {\n            this.searchButton.disabled = event.target.value.length === 0 ? true : false;\n          }\n          return event.target.value;\n        })\n        , debounceTime(1000)\n        , distinctUntilChanged()\n      ).subscribe((text: string) => {\n        this.searchEmmiter.emit(text);\n      })\n  }\n\n  search(): void {\n    this.searchEmmiter.emit(this.property.content);\n  }\n\n  clear(): void {\n    this.property.content = '';\n    this.searchButton.disabled = true;\n    this.searchEmmiter.emit(this.property.content);\n    this.inputContent.nativeElement.focus();\n  }\n\n  onFocusEvent(): void {\n    this.isFocus = true;\n  }\n\n  onBlurEvent(): void {\n    this.isFocus = false;\n  }\n\n  changePasswordIcon(): void {\n    this.visiableSwitch = !this.visiableSwitch;\n    this.inputContent.nativeElement.type = this.visiableSwitch ? 'password' : 'text';\n  }\n}","<div class=\"input-field\">\n  <div class=\"input-container {{property.labelPosition}}\">\n    <ng-container *ngIf=\"property.labelValue\">\n      <div class=\"{{property.labelPosition}}-label\">\n        <mat-label>{{property.labelValue}}</mat-label>\n      </div>\n    </ng-container>\n    <div class=\"input-wrapper {{property.type}}\" [ngClass]=\"{'on-focus': isFocus}\">\n      <ng-container *ngIf=\"property.type === 'search'\">\n        <button #searchButton mat-icon-button aria-label=\"search\" class=\"search\" (click)=\"search()\" disabled>\n          <mat-icon class=\"md-18\">search</mat-icon>\n        </button>\n      </ng-container>\n      <input #inputContent matInput placeholder=\"{{property.placeholder}}\" type=\"{{property.type}}\"\n        [required]=\"property.required\" [pattern]=\"property.pattern\"\n        [disabled]=\"property.disable\" class=\"content\" [(ngModel)]=\"property.content\" (focus)=\"onFocusEvent()\"\n        (blur)=\"onBlurEvent()\">\n      <ng-container *ngIf=\"property.type === 'search'\">\n        <button mat-icon-button aria-label=\"clear\" class=\"clear\" [ngClass]=\"{visible: property.content}\"\n          (click)=\"clear()\">\n          <mat-icon class=\"md-18\">clear</mat-icon>\n        </button>\n      </ng-container>\n      <ng-container *ngIf=\"property.type === 'password'\">\n        <button #passwordVisibleButton mat-icon-button aria-label=\"clear\" class=\"password\"\n          [ngClass]=\"{visible: property.content}\" (click)=\"changePasswordIcon()\">\n          <mat-icon class=\"md-18\" *ngIf=\"visiableSwitch\">visibility</mat-icon>\n          <mat-icon class=\"md-18\" *ngIf=\"!visiableSwitch\">visibility_off</mat-icon>\n        </button>\n      </ng-container>\n    </div>\n    <div class=\"hint-wrapper\" *ngIf=\"property.hint\">\n      <mat-hint>{{property.hint}}</mat-hint>\n    </div>\n    <div class=\"error-wrapper\" *ngIf=\"property.errorHint\">\n      <mat-error >{{property.errorHint}}</mat-error>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-label-input',\n  templateUrl: './label-input.component.html',\n  styleUrls: ['./label-input.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class LabelInputComponent implements OnInit {\n  @Input() label: string;\n  @Input() labelTooltip?: string;\n  @Input() isNotFormInput: boolean = false;\n  @Input() isRequired: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"component-div\" [ngClass]=\"{'not-form-input': isNotFormInput, 'required': isRequired}\">\n  <div class=\"label\" [matTooltip]=\"labelTooltip || label\">\n    {{ label }}\n    <span>*</span>\n  </div>\n  <div>\n    <ng-content></ng-content>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgMaterialModule } from '../../ng-material/ng-material.module';\nimport { LabelInputComponent } from './label-input.component';\n\n\n\n@NgModule({\n  declarations: [LabelInputComponent],\n  imports: [\n    CommonModule,\n    NgMaterialModule\n  ],\n  exports: [LabelInputComponent]\n})\nexport class LabelInputModule { }\n","import { Component, Inject, ViewEncapsulation, OnInit, AfterViewInit, OnDestroy, ComponentRef } from '@angular/core';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ModalOverlayRef } from './overlay-ref.service';\nimport { MODAL_DATA, CHILD_FORM } from './modal.token';\nimport { FormGroup, FormBuilder, FormArray, FormControl } from '@angular/forms';\nimport { BaseModal } from './modal.base';\nimport { BasicModal } from '../../../models/modal';\n\n@Component({\n  selector: 'app-basic-modal',\n  templateUrl: './basic-modal.component.html',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./modal.component.scss']\n})\nexport class BasicModalComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public model: BasicModal,\n    private dialogRef: MatDialogRef<BasicModalComponent>) {\n  }\n  ngOnInit(): void {\n  }\n}\n\n@Component({\n  selector: 'app-application-modal',\n  templateUrl: './application-modal.component.html',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./modal.component.scss']\n})\nexport class ApplicationModalComponent implements OnDestroy {\n  modalOutlet: ComponentPortal<any>;\n  title: string;\n  parentForm = new FormGroup({});\n  formInvalid: boolean = true;\n  loadingStatus: boolean = false;\n\n  private componentRef: ComponentRef<BaseModal>;\n\n  constructor(\n    @Inject(MODAL_DATA) public data,\n    private modalOverlayRef: ModalOverlayRef) {\n    this.title = data.title;\n  }\n\n  close() {\n    this.modalOverlayRef.close(null);\n  }\n\n  validAllForm(formGroup: FormGroup | FormArray) {\n    for (let i in formGroup.controls) {\n      let absControl = formGroup.controls[i];\n      if (absControl instanceof FormControl) {\n        let control: FormControl = formGroup.controls[i];\n        control.markAsTouched();\n        control.updateValueAndValidity();\n      } else if (absControl instanceof FormGroup) {\n        let group: FormGroup = formGroup.controls[i];\n        this.validAllForm(group);\n      } else if (absControl instanceof FormArray) {\n        let formArray: FormArray = formGroup.controls[i];\n        this.validAllForm(formArray);\n      }\n    }\n  }\n\n  submit(): void {\n    if (this.parentForm.status !== 'VALID') {\n      this.validAllForm(<FormGroup>this.parentForm.get(CHILD_FORM));\n      return;\n    }\n\n    if (this.componentRef && this.componentRef.instance && this.componentRef.instance.submit) {\n      this.loadingStatus = true;\n      this.componentRef.instance.submit().subscribe(\n        (res) => {\n          this.loadingStatus = false;\n          this.modalOverlayRef.close(res);\n        },\n        (err) => {\n          this.loadingStatus = false;\n          this.modalOverlayRef.error(err);\n        }\n      )\n    } else {\n      this.modalOverlayRef.error(\"No submit function.\");\n    }\n\n  }\n\n  receiveReference(ref) {\n    this.componentRef = ref;\n  }\n\n  ngOnDestroy(): void {\n    this.modalOverlayRef.close(null);\n    this.parentForm = null;\n  }\n}\n\n","<div mat-dialog-title>\n  {{model.title}}\n  <mat-icon class=\"close-icon\" mat-dialog-close></mat-icon>\n</div>\n<div mat-dialog-content>\n  <ng-container *ngIf=\"model.content\">\n    {{model.content}}\n  </ng-container>\n  <ng-container *ngIf=\"model.template\">\n    <ng-template [ngTemplateOutlet]=\"model.template\"\n      [ngTemplateOutletContext]=\"{$implicit: model.data}\"></ng-template>\n    </ng-container>\n</div>\n<div mat-dialog-actions *ngIf=\"model.showCancelBtn || model.showSubmitBtn || model.showConfirmBtn\">\n  <ng-container *ngIf=\"model.showConfirmBtn\">\n    <button mat-raised-button [mat-dialog-close]=\"true\" [disabled]=\"model.formGroup?!model.formGroup.valid:false\" type=\"submit\">\n      {{'CONPONENT.MODAL.ACTIONS.BUTTON.CONFIRM'|translate}}\n    </button>\n  </ng-container>\n  <ng-container *ngIf=\"model.showSubmitBtn\">\n    <button mat-raised-button [mat-dialog-close]=\"true\" [disabled]=\"model.formGroup?!model.formGroup.valid:false\"  type=\"submit\">\n      {{'CONPONENT.MODAL.ACTIONS.BUTTON.SUBMIT'|translate}}\n    </button>\n  </ng-container>\n  <ng-container *ngIf=\"model.showCancelBtn\">\n    <button mat-stroked-button mat-dialog-close>\n      {{'CONPONENT.MODAL.ACTIONS.BUTTON.CANCEL'|translate}}\n    </button>\n  </ng-container>\n</div>\n","<div class=\"modal-container\">\n\n  <div class=\"modal-header\">\n    <div class=\"modal-header-inner\">\n      <div class=\"modal-header-text\">{{title}}</div>\n      <div class=\"flex-grow\"></div>\n      <div class=\"modal-header-actions\">\n        <button mat-stroked-button (click)=\"close()\">{{'CONPONENT.MODAL.ACTIONS.BUTTON.CANCEL'|translate}}</button>\n        <button mat-raised-button (click)=\"submit()\" style=\"position: relative;\">\n          {{'CONPONENT.MODAL.ACTIONS.BUTTON.SUBMIT'|translate}}\n          <ng-container *ngIf=\"loadingStatus\">\n            <mat-spinner  color=\"accent\" [diameter]=\"20\" style=\"position: absolute; top: 7px; left: 85px;\"></mat-spinner>\n          </ng-container>\n        </button>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"modal-content\">\n    <ng-template #target (attached)=\"receiveReference($event)\" [cdkPortalOutlet]=\"modalOutlet\">\n    </ng-template>\n  </div>\n\n</div>\n","import { Injectable, TemplateRef, ComponentRef, Injector } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { BasicModalComponent, ApplicationModalComponent } from './modal.component';\nimport { Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport { PortalInjector, ComponentPortal } from '@angular/cdk/portal';\nimport { ModalOverlayRef } from './overlay-ref.service';\nimport { MODAL_DATA, PARENT_FORM } from './modal.token';\nimport { BasicModal } from '../../../models/modal';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasicModalService {\n  private dialogRef: MatDialogRef<BasicModalComponent>;\n  constructor(public dialog: MatDialog) { }\n\n  openBasicDialog(model: BasicModal, additionalDialogConfigData?: any)\n    : MatDialogRef<BasicModalComponent> {\n    if (this.dialogRef) {\n      this.dialogRef.close();\n    }\n    this.dialogRef = this.dialog.open(BasicModalComponent, {\n      panelClass: 'basic-modal',\n      maxWidth: '90%',\n      data: model,\n      ...additionalDialogConfigData\n    });\n    this.dialogRef.addPanelClass(model.size || 'small')\n    return this.dialogRef;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApplicationModalService {\n  dialogComponentRef: ComponentRef<any>;\n\n  constructor(\n    private overlay: Overlay,\n    private injector: Injector,\n  ) {}\n\n  open<R = any, T = any>(\n    content: string | TemplateRef<any> | any,\n    data: T\n  ): ModalOverlayRef<R> {\n    const configs = new OverlayConfig({\n      hasBackdrop: true,\n      backdropClass: 'modal-background',\n      panelClass: 'application-overlay-wrapper'\n    });\n    const overlayRef = this.overlay.create(configs);\n    const modalOverlayRef = new ModalOverlayRef<R, T>(overlayRef);\n    const parentInjector = this.createInjector(modalOverlayRef, data);\n    const parentComponent = new ComponentPortal(ApplicationModalComponent, null, parentInjector);\n    const componentRef = overlayRef.attach(parentComponent);\n    const parentForm = componentRef.instance.parentForm;\n    data[PARENT_FORM] = parentForm;\n    const childInjector = this.createInjector(modalOverlayRef, data);\n    const childComponent = new ComponentPortal(content, null, childInjector);\n    componentRef.instance.modalOutlet = childComponent;\n    return modalOverlayRef;\n  }\n\n  private createInjector(ref: ModalOverlayRef, data: any) {\n    const injectorTokens = new WeakMap();\n    injectorTokens.set(MODAL_DATA, data);\n    injectorTokens.set(ModalOverlayRef, ref);\n    return new PortalInjector(this.injector, injectorTokens);\n  }\n}","import { InjectionToken } from '@angular/core';\nimport { ApplicationModalConfig } from '../../../models/modal';\n\nexport const MODAL_DATA = new InjectionToken<ApplicationModalConfig>('MODAL_DATA');\nexport const PARENT_FORM = 'parentForm'\nexport const CHILD_FORM = 'childForm';","import { Subject, Subscription } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\nimport { OverlayRef } from \"@angular/cdk/overlay\";\n\nexport interface OverlayCloseEvent<R> {\n  type: 'backdropClick' | 'close';\n  data: R;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalOverlayRef<R = any, T = any> {\n  afterClose$ = new Subject<OverlayCloseEvent<R>>();\n\n  constructor(\n    public overlay: OverlayRef\n    ) { }\n\n  public error(err: any) {\n    this.afterClose$.error(err);\n    this.afterClose$.complete();\n    this.overlay.dispose();\n  }\n\n  public close(data?: R) {\n    this._close('close', data);\n  }\n\n  private _close(type: 'backdropClick' | 'close', data: R) {\n    this.afterClose$.next({type: type, data: data});\n    this.afterClose$.complete();\n    this.overlay.dispose();\n  }\n\n  public subscribe(\n    next?: (value: OverlayCloseEvent<R>) => void,\n    error?: (error: any) => void\n  ): Subscription {\n    let subscription = this.afterClose$.subscribe(\n      (res) => next ? next(res) : () => {\n      },\n      err => error ? error(err) : () => {\n      });\n    return subscription;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    PortalModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    ScrollingModule,\n    MatFormFieldModule\n  ]\n})\nexport class NgMaterialModule { }\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {LoginService, APP_MARSMIDDLE_USER_ROLE, APP_MARSMIDDLE_LOGIN_TOKEN} from '../../pages/login/service/login.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private loginService: LoginService,\n    private router: Router\n  ) { }\n\n  canActivate(): boolean {\n    return this.checkLogin();\n  }\n\n  checkLogin(): boolean {\n    const loginToken: string = localStorage.getItem(APP_MARSMIDDLE_LOGIN_TOKEN);\n    // console.log('AuthGuard#canActivate called', loginToken);\n    if (!loginToken) {\n      this.router.navigate(['/login'], {queryParams: {returnUrl: window.location.pathname}});\n      return false;\n    }\n    return true; \n  }\n\n}\n","export const apiUrl = window.location.origin + '/marsmiddle/api/v1';","import { Injectable } from '@angular/core';\nimport { delay, tap } from 'rxjs/operators';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from \"@angular/router\";\nimport { APP_MARSMIDDLE_LOGIN_TOKEN } from '../../pages/login/service/login.service';\n\n// Set Token in Headers into HttpRequest\n@Injectable()\nexport class TokenAuthHttpInterceptor implements HttpInterceptor {\n  constructor() { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token: string = localStorage.getItem(APP_MARSMIDDLE_LOGIN_TOKEN) || '';\n    // console.log('TokenAuth #HttpInterceptor called: ', token);\n    const requestWithToken = req.clone({ setHeaders: {Authorization: `Bearer ${token}`}});\n    return next.handle(requestWithToken);\n  }\n}\n\n//  deal with Unauthorized error 401 & error messages\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(\n    private router: Router,\n  ) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      tap(event => {\n      }, error => {\n        // update error message by the language\n        const errorMassageMultiLanguage = JSON.parse(localStorage['marsMiddleErrorMassageMultiLanguage']) || { };\n        const errorMassageKeys = Object.keys(errorMassageMultiLanguage);\n        const selectLanguage = localStorage['language'] || 'cn';\n        const errorMessage = error.error?.error?.message || '';\n        const errorParams: string[] = error.error?.error?.details || [];\n        if (errorMessage && errorMassageKeys.includes(errorMessage)) {\n          if (selectLanguage === 'cn') {\n            error.error.error.message = this.updateParams(errorMassageMultiLanguage[errorMessage].zh, errorParams);\n          } else {\n            error.error.error.message = this.updateParams(errorMassageMultiLanguage[errorMessage].en, errorParams);\n          }\n        }\n        // navigate to login page when user's authourization is invalid or expired\n        const isRoleError: boolean = error.error?.error?.message?.toUpperCase().includes('ROLE') || false;\n        if (error.status === 401 && !isRoleError) {\n          this.router.navigate(['/login'], {queryParams: {returnUrl: window.location.pathname}});\n          return;\n        }\n        // navigate to login page when server is not turned on\n        if (error.status === 0) {\n          this.router.navigate(['/login'], {queryParams: {returnUrl: window.location.pathname}});\n          return;\n        }\n        \n      }),\n      delay(200)\n    );\n  }\n\n  private updateParams(message: string, params: string[]): string{\n    if (params.length === 0) { return message; }\n    let returnMessage: string = message;\n    for (let i = 0; i < params.length; i++) {\n      const paramSequence: string = `%${i+1}`;\n      returnMessage = returnMessage.replace(paramSequence, params[i]);\n    }\n    return returnMessage;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18nService {\n\n  constructor() { }\n\n\tgetLanguage(): string{\n\t\tif (localStorage){\n\t\t\treturn localStorage['language'] || 'cn';\n\t\t}\n\t\telse{\n\t\t\treturn 'cn';\n\t\t}\n\t}\n\n\tsetLanguage(language: string){\n\t\tif (localStorage){\n\t\t\tlocalStorage['language'] = language;\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainFrameOperatorService {\n  appDrawerRef: any;\n  currentUrl = new BehaviorSubject<string>(undefined);\n\n  constructor(\n    private router: Router\n  ) {\n    this.router.events.subscribe((event: Event) => {\n      if (event instanceof NavigationEnd) {\n        this.currentUrl.next(event.urlAfterRedirects);\n      }\n    });\n  }\n\n  closeDrawer() {\n    this.appDrawerRef.close();\n  }\n\n  openDrawer() {\n    this.appDrawerRef.open();\n  }\n\n  getDrawerWidth() {\n    const drawerDom = this.appDrawerRef._elementRef.nativeElement;\n\n    return drawerDom.offsetWidth;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockDataService {\n\n  constructor() { }\n\n  getMockEvents() {\n    const mockData = {\n      events: [\n        {\n          title: 'Event01',\n          timestamp: 'Tue, 18 Oct 2022 03:07:01 GMT',\n          confirm: true\n        },{\n          title: 'Event02',\n          timestamp: 'Tue, 15 Oct 2022 03:07:01 GMT',\n          confirm: false\n        },{\n          title: 'Event03',\n          timestamp: 'Tue, 18 Oct 2022 13:07:01 GMT',\n          confirm: false\n        },{\n          title: 'Event04',\n          timestamp: 'Tue, 16 Oct 2022 03:17:01 GMT',\n          confirm: true\n        }\n      ],\n      unReadCounter: 2\n    };\n\n    return of(mockData);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegexService {\n\tprivate ruleMap = new Map();\n\n  constructor() {\n    this.ruleMap.set('number', /^[0-9]+$/);\n    this.ruleMap.set('name_en_15', /^[A-Za-z\\d_-]{1,15}$/);\n    this.ruleMap.set('username_5_20', /^[A-Za-z\\d_-]{5,20}$/);\n    this.ruleMap.set('password_8', /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)[\\w\\W]{8,}$/);\n    this.ruleMap.set('ipv4', /^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$/);\n  }\n\n\tgetRule(type: string): RegExp {\n\t\treturn this.ruleMap.get(type);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { IndividualConfig } from 'ngx-toastr/toastr/toastr-config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastrOperatorService {\n\n  constructor(\n    private toastrService: ToastrService\n  ) { }\n\n  showSuccessToastr(message?: string, title?: string, toastrConfig?: Partial<IndividualConfig>) {\n    if (toastrConfig === undefined) {\n      toastrConfig = {\n        closeButton: true,\n        easeTime: 500,\n        extendedTimeOut: 500,\n        timeOut: 1500,\n        tapToDismiss: true\n      };\n    }\n\n    return this.toastrService.success(message, title, toastrConfig);\n  }\n\n  showWarningToastr(message?: string, title?: string, toastrConfig?: Partial<IndividualConfig>): any {\n    if (toastrConfig === undefined) {\n      toastrConfig = {\n        closeButton: true,\n        easeTime: 500,\n        extendedTimeOut: 500,\n        timeOut: 4000,\n        tapToDismiss: true\n      };\n    }\n\n    return this.toastrService.warning(message, title, toastrConfig);\n  }\n\n  showErrorToastr(message?: string, title?: string, toastrConfig?: Partial<IndividualConfig>): any {\n    if (toastrConfig === undefined) {\n      toastrConfig = {\n        closeButton: true,\n        easeTime: 500,\n        extendedTimeOut: 500,\n        timeOut: 4000,\n        tapToDismiss: true\n      };\n    }\n\n    return this.toastrService.error(message, title, toastrConfig);\n  }\n\n  clearToastr(){\n    this.toastrService.clear();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}